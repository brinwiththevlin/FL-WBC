Running fedavg.py with --dataset=mnist --label_tampering=none --weight_tampering=none

Experimental details:
    Model     : cnn
    Optimizer : sgd
    Learning  : 0.01
    Global Rounds   : 100

    Federated parameters:
    IID
    Fraction of users  : 0.1
    Local Batch size   : 10
    Local Epochs       : 10

CNNMnist(
  (conv1): Conv2d(1, 10, kernel_size=(5, 5), stride=(1, 1))
  (conv2): Conv2d(10, 20, kernel_size=(5, 5), stride=(1, 1))
  (conv2_drop): Dropout2d(p=0.5, inplace=False)
  (fc1): Linear(in_features=320, out_features=50, bias=True)
  (fc2): Linear(in_features=50, out_features=10, bias=True)
)
[4645 6262 9534 4844 9414 8545 5412 6903 7499 6311 9219 7837 2984 2488
 5441 9145 7852 3536 3672 7895   47 3592 2291 5103 7365  951 6039 5706
 1261 5384 5563  827 5271 5408 2291 8082 3723 6206 4459 2857 7587 5425
 1230 9733 1662  851 6061 8506 3071 3524 4809 9144 7018 6360 4651 6157
  732  453 3360 6232 8924 3800 2870 3376 2390  965 6641 1244 1501 6834
 7521 1420 6514 9325 7960 4454 1551 6838 2121 6359 3102 5679 6495 6699
  161 1858 4017 7183 3072 6998 4389 5466 9150  190 5598 2883 9051 6283
 2154 2651 8879 1392 5567 4391 2243 3411 6517 8391 8724 3293 4652 3268
  544 7388 2300 7267 2210 2954 4928 3267 7491 8669 2209 5559 5775 8269
  763 8677 7069 6618 4300 4873 3508  868 5957 8556 6344 2606 1413 8812
 5578 6694  250 3219 4361 5951 7839 4370 5851 2674 9187 4996 6009 2899
 5516 5743 8608 8632 7704 4606 3399 7013  526 2916  803 5281 4391 7285
 1725 3286 5708   76 5071 8071 2782 7488 1545 8963 2552 1485 1192 1869
 6358 4701 7351 8803 4075 8774 2362 6269 9090 8309 2415 9069 3987 8494
   46 3275 8012 2319 9337 4312 4073 9279 7502 1495 7221 1245 5483 8736
  684  260 3294 3595 6187 7444 2914 2306 5105 4237 3233 8004 9342 2611
 6922 9013  416 2848 6256 7843 8559 2273 1807 5407 9238 5431 2067 1892
 3515 9300 4714 1338 5291 3435 5595 7065 1914 5130 7925 8724  955 8342
 6945 7369 9182 5895  484 2087 7565 4704  830 9167 2202 7953 8347 6045
 3463 6032 6677 6479 5453 4107 3815 5540 9630 8299 8116 3192  972 6543
 4740 2955 4942 6623  187 1140 6673  504 2291 9016 9406  948 1337 4436
  484 3430 7657  350 7008 9211 5717 9461 4922 2489 2183 1812 7732 4843
 2738 8214 7455 4885 1960 7395 9657 1899 2696 8400 2804 1747 7628 9694
 5676 9759 8570 6478 3901 4908 3433  595 9474 1409 6210 2325 6043 5911
 8333 2163 6598 8937 4125 4947 3786 7689 5313 1668  437  147 6922 4036
 8135 1784 5952 7563 6735 2993  710 3756 5439  551 5120 8044 9262 1749
 2678 6421 4863 7014 7243 8622 4981 6659 7245 9621  380 8023 1708 4658
 7416 1823 9761 2257 5968 8522 2203 7934  948 4438 4028 8222 5736 7386
 8386 3318  829 9692 3831 2283 2931 7809 9517 8727  730 1378 1108  904
 3922 6162 2635  909 8224 7942 1373 4715 6857 5830 7300 8453  933 2945
 5660 1193 5478 6400 1138 6394 5945 7152 2140 8822 9638 8212 5928  585
 3106 9289 7048 1629 5385 6915 9416 8567 3043 7887 8470 9797 5086 2446
 3746 1250 1225 7242 4335 7045 9461 4259 9133 1618 1095 4659 4190  182
 3490 1465 7117 1869 1161  414 7901 4236 7540 5723 1379 9636  292 1464
 8286 8220  630 5671]
malcious dataset true labels: [3, 3, 6, 7, 5, 0, 9, 7, 0, 0, 9, 9, 2, 7, 9, 2, 5, 7, 5, 7, 3, 2, 1, 2, 5, 9, 2, 9, 3, 7, 7, 9, 9, 7, 1, 7, 6, 2, 6, 5, 3, 3, 6, 6, 3, 7, 7, 6, 3, 7, 4, 0, 7, 6, 4, 0, 0, 5, 7, 7, 6, 0, 2, 3, 8, 7, 3, 0, 9, 2, 3, 6, 5, 6, 9, 7, 5, 9, 6, 6, 1, 2, 9, 6, 7, 7, 6, 3, 8, 9, 3, 6, 3, 3, 7, 0, 2, 2, 0, 2, 3, 8, 5, 6, 6, 1, 2, 0, 9, 9, 0, 1, 4, 0, 4, 6, 8, 2, 4, 5, 2, 9, 2, 2, 7, 7, 0, 6, 7, 5, 2, 9, 1, 1, 3, 6, 9, 3, 2, 0, 0, 0, 8, 6, 6, 3, 7, 6, 5, 7, 9, 8, 0, 1, 3, 5, 9, 2, 2, 3, 8, 9, 0, 2, 2, 0, 6, 6, 7, 1, 6, 7, 0, 0, 8, 6, 9, 2, 8, 5, 2, 7, 0, 6, 9, 3, 7, 3, 8, 7, 6, 6, 0, 6, 1, 2, 3, 1, 0, 9, 9, 5, 7, 7, 7, 8, 6, 9, 9, 2, 4, 0, 3, 2, 2, 7, 5, 0, 5, 0, 6, 7, 0, 8, 9, 0, 9, 3, 2, 0, 2, 6, 9, 7, 5, 2, 6, 6, 6, 0, 2, 2, 0, 9, 9, 9, 9, 7, 2, 9, 3, 0, 7, 9, 3, 5, 4, 0, 6, 7, 3, 3, 4, 0, 2, 9, 4, 3, 7, 7, 2, 4, 9, 3, 6, 6, 3, 9, 7, 2, 8, 5, 8, 2, 8, 6, 0, 2, 1, 9, 3, 8, 4, 9, 4, 4, 7, 9, 5, 5, 2, 3, 7, 7, 9, 2, 9, 0, 5, 5, 3, 3, 2, 5, 9, 6, 9, 5, 5, 0, 9, 0, 9, 2, 5, 6, 8, 7, 8, 1, 0, 7, 3, 2, 7, 7, 3, 5, 7, 9, 9, 5, 1, 9, 7, 0, 9, 8, 9, 3, 7, 1, 9, 6, 2, 6, 8, 2, 3, 1, 0, 7, 2, 7, 3, 3, 2, 7, 6, 2, 5, 6, 9, 9, 3, 9, 5, 2, 3, 0, 3, 7, 5, 2, 2, 2, 8, 0, 1, 6, 7, 2, 6, 3, 6, 7, 4, 3, 2, 6, 6, 2, 3, 9, 9, 0, 0, 6, 0, 5, 3, 7, 6, 6, 2, 3, 2, 2, 3, 2, 7, 2, 0, 0, 4, 3, 3, 2, 1, 2, 6, 0, 3, 2, 6, 9, 0, 8, 0, 3, 7, 3, 2, 0, 2, 6, 8, 9, 8, 5, 5, 2, 8, 3, 3, 3, 6, 3, 4, 2, 1, 0, 1, 0, 7, 7, 2, 6, 5, 5, 3, 0, 1, 2, 8, 0, 7, 5, 7, 0], malicious labels: [3, 3, 6, 7, 5, 0, 9, 7, 0, 0, 9, 9, 2, 7, 9, 2, 5, 7, 5, 7, 3, 2, 1, 2, 5, 9, 2, 9, 3, 7, 7, 9, 9, 7, 1, 7, 6, 2, 6, 5, 3, 3, 6, 6, 3, 7, 7, 6, 3, 7, 4, 0, 7, 6, 4, 0, 0, 5, 7, 7, 6, 0, 2, 3, 8, 7, 3, 0, 9, 2, 3, 6, 5, 6, 9, 7, 5, 9, 6, 6, 1, 2, 9, 6, 7, 7, 6, 3, 8, 9, 3, 6, 3, 3, 7, 0, 2, 2, 0, 2, 3, 8, 5, 6, 6, 1, 2, 0, 9, 9, 0, 1, 4, 0, 4, 6, 8, 2, 4, 5, 2, 9, 2, 2, 7, 7, 0, 6, 7, 5, 2, 9, 1, 1, 3, 6, 9, 3, 2, 0, 0, 0, 8, 6, 6, 3, 7, 6, 5, 7, 9, 8, 0, 1, 3, 5, 9, 2, 2, 3, 8, 9, 0, 2, 2, 0, 6, 6, 7, 1, 6, 7, 0, 0, 8, 6, 9, 2, 8, 5, 2, 7, 0, 6, 9, 3, 7, 3, 8, 7, 6, 6, 0, 6, 1, 2, 3, 1, 0, 9, 9, 5, 7, 7, 7, 8, 6, 9, 9, 2, 4, 0, 3, 2, 2, 7, 5, 0, 5, 0, 6, 7, 0, 8, 9, 0, 9, 3, 2, 0, 2, 6, 9, 7, 5, 2, 6, 6, 6, 0, 2, 2, 0, 9, 9, 9, 9, 7, 2, 9, 3, 0, 7, 9, 3, 5, 4, 0, 6, 7, 3, 3, 4, 0, 2, 9, 4, 3, 7, 7, 2, 4, 9, 3, 6, 6, 3, 9, 7, 2, 8, 5, 8, 2, 8, 6, 0, 2, 1, 9, 3, 8, 4, 9, 4, 4, 7, 9, 5, 5, 2, 3, 7, 7, 9, 2, 9, 0, 5, 5, 3, 3, 2, 5, 9, 6, 9, 5, 5, 0, 9, 0, 9, 2, 5, 6, 8, 7, 8, 1, 0, 7, 3, 2, 7, 7, 3, 5, 7, 9, 9, 5, 1, 9, 7, 0, 9, 8, 9, 3, 7, 1, 9, 6, 2, 6, 8, 2, 3, 1, 0, 7, 2, 7, 3, 3, 2, 7, 6, 2, 5, 6, 9, 9, 3, 9, 5, 2, 3, 0, 3, 7, 5, 2, 2, 2, 8, 0, 1, 6, 7, 2, 6, 3, 6, 7, 4, 3, 2, 6, 6, 2, 3, 9, 9, 0, 0, 6, 0, 5, 3, 7, 6, 6, 2, 3, 2, 2, 3, 2, 7, 2, 0, 0, 4, 3, 3, 2, 1, 2, 6, 0, 3, 2, 6, 9, 0, 8, 0, 3, 7, 3, 2, 0, 2, 6, 8, 9, 8, 5, 5, 2, 8, 3, 3, 3, 6, 3, 4, 2, 1, 0, 1, 0, 7, 7, 2, 6, 5, 5, 3, 0, 1, 2, 8, 0, 7, 5, 7, 0]
  0%|          | 0/100 [00:00<?, ?it/s]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  1%|          | 1/100 [00:10<18:04, 10.95s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  2%|▏         | 2/100 [00:22<18:26, 11.29s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  3%|▎         | 3/100 [00:32<17:28, 10.80s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  4%|▍         | 4/100 [00:43<17:18, 10.82s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  5%|▌         | 5/100 [00:55<17:41, 11.18s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  6%|▌         | 6/100 [01:05<16:57, 10.82s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  7%|▋         | 7/100 [01:16<16:51, 10.87s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  8%|▊         | 8/100 [01:27<16:41, 10.89s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  9%|▉         | 9/100 [01:37<16:07, 10.63s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 10%|█         | 10/100 [01:48<16:05, 10.73s/it]
 | Global Training Round : 1 |

Malcious user 93 is selected!
user 93, loss 0.9670199970860267, acc 0.8125, mal loss 7.870043874019757, mal acc 0.9458333333333333
user 76, loss 1.3046220593440991, acc 0.9583333333333334
user 78, loss 1.2487395365029956, acc 0.9583333333333334
user 89, loss 1.2720795376942706, acc 0.7916666666666666
user 46, loss 1.2054998596891378, acc 0.9375
user 10, loss 1.2860927609487987, acc 0.9375
user 98, loss 1.243339620014796, acc 0.8541666666666666
Malcious user 55 is selected!
user 55, loss 0.9530157926686419, acc 0.8333333333333334, mal loss 8.107225155457854, mal acc 0.9583333333333334
user 45, loss 1.278078218587698, acc 0.9166666666666666
user 91, loss 1.2611329261691142, acc 0.9375
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 1 global rounds:
Training Loss : 1.2019620308705579
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 2 |

user 74, loss nan, acc 0.10416666666666667
user 78, loss nan, acc 0.10416666666666667
user 58, loss nan, acc 0.041666666666666664
user 33, loss nan, acc 0.10416666666666667
user 37, loss nan, acc 0.020833333333333332
user 39, loss nan, acc 0.20833333333333334
user 89, loss nan, acc 0.0625
user 27, loss nan, acc 0.10416666666666667
user 32, loss nan, acc 0.08333333333333333
user 67, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 2 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 3 |

user 75, loss nan, acc 0.0625
user 32, loss nan, acc 0.08333333333333333
user 61, loss nan, acc 0.10416666666666667
user 4, loss nan, acc 0.10416666666666667
user 33, loss nan, acc 0.10416666666666667
user 96, loss nan, acc 0.0625
user 0, loss nan, acc 0.125
user 20, loss nan, acc 0.10416666666666667
user 47, loss nan, acc 0.10416666666666667
user 84, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 3 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 4 |

user 91, loss nan, acc 0.10416666666666667
user 58, loss nan, acc 0.041666666666666664
user 11, loss nan, acc 0.125
user 45, loss nan, acc 0.08333333333333333
user 47, loss nan, acc 0.10416666666666667
user 70, loss nan, acc 0.125
user 32, loss nan, acc 0.08333333333333333
user 65, loss nan, acc 0.125
Malcious user 16 is selected!
user 16, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
user 95, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 4 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 5 |

user 32, loss nan, acc 0.08333333333333333
user 80, loss nan, acc 0.041666666666666664
user 97, loss nan, acc 0.10416666666666667
user 7, loss nan, acc 0.0625
Malcious user 60 is selected!
user 60, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
Malcious user 68 is selected!
user 68, loss nan, acc 0.041666666666666664, mal loss nan, mal acc 0.12291666666666666
user 23, loss nan, acc 0.0625
user 39, loss nan, acc 0.20833333333333334
user 65, loss nan, acc 0.125
user 88, loss nan, acc 0.08333333333333333
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 5 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 6 |

user 46, loss nan, acc 0.14583333333333334
user 39, loss nan, acc 0.20833333333333334
user 48, loss nan, acc 0.10416666666666667
user 84, loss nan, acc 0.0625
Malcious user 6 is selected!
user 6, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
user 65, loss nan, acc 0.125
user 9, loss nan, acc 0.0625
user 11, loss nan, acc 0.125
Malcious user 21 is selected!
user 21, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
user 3, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 6 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 7 |

user 40, loss nan, acc 0.08333333333333333
user 12, loss nan, acc 0.10416666666666667
Malcious user 81 is selected!
user 81, loss nan, acc 0.125, mal loss nan, mal acc 0.12291666666666666
user 95, loss nan, acc 0.10416666666666667
user 70, loss nan, acc 0.125
user 41, loss nan, acc 0.10416666666666667
user 53, loss nan, acc 0.10416666666666667
user 22, loss nan, acc 0.10416666666666667
user 69, loss nan, acc 0.041666666666666664
user 89, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 7 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 8 |

Malcious user 5 is selected!
user 5, loss nan, acc 0.10416666666666667, mal loss nan, mal acc 0.12291666666666666
user 69, loss nan, acc 0.041666666666666664
user 35, loss nan, acc 0.20833333333333334
user 73, loss nan, acc 0.020833333333333332
user 78, loss nan, acc 0.10416666666666667
user 76, loss nan, acc 0.10416666666666667
user 46, loss nan, acc 0.14583333333333334
user 53, loss nan, acc 0.10416666666666667
user 47, loss nan, acc 0.10416666666666667
user 31, loss nan, acc 0.16666666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 8 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 9 |

user 33, loss nan, acc 0.10416666666666667
user 11, loss nan, acc 0.125
user 9, loss nan, acc 0.0625
user 35, loss nan, acc 0.20833333333333334
user 13, loss nan, acc 0.0625
user 46, loss nan, acc 0.14583333333333334
user 97, loss nan, acc 0.10416666666666667
user 75, loss nan, acc 0.0625
user 2, loss nan, acc 0.0625
user 0, loss nan, acc 0.125
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 9 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 10 |

user 65, loss nan, acc 0.125
user 63, loss nan, acc 0.10416666666666667
user 74, loss nan, acc 0.10416666666666667
user 29, loss nan, acc 0.08333333333333333
user 88, loss nan, acc 0.08333333333333333
user 67, loss nan, acc 0.0625
user 59, loss nan, acc 0.041666666666666664
user 17, loss nan, acc 0.14583333333333334
Malcious user 68 is selected!
user 68, loss nan, acc 0.041666666666666664, mal loss nan, mal acc 0.12291666666666666
user 82, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 10 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 11 |

user 24, loss nan, acc 0.125
user 12, loss nan, acc 0.10416666666666667
user 36, loss nan, acc 0.08333333333333333
user 4, loss nan, acc 0.10416666666666667
user 47, loss nan, acc 0.10416666666666667
user 26, loss nan, acc 0.16666666666666666
user 40, loss nan, acc 0.08333333333333333
user 91, loss nan, acc 0.10416666666666667
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 11%|█         | 11/100 [01:59<16:01, 10.80s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 12%|█▏        | 12/100 [02:09<15:35, 10.63s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 13%|█▎        | 13/100 [02:20<15:34, 10.74s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 14%|█▍        | 14/100 [02:31<15:31, 10.83s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 15%|█▌        | 15/100 [02:41<15:06, 10.67s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 16%|█▌        | 16/100 [02:52<14:57, 10.69s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 17%|█▋        | 17/100 [03:03<14:49, 10.72s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 18%|█▊        | 18/100 [03:13<14:20, 10.49s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 19%|█▉        | 19/100 [03:24<14:15, 10.56s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 20%|██        | 20/100 [03:35<14:21, 10.77s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 21%|██        | 21/100 [03:45<13:57, 10.60s/it]user 78, loss nan, acc 0.10416666666666667
user 56, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 11 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 12 |

user 56, loss nan, acc 0.0625
user 53, loss nan, acc 0.10416666666666667
Malcious user 16 is selected!
user 16, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
user 22, loss nan, acc 0.10416666666666667
user 96, loss nan, acc 0.0625
user 50, loss nan, acc 0.10416666666666667
user 82, loss nan, acc 0.125
user 1, loss nan, acc 0.08333333333333333
user 76, loss nan, acc 0.10416666666666667
user 10, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 12 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 13 |

user 88, loss nan, acc 0.08333333333333333
user 74, loss nan, acc 0.10416666666666667
user 30, loss nan, acc 0.041666666666666664
user 27, loss nan, acc 0.10416666666666667
user 96, loss nan, acc 0.0625
user 87, loss nan, acc 0.14583333333333334
user 80, loss nan, acc 0.041666666666666664
user 34, loss nan, acc 0.0625
user 50, loss nan, acc 0.10416666666666667
user 37, loss nan, acc 0.020833333333333332
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 13 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 14 |

user 33, loss nan, acc 0.10416666666666667
Malcious user 81 is selected!
user 81, loss nan, acc 0.125, mal loss nan, mal acc 0.12291666666666666
user 92, loss nan, acc 0.10416666666666667
user 31, loss nan, acc 0.16666666666666666
user 67, loss nan, acc 0.0625
user 13, loss nan, acc 0.0625
Malcious user 5 is selected!
user 5, loss nan, acc 0.10416666666666667, mal loss nan, mal acc 0.12291666666666666
user 20, loss nan, acc 0.10416666666666667
user 97, loss nan, acc 0.10416666666666667
user 24, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 14 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 15 |

Malcious user 93 is selected!
user 93, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
Malcious user 55 is selected!
user 55, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
user 72, loss nan, acc 0.10416666666666667
Malcious user 66 is selected!
user 66, loss nan, acc 0.14583333333333334, mal loss nan, mal acc 0.12291666666666666
user 35, loss nan, acc 0.20833333333333334
user 4, loss nan, acc 0.10416666666666667
user 70, loss nan, acc 0.125
user 73, loss nan, acc 0.020833333333333332
user 38, loss nan, acc 0.16666666666666666
user 32, loss nan, acc 0.08333333333333333
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 15 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 16 |

user 97, loss nan, acc 0.10416666666666667
user 2, loss nan, acc 0.0625
user 69, loss nan, acc 0.041666666666666664
user 39, loss nan, acc 0.20833333333333334
user 49, loss nan, acc 0.10416666666666667
user 3, loss nan, acc 0.10416666666666667
user 77, loss nan, acc 0.0625
user 30, loss nan, acc 0.041666666666666664
Malcious user 93 is selected!
user 93, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
user 63, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 16 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 17 |

user 20, loss nan, acc 0.10416666666666667
user 51, loss nan, acc 0.14583333333333334
user 39, loss nan, acc 0.20833333333333334
user 8, loss nan, acc 0.14583333333333334
user 97, loss nan, acc 0.10416666666666667
user 67, loss nan, acc 0.0625
user 0, loss nan, acc 0.125
user 78, loss nan, acc 0.10416666666666667
user 44, loss nan, acc 0.020833333333333332
user 45, loss nan, acc 0.08333333333333333
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 17 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 18 |

user 0, loss nan, acc 0.125
user 99, loss nan, acc 0.0625
user 57, loss nan, acc 0.0625
user 86, loss nan, acc 0.0625
user 24, loss nan, acc 0.125
user 50, loss nan, acc 0.10416666666666667
Malcious user 6 is selected!
user 6, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
user 71, loss nan, acc 0.125
user 76, loss nan, acc 0.10416666666666667
user 3, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 18 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 19 |

user 57, loss nan, acc 0.0625
user 30, loss nan, acc 0.041666666666666664
Malcious user 6 is selected!
user 6, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
user 53, loss nan, acc 0.10416666666666667
user 11, loss nan, acc 0.125
user 83, loss nan, acc 0.125
user 86, loss nan, acc 0.0625
user 85, loss nan, acc 0.14583333333333334
user 99, loss nan, acc 0.0625
user 59, loss nan, acc 0.041666666666666664
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 19 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 20 |

user 98, loss nan, acc 0.125
user 41, loss nan, acc 0.10416666666666667
user 35, loss nan, acc 0.20833333333333334
user 29, loss nan, acc 0.08333333333333333
user 4, loss nan, acc 0.10416666666666667
user 83, loss nan, acc 0.125
Malcious user 60 is selected!
user 60, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
Malcious user 21 is selected!
user 21, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
user 39, loss nan, acc 0.20833333333333334
user 2, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 20 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 21 |

user 19, loss nan, acc 0.10416666666666667
user 67, loss nan, acc 0.0625
user 57, loss nan, acc 0.0625
user 48, loss nan, acc 0.10416666666666667
user 97, loss nan, acc 0.10416666666666667
user 35, loss nan, acc 0.20833333333333334
user 94, loss nan, acc 0.14583333333333334
user 91, loss nan, acc 0.10416666666666667
user 23, loss nan, acc 0.0625
user 80, loss nan, acc 0.041666666666666664
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 21 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 22 |

user 4, loss nan, acc 0.10416666666666667
user 9, loss nan, acc 0.0625
user 76, loss nan, acc 0.10416666666666667
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 22%|██▏       | 22/100 [03:56<14:02, 10.80s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 23%|██▎       | 23/100 [04:07<13:55, 10.85s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 24%|██▍       | 24/100 [04:17<13:28, 10.63s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 25%|██▌       | 25/100 [04:28<13:23, 10.72s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 26%|██▌       | 26/100 [04:39<13:16, 10.77s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 27%|██▋       | 27/100 [04:50<12:55, 10.62s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 28%|██▊       | 28/100 [05:01<12:54, 10.75s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 29%|██▉       | 29/100 [05:12<12:53, 10.90s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 30%|███       | 30/100 [05:22<12:25, 10.65s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 31%|███       | 31/100 [05:33<12:19, 10.71s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 32%|███▏      | 32/100 [05:44<12:08, 10.72s/it]Malcious user 21 is selected!
user 21, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
user 58, loss nan, acc 0.041666666666666664
user 15, loss nan, acc 0.0625
user 75, loss nan, acc 0.0625
user 13, loss nan, acc 0.0625
Malcious user 93 is selected!
user 93, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
user 61, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 22 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 23 |

user 56, loss nan, acc 0.0625
user 95, loss nan, acc 0.10416666666666667
user 44, loss nan, acc 0.020833333333333332
user 15, loss nan, acc 0.0625
user 61, loss nan, acc 0.10416666666666667
user 42, loss nan, acc 0.20833333333333334
user 63, loss nan, acc 0.10416666666666667
user 10, loss nan, acc 0.10416666666666667
user 80, loss nan, acc 0.041666666666666664
user 57, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 23 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 24 |

user 88, loss nan, acc 0.08333333333333333
user 9, loss nan, acc 0.0625
user 85, loss nan, acc 0.14583333333333334
user 86, loss nan, acc 0.0625
user 44, loss nan, acc 0.020833333333333332
user 83, loss nan, acc 0.125
user 1, loss nan, acc 0.08333333333333333
user 3, loss nan, acc 0.10416666666666667
user 76, loss nan, acc 0.10416666666666667
user 77, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 24 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 25 |

user 56, loss nan, acc 0.0625
user 26, loss nan, acc 0.16666666666666666
Malcious user 21 is selected!
user 21, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
user 89, loss nan, acc 0.0625
user 65, loss nan, acc 0.125
user 72, loss nan, acc 0.10416666666666667
user 41, loss nan, acc 0.10416666666666667
user 62, loss nan, acc 0.08333333333333333
user 30, loss nan, acc 0.041666666666666664
user 96, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 25 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 26 |

user 84, loss nan, acc 0.0625
user 17, loss nan, acc 0.14583333333333334
user 49, loss nan, acc 0.10416666666666667
user 98, loss nan, acc 0.125
user 54, loss nan, acc 0.0625
user 78, loss nan, acc 0.10416666666666667
user 34, loss nan, acc 0.0625
user 13, loss nan, acc 0.0625
user 33, loss nan, acc 0.10416666666666667
user 89, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 26 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 27 |

user 71, loss nan, acc 0.125
user 14, loss nan, acc 0.10416666666666667
Malcious user 93 is selected!
user 93, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
user 84, loss nan, acc 0.0625
user 65, loss nan, acc 0.125
Malcious user 60 is selected!
user 60, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
user 53, loss nan, acc 0.10416666666666667
user 96, loss nan, acc 0.0625
user 48, loss nan, acc 0.10416666666666667
user 37, loss nan, acc 0.020833333333333332
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 27 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 28 |

user 11, loss nan, acc 0.125
user 30, loss nan, acc 0.041666666666666664
user 42, loss nan, acc 0.20833333333333334
user 63, loss nan, acc 0.10416666666666667
Malcious user 66 is selected!
user 66, loss nan, acc 0.14583333333333334, mal loss nan, mal acc 0.12291666666666666
user 51, loss nan, acc 0.14583333333333334
user 25, loss nan, acc 0.020833333333333332
user 46, loss nan, acc 0.14583333333333334
user 3, loss nan, acc 0.10416666666666667
user 77, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 28 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 29 |

user 12, loss nan, acc 0.10416666666666667
user 74, loss nan, acc 0.10416666666666667
Malcious user 66 is selected!
user 66, loss nan, acc 0.14583333333333334, mal loss nan, mal acc 0.12291666666666666
user 96, loss nan, acc 0.0625
user 69, loss nan, acc 0.041666666666666664
user 24, loss nan, acc 0.125
user 34, loss nan, acc 0.0625
user 39, loss nan, acc 0.20833333333333334
user 54, loss nan, acc 0.0625
user 92, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 29 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 30 |

user 17, loss nan, acc 0.14583333333333334
user 78, loss nan, acc 0.10416666666666667
user 97, loss nan, acc 0.10416666666666667
user 14, loss nan, acc 0.10416666666666667
user 28, loss nan, acc 0.125
user 38, loss nan, acc 0.16666666666666666
user 80, loss nan, acc 0.041666666666666664
Malcious user 66 is selected!
user 66, loss nan, acc 0.14583333333333334, mal loss nan, mal acc 0.12291666666666666
user 75, loss nan, acc 0.0625
user 37, loss nan, acc 0.020833333333333332
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 30 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 31 |

user 82, loss nan, acc 0.125
user 48, loss nan, acc 0.10416666666666667
user 19, loss nan, acc 0.10416666666666667
user 59, loss nan, acc 0.041666666666666664
user 46, loss nan, acc 0.14583333333333334
user 13, loss nan, acc 0.0625
user 67, loss nan, acc 0.0625
user 47, loss nan, acc 0.10416666666666667
user 77, loss nan, acc 0.0625
user 45, loss nan, acc 0.08333333333333333
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 31 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 32 |

user 83, loss nan, acc 0.125
user 4, loss nan, acc 0.10416666666666667
user 12, loss nan, acc 0.10416666666666667
user 52, loss nan, acc 0.125
Malcious user 60 is selected!
user 60, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
user 43, loss nan, acc 0.16666666666666666
user 26, loss nan, acc 0.16666666666666666
user 82, loss nan, acc 0.125
user 8, loss nan, acc 0.14583333333333334
user 72, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 32 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 33 |

user 4, loss nan, acc 0.10416666666666667
Malcious user 68 is selected!
user 68, loss nan, acc 0.041666666666666664, mal loss nan, mal acc 0.12291666666666666
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 33%|███▎      | 33/100 [05:54<12:03, 10.80s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 34%|███▍      | 34/100 [06:05<11:50, 10.76s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 35%|███▌      | 35/100 [06:16<11:41, 10.79s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 36%|███▌      | 36/100 [06:26<11:19, 10.62s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 37%|███▋      | 37/100 [06:37<11:09, 10.62s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 38%|███▊      | 38/100 [06:48<11:07, 10.77s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 39%|███▉      | 39/100 [06:58<10:48, 10.63s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 40%|████      | 40/100 [07:10<10:48, 10.81s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 41%|████      | 41/100 [07:20<10:39, 10.84s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 42%|████▏     | 42/100 [07:31<10:19, 10.69s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 43%|████▎     | 43/100 [07:42<10:13, 10.76s/it]user 99, loss nan, acc 0.0625
user 23, loss nan, acc 0.0625
user 35, loss nan, acc 0.20833333333333334
Malcious user 55 is selected!
user 55, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
user 91, loss nan, acc 0.10416666666666667
user 0, loss nan, acc 0.125
user 12, loss nan, acc 0.10416666666666667
user 58, loss nan, acc 0.041666666666666664
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 33 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 34 |

user 79, loss nan, acc 0.0625
user 2, loss nan, acc 0.0625
user 74, loss nan, acc 0.10416666666666667
user 42, loss nan, acc 0.20833333333333334
user 45, loss nan, acc 0.08333333333333333
user 91, loss nan, acc 0.10416666666666667
user 65, loss nan, acc 0.125
user 70, loss nan, acc 0.125
user 15, loss nan, acc 0.0625
user 62, loss nan, acc 0.08333333333333333
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 34 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 35 |

user 78, loss nan, acc 0.10416666666666667
user 72, loss nan, acc 0.10416666666666667
user 37, loss nan, acc 0.020833333333333332
user 75, loss nan, acc 0.0625
user 91, loss nan, acc 0.10416666666666667
user 70, loss nan, acc 0.125
user 22, loss nan, acc 0.10416666666666667
user 48, loss nan, acc 0.10416666666666667
user 90, loss nan, acc 0.0625
user 34, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 35 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 36 |

user 39, loss nan, acc 0.20833333333333334
user 88, loss nan, acc 0.08333333333333333
user 32, loss nan, acc 0.08333333333333333
user 62, loss nan, acc 0.08333333333333333
user 56, loss nan, acc 0.0625
Malcious user 93 is selected!
user 93, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
user 98, loss nan, acc 0.125
user 75, loss nan, acc 0.0625
user 64, loss nan, acc 0.1875
user 57, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 36 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 37 |

user 22, loss nan, acc 0.10416666666666667
user 18, loss nan, acc 0.1875
user 90, loss nan, acc 0.0625
Malcious user 55 is selected!
user 55, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
user 91, loss nan, acc 0.10416666666666667
user 53, loss nan, acc 0.10416666666666667
user 59, loss nan, acc 0.041666666666666664
user 0, loss nan, acc 0.125
user 23, loss nan, acc 0.0625
user 71, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 37 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 38 |

user 29, loss nan, acc 0.08333333333333333
Malcious user 55 is selected!
user 55, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
user 92, loss nan, acc 0.10416666666666667
user 83, loss nan, acc 0.125
user 61, loss nan, acc 0.10416666666666667
user 75, loss nan, acc 0.0625
user 8, loss nan, acc 0.14583333333333334
user 15, loss nan, acc 0.0625
user 30, loss nan, acc 0.041666666666666664
user 34, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 38 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 39 |

user 44, loss nan, acc 0.020833333333333332
user 75, loss nan, acc 0.0625
user 91, loss nan, acc 0.10416666666666667
Malcious user 60 is selected!
user 60, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
user 12, loss nan, acc 0.10416666666666667
user 65, loss nan, acc 0.125
Malcious user 55 is selected!
user 55, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
user 50, loss nan, acc 0.10416666666666667
user 85, loss nan, acc 0.14583333333333334
user 56, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 39 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 40 |

user 90, loss nan, acc 0.0625
user 25, loss nan, acc 0.020833333333333332
user 29, loss nan, acc 0.08333333333333333
user 84, loss nan, acc 0.0625
user 32, loss nan, acc 0.08333333333333333
user 89, loss nan, acc 0.0625
user 53, loss nan, acc 0.10416666666666667
user 92, loss nan, acc 0.10416666666666667
Malcious user 6 is selected!
user 6, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
user 13, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 40 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 41 |

user 20, loss nan, acc 0.10416666666666667
user 63, loss nan, acc 0.10416666666666667
user 88, loss nan, acc 0.08333333333333333
user 83, loss nan, acc 0.125
user 85, loss nan, acc 0.14583333333333334
user 17, loss nan, acc 0.14583333333333334
user 35, loss nan, acc 0.20833333333333334
user 4, loss nan, acc 0.10416666666666667
user 39, loss nan, acc 0.20833333333333334
user 69, loss nan, acc 0.041666666666666664
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 41 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 42 |

user 14, loss nan, acc 0.10416666666666667
user 11, loss nan, acc 0.125
user 7, loss nan, acc 0.0625
user 91, loss nan, acc 0.10416666666666667
user 27, loss nan, acc 0.10416666666666667
Malcious user 55 is selected!
user 55, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
user 10, loss nan, acc 0.10416666666666667
user 31, loss nan, acc 0.16666666666666666
user 54, loss nan, acc 0.0625
Malcious user 60 is selected!
user 60, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 42 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 43 |

user 17, loss nan, acc 0.14583333333333334
user 58, loss nan, acc 0.041666666666666664
user 84, loss nan, acc 0.0625
user 63, loss nan, acc 0.10416666666666667
user 45, loss nan, acc 0.08333333333333333
user 30, loss nan, acc 0.041666666666666664
Malcious user 66 is selected!
user 66, loss nan, acc 0.14583333333333334, mal loss nan, mal acc 0.12291666666666666
user 26, loss nan, acc 0.16666666666666666
user 94, loss nan, acc 0.14583333333333334
user 50, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 43 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])

/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 44%|████▍     | 44/100 [07:52<09:49, 10.52s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 45%|████▌     | 45/100 [08:02<09:37, 10.50s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 46%|████▌     | 46/100 [08:13<09:36, 10.68s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 47%|████▋     | 47/100 [08:23<09:15, 10.47s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 48%|████▊     | 48/100 [08:34<09:13, 10.64s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 49%|████▉     | 49/100 [08:45<09:08, 10.75s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 50%|█████     | 50/100 [08:55<08:44, 10.50s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 51%|█████     | 51/100 [09:06<08:36, 10.54s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 52%|█████▏    | 52/100 [09:17<08:30, 10.64s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 53%|█████▎    | 53/100 [09:27<08:11, 10.46s/it]
 | Global Training Round : 44 |

user 70, loss nan, acc 0.125
user 67, loss nan, acc 0.0625
user 13, loss nan, acc 0.0625
user 0, loss nan, acc 0.125
user 40, loss nan, acc 0.08333333333333333
user 19, loss nan, acc 0.10416666666666667
Malcious user 16 is selected!
user 16, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
user 79, loss nan, acc 0.0625
user 86, loss nan, acc 0.0625
Malcious user 55 is selected!
user 55, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 44 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 45 |

user 25, loss nan, acc 0.020833333333333332
user 99, loss nan, acc 0.0625
user 86, loss nan, acc 0.0625
user 45, loss nan, acc 0.08333333333333333
Malcious user 16 is selected!
user 16, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
user 28, loss nan, acc 0.125
user 7, loss nan, acc 0.0625
user 40, loss nan, acc 0.08333333333333333
user 0, loss nan, acc 0.125
user 80, loss nan, acc 0.041666666666666664
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 45 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 46 |

user 52, loss nan, acc 0.125
user 95, loss nan, acc 0.10416666666666667
user 0, loss nan, acc 0.125
user 86, loss nan, acc 0.0625
user 23, loss nan, acc 0.0625
Malcious user 66 is selected!
user 66, loss nan, acc 0.14583333333333334, mal loss nan, mal acc 0.12291666666666666
user 49, loss nan, acc 0.10416666666666667
user 97, loss nan, acc 0.10416666666666667
user 25, loss nan, acc 0.020833333333333332
user 54, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 46 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 47 |

user 62, loss nan, acc 0.08333333333333333
user 69, loss nan, acc 0.041666666666666664
user 4, loss nan, acc 0.10416666666666667
user 97, loss nan, acc 0.10416666666666667
user 64, loss nan, acc 0.1875
user 27, loss nan, acc 0.10416666666666667
Malcious user 93 is selected!
user 93, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
user 61, loss nan, acc 0.10416666666666667
user 19, loss nan, acc 0.10416666666666667
user 41, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 47 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 48 |

user 8, loss nan, acc 0.14583333333333334
user 22, loss nan, acc 0.10416666666666667
user 48, loss nan, acc 0.10416666666666667
user 90, loss nan, acc 0.0625
user 12, loss nan, acc 0.10416666666666667
user 29, loss nan, acc 0.08333333333333333
user 18, loss nan, acc 0.1875
user 57, loss nan, acc 0.0625
user 14, loss nan, acc 0.10416666666666667
user 59, loss nan, acc 0.041666666666666664
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 48 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 49 |

user 84, loss nan, acc 0.0625
user 87, loss nan, acc 0.14583333333333334
user 31, loss nan, acc 0.16666666666666666
user 12, loss nan, acc 0.10416666666666667
user 97, loss nan, acc 0.10416666666666667
Malcious user 5 is selected!
user 5, loss nan, acc 0.10416666666666667, mal loss nan, mal acc 0.12291666666666666
user 9, loss nan, acc 0.0625
Malcious user 55 is selected!
user 55, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
user 11, loss nan, acc 0.125
user 42, loss nan, acc 0.20833333333333334
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 49 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 50 |

user 2, loss nan, acc 0.0625
user 80, loss nan, acc 0.041666666666666664
user 29, loss nan, acc 0.08333333333333333
user 45, loss nan, acc 0.08333333333333333
user 47, loss nan, acc 0.10416666666666667
user 49, loss nan, acc 0.10416666666666667
user 28, loss nan, acc 0.125
user 73, loss nan, acc 0.020833333333333332
user 61, loss nan, acc 0.10416666666666667
user 90, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 50 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 51 |

user 31, loss nan, acc 0.16666666666666666
user 3, loss nan, acc 0.10416666666666667
user 43, loss nan, acc 0.16666666666666666
user 70, loss nan, acc 0.125
user 4, loss nan, acc 0.10416666666666667
user 14, loss nan, acc 0.10416666666666667
user 15, loss nan, acc 0.0625
user 17, loss nan, acc 0.14583333333333334
user 35, loss nan, acc 0.20833333333333334
Malcious user 81 is selected!
user 81, loss nan, acc 0.125, mal loss nan, mal acc 0.12291666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 51 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 52 |

user 48, loss nan, acc 0.10416666666666667
Malcious user 66 is selected!
user 66, loss nan, acc 0.14583333333333334, mal loss nan, mal acc 0.12291666666666666
user 13, loss nan, acc 0.0625
user 2, loss nan, acc 0.0625
user 49, loss nan, acc 0.10416666666666667
user 8, loss nan, acc 0.14583333333333334
user 95, loss nan, acc 0.10416666666666667
user 70, loss nan, acc 0.125
user 58, loss nan, acc 0.041666666666666664
user 25, loss nan, acc 0.020833333333333332
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 52 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 53 |

user 48, loss nan, acc 0.10416666666666667
user 84, loss nan, acc 0.0625
user 49, loss nan, acc 0.10416666666666667
user 37, loss nan, acc 0.020833333333333332
Malcious user 81 is selected!
user 81, loss nan, acc 0.125, mal loss nan, mal acc 0.12291666666666666
user 73, loss nan, acc 0.020833333333333332
Malcious user 66 is selected!
user 66, loss nan, acc 0.14583333333333334, mal loss nan, mal acc 0.12291666666666666
user 18, loss nan, acc 0.1875
user 58, loss nan, acc 0.041666666666666664
user 30, loss nan, acc 0.041666666666666664
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 53 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 54 |

user 78, loss nan, acc 0.10416666666666667
user 57, loss nan, acc 0.0625
user 47, loss nan, acc 0.10416666666666667
user 73, loss nan, acc 0.020833333333333332
user 13, loss nan, acc 0.0625
user 1, loss nan, acc 0.08333333333333333
user 95, loss nan, acc 0.10416666666666667
user 25, loss nan, acc 0.020833333333333332
user 48, loss nan, acc 0.10416666666666667
user 91, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 54%|█████▍    | 54/100 [09:37<08:04, 10.53s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 55%|█████▌    | 55/100 [09:49<08:03, 10.74s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 56%|█████▌    | 56/100 [09:59<07:43, 10.52s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 57%|█████▋    | 57/100 [10:10<07:40, 10.70s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 58%|█████▊    | 58/100 [10:21<07:32, 10.78s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 59%|█████▉    | 59/100 [10:31<07:13, 10.58s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 60%|██████    | 60/100 [10:42<07:08, 10.71s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 61%|██████    | 61/100 [10:53<07:01, 10.81s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 62%|██████▏   | 62/100 [11:03<06:43, 10.62s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 63%|██████▎   | 63/100 [11:14<06:32, 10.61s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 64%|██████▍   | 64/100 [11:25<06:25, 10.71s/it] 
Avg Training Stats after 54 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 55 |

Malcious user 16 is selected!
user 16, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
user 2, loss nan, acc 0.0625
Malcious user 5 is selected!
user 5, loss nan, acc 0.10416666666666667, mal loss nan, mal acc 0.12291666666666666
user 11, loss nan, acc 0.125
user 31, loss nan, acc 0.16666666666666666
user 19, loss nan, acc 0.10416666666666667
user 96, loss nan, acc 0.0625
user 37, loss nan, acc 0.020833333333333332
user 72, loss nan, acc 0.10416666666666667
user 53, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 55 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 56 |

user 30, loss nan, acc 0.041666666666666664
user 82, loss nan, acc 0.125
user 14, loss nan, acc 0.10416666666666667
Malcious user 66 is selected!
user 66, loss nan, acc 0.14583333333333334, mal loss nan, mal acc 0.12291666666666666
user 62, loss nan, acc 0.08333333333333333
user 74, loss nan, acc 0.10416666666666667
user 79, loss nan, acc 0.0625
user 25, loss nan, acc 0.020833333333333332
user 77, loss nan, acc 0.0625
user 32, loss nan, acc 0.08333333333333333
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 56 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 57 |

user 80, loss nan, acc 0.041666666666666664
user 42, loss nan, acc 0.20833333333333334
user 52, loss nan, acc 0.125
user 27, loss nan, acc 0.10416666666666667
user 97, loss nan, acc 0.10416666666666667
user 18, loss nan, acc 0.1875
user 49, loss nan, acc 0.10416666666666667
user 71, loss nan, acc 0.125
user 95, loss nan, acc 0.10416666666666667
Malcious user 81 is selected!
user 81, loss nan, acc 0.125, mal loss nan, mal acc 0.12291666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 57 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 58 |

Malcious user 5 is selected!
user 5, loss nan, acc 0.10416666666666667, mal loss nan, mal acc 0.12291666666666666
user 97, loss nan, acc 0.10416666666666667
user 29, loss nan, acc 0.08333333333333333
user 83, loss nan, acc 0.125
Malcious user 68 is selected!
user 68, loss nan, acc 0.041666666666666664, mal loss nan, mal acc 0.12291666666666666
user 89, loss nan, acc 0.0625
user 11, loss nan, acc 0.125
user 98, loss nan, acc 0.125
user 35, loss nan, acc 0.20833333333333334
user 20, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 58 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 59 |

user 47, loss nan, acc 0.10416666666666667
Malcious user 5 is selected!
user 5, loss nan, acc 0.10416666666666667, mal loss nan, mal acc 0.12291666666666666
user 12, loss nan, acc 0.10416666666666667
user 46, loss nan, acc 0.14583333333333334
user 39, loss nan, acc 0.20833333333333334
user 28, loss nan, acc 0.125
user 37, loss nan, acc 0.020833333333333332
Malcious user 16 is selected!
user 16, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
user 44, loss nan, acc 0.020833333333333332
user 54, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 59 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 60 |

user 89, loss nan, acc 0.0625
Malcious user 66 is selected!
user 66, loss nan, acc 0.14583333333333334, mal loss nan, mal acc 0.12291666666666666
user 69, loss nan, acc 0.041666666666666664
user 38, loss nan, acc 0.16666666666666666
user 99, loss nan, acc 0.0625
user 78, loss nan, acc 0.10416666666666667
user 44, loss nan, acc 0.020833333333333332
Malcious user 93 is selected!
user 93, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
user 26, loss nan, acc 0.16666666666666666
user 1, loss nan, acc 0.08333333333333333
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 60 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 61 |

user 0, loss nan, acc 0.125
user 79, loss nan, acc 0.0625
user 18, loss nan, acc 0.1875
user 19, loss nan, acc 0.10416666666666667
user 72, loss nan, acc 0.10416666666666667
user 1, loss nan, acc 0.08333333333333333
user 98, loss nan, acc 0.125
user 77, loss nan, acc 0.0625
user 85, loss nan, acc 0.14583333333333334
user 91, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 61 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 62 |

user 46, loss nan, acc 0.14583333333333334
user 72, loss nan, acc 0.10416666666666667
user 19, loss nan, acc 0.10416666666666667
user 77, loss nan, acc 0.0625
user 63, loss nan, acc 0.10416666666666667
user 11, loss nan, acc 0.125
user 82, loss nan, acc 0.125
user 90, loss nan, acc 0.0625
user 53, loss nan, acc 0.10416666666666667
user 23, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 62 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 63 |

user 51, loss nan, acc 0.14583333333333334
user 63, loss nan, acc 0.10416666666666667
user 91, loss nan, acc 0.10416666666666667
user 77, loss nan, acc 0.0625
user 15, loss nan, acc 0.0625
user 76, loss nan, acc 0.10416666666666667
user 71, loss nan, acc 0.125
user 31, loss nan, acc 0.16666666666666666
user 10, loss nan, acc 0.10416666666666667
Malcious user 6 is selected!
user 6, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 63 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 64 |

Malcious user 6 is selected!
user 6, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
Malcious user 55 is selected!
user 55, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
user 83, loss nan, acc 0.125
user 39, loss nan, acc 0.20833333333333334
user 79, loss nan, acc 0.0625
user 24, loss nan, acc 0.125
user 29, loss nan, acc 0.08333333333333333
user 19, loss nan, acc 0.10416666666666667
user 82, loss nan, acc 0.125
user 71, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 64 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 65 |

user 29, loss nan, acc 0.08333333333333333
user 20, loss nan, acc 0.10416666666666667
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 65%|██████▌   | 65/100 [11:35<06:09, 10.55s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 66%|██████▌   | 66/100 [11:46<06:02, 10.65s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 67%|██████▋   | 67/100 [11:57<05:56, 10.80s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 68%|██████▊   | 68/100 [12:07<05:37, 10.54s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 69%|██████▉   | 69/100 [12:18<05:29, 10.62s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 70%|███████   | 70/100 [12:28<05:21, 10.71s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 71%|███████   | 71/100 [12:39<05:05, 10.52s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 72%|███████▏  | 72/100 [12:50<05:00, 10.74s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 73%|███████▎  | 73/100 [13:01<04:52, 10.82s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 74%|███████▍  | 74/100 [13:11<04:35, 10.61s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 75%|███████▌  | 75/100 [13:22<04:26, 10.66s/it]user 79, loss nan, acc 0.0625
user 71, loss nan, acc 0.125
user 15, loss nan, acc 0.0625
user 73, loss nan, acc 0.020833333333333332
user 8, loss nan, acc 0.14583333333333334
user 33, loss nan, acc 0.10416666666666667
user 54, loss nan, acc 0.0625
user 39, loss nan, acc 0.20833333333333334
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 65 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 66 |

user 78, loss nan, acc 0.10416666666666667
user 48, loss nan, acc 0.10416666666666667
user 80, loss nan, acc 0.041666666666666664
user 75, loss nan, acc 0.0625
user 57, loss nan, acc 0.0625
Malcious user 60 is selected!
user 60, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
user 13, loss nan, acc 0.0625
user 95, loss nan, acc 0.10416666666666667
Malcious user 21 is selected!
user 21, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
user 63, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 66 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 67 |

Malcious user 5 is selected!
user 5, loss nan, acc 0.10416666666666667, mal loss nan, mal acc 0.12291666666666666
user 7, loss nan, acc 0.0625
user 2, loss nan, acc 0.0625
user 92, loss nan, acc 0.10416666666666667
user 31, loss nan, acc 0.16666666666666666
user 62, loss nan, acc 0.08333333333333333
user 3, loss nan, acc 0.10416666666666667
user 46, loss nan, acc 0.14583333333333334
user 89, loss nan, acc 0.0625
user 28, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 67 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 68 |

Malcious user 60 is selected!
user 60, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
user 57, loss nan, acc 0.0625
user 25, loss nan, acc 0.020833333333333332
user 35, loss nan, acc 0.20833333333333334
user 98, loss nan, acc 0.125
user 9, loss nan, acc 0.0625
user 29, loss nan, acc 0.08333333333333333
user 63, loss nan, acc 0.10416666666666667
user 28, loss nan, acc 0.125
user 11, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 68 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 69 |

user 92, loss nan, acc 0.10416666666666667
user 86, loss nan, acc 0.0625
user 26, loss nan, acc 0.16666666666666666
user 9, loss nan, acc 0.0625
user 35, loss nan, acc 0.20833333333333334
user 67, loss nan, acc 0.0625
user 62, loss nan, acc 0.08333333333333333
user 71, loss nan, acc 0.125
user 48, loss nan, acc 0.10416666666666667
user 72, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 69 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 70 |

user 11, loss nan, acc 0.125
user 64, loss nan, acc 0.1875
user 35, loss nan, acc 0.20833333333333334
user 75, loss nan, acc 0.0625
user 67, loss nan, acc 0.0625
user 73, loss nan, acc 0.020833333333333332
user 9, loss nan, acc 0.0625
user 20, loss nan, acc 0.10416666666666667
user 58, loss nan, acc 0.041666666666666664
user 71, loss nan, acc 0.125
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 70 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 71 |

user 27, loss nan, acc 0.10416666666666667
user 52, loss nan, acc 0.125
user 17, loss nan, acc 0.14583333333333334
user 77, loss nan, acc 0.0625
user 51, loss nan, acc 0.14583333333333334
user 57, loss nan, acc 0.0625
user 31, loss nan, acc 0.16666666666666666
user 50, loss nan, acc 0.10416666666666667
user 35, loss nan, acc 0.20833333333333334
user 89, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 71 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 72 |

user 12, loss nan, acc 0.10416666666666667
user 94, loss nan, acc 0.14583333333333334
user 46, loss nan, acc 0.14583333333333334
user 1, loss nan, acc 0.08333333333333333
user 98, loss nan, acc 0.125
Malcious user 21 is selected!
user 21, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
user 25, loss nan, acc 0.020833333333333332
Malcious user 66 is selected!
user 66, loss nan, acc 0.14583333333333334, mal loss nan, mal acc 0.12291666666666666
user 73, loss nan, acc 0.020833333333333332
user 61, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 72 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 73 |

user 28, loss nan, acc 0.125
Malcious user 21 is selected!
user 21, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
user 24, loss nan, acc 0.125
user 57, loss nan, acc 0.0625
user 40, loss nan, acc 0.08333333333333333
Malcious user 68 is selected!
user 68, loss nan, acc 0.041666666666666664, mal loss nan, mal acc 0.12291666666666666
user 77, loss nan, acc 0.0625
user 78, loss nan, acc 0.10416666666666667
Malcious user 60 is selected!
user 60, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
user 42, loss nan, acc 0.20833333333333334
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 73 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 74 |

user 11, loss nan, acc 0.125
user 90, loss nan, acc 0.0625
user 65, loss nan, acc 0.125
Malcious user 55 is selected!
user 55, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
user 51, loss nan, acc 0.14583333333333334
user 73, loss nan, acc 0.020833333333333332
user 46, loss nan, acc 0.14583333333333334
user 64, loss nan, acc 0.1875
user 50, loss nan, acc 0.10416666666666667
user 62, loss nan, acc 0.08333333333333333
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 74 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 75 |

user 72, loss nan, acc 0.10416666666666667
user 37, loss nan, acc 0.020833333333333332
user 10, loss nan, acc 0.10416666666666667
user 85, loss nan, acc 0.14583333333333334
user 25, loss nan, acc 0.020833333333333332
user 58, loss nan, acc 0.041666666666666664
Malcious user 55 is selected!
user 55, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
user 30, loss nan, acc 0.041666666666666664
user 74, loss nan, acc 0.10416666666666667
user 11, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 75 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])

/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 76%|███████▌  | 76/100 [13:33<04:20, 10.87s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 77%|███████▋  | 77/100 [13:43<04:04, 10.61s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 78%|███████▊  | 78/100 [13:54<03:56, 10.73s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 79%|███████▉  | 79/100 [14:05<03:47, 10.82s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 80%|████████  | 80/100 [14:15<03:33, 10.67s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 81%|████████  | 81/100 [14:27<03:25, 10.80s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 82%|████████▏ | 82/100 [14:37<03:13, 10.75s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 83%|████████▎ | 83/100 [14:48<03:02, 10.75s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 84%|████████▍ | 84/100 [14:57<02:45, 10.35s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 85%|████████▌ | 85/100 [15:08<02:37, 10.49s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

 | Global Training Round : 76 |

user 59, loss nan, acc 0.041666666666666664
user 17, loss nan, acc 0.14583333333333334
user 47, loss nan, acc 0.10416666666666667
user 69, loss nan, acc 0.041666666666666664
user 29, loss nan, acc 0.08333333333333333
user 24, loss nan, acc 0.125
Malcious user 68 is selected!
user 68, loss nan, acc 0.041666666666666664, mal loss nan, mal acc 0.12291666666666666
user 22, loss nan, acc 0.10416666666666667
user 67, loss nan, acc 0.0625
Malcious user 60 is selected!
user 60, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 76 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 77 |

user 71, loss nan, acc 0.125
user 32, loss nan, acc 0.08333333333333333
user 38, loss nan, acc 0.16666666666666666
user 65, loss nan, acc 0.125
user 83, loss nan, acc 0.125
Malcious user 5 is selected!
user 5, loss nan, acc 0.10416666666666667, mal loss nan, mal acc 0.12291666666666666
user 73, loss nan, acc 0.020833333333333332
user 34, loss nan, acc 0.0625
user 59, loss nan, acc 0.041666666666666664
user 42, loss nan, acc 0.20833333333333334
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 77 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 78 |

user 34, loss nan, acc 0.0625
user 69, loss nan, acc 0.041666666666666664
user 98, loss nan, acc 0.125
user 45, loss nan, acc 0.08333333333333333
user 94, loss nan, acc 0.14583333333333334
user 72, loss nan, acc 0.10416666666666667
user 43, loss nan, acc 0.16666666666666666
user 86, loss nan, acc 0.0625
Malcious user 60 is selected!
user 60, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
user 26, loss nan, acc 0.16666666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 78 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 79 |

Malcious user 6 is selected!
user 6, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
user 15, loss nan, acc 0.0625
user 82, loss nan, acc 0.125
user 1, loss nan, acc 0.08333333333333333
user 45, loss nan, acc 0.08333333333333333
user 18, loss nan, acc 0.1875
user 33, loss nan, acc 0.10416666666666667
user 62, loss nan, acc 0.08333333333333333
user 64, loss nan, acc 0.1875
Malcious user 5 is selected!
user 5, loss nan, acc 0.10416666666666667, mal loss nan, mal acc 0.12291666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 79 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 80 |

user 39, loss nan, acc 0.20833333333333334
user 36, loss nan, acc 0.08333333333333333
user 13, loss nan, acc 0.0625
user 15, loss nan, acc 0.0625
user 83, loss nan, acc 0.125
user 46, loss nan, acc 0.14583333333333334
user 14, loss nan, acc 0.10416666666666667
user 54, loss nan, acc 0.0625
Malcious user 55 is selected!
user 55, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
user 35, loss nan, acc 0.20833333333333334
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 80 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 81 |

user 34, loss nan, acc 0.0625
user 83, loss nan, acc 0.125
user 67, loss nan, acc 0.0625
user 58, loss nan, acc 0.041666666666666664
user 57, loss nan, acc 0.0625
user 29, loss nan, acc 0.08333333333333333
user 11, loss nan, acc 0.125
user 74, loss nan, acc 0.10416666666666667
user 10, loss nan, acc 0.10416666666666667
user 96, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 81 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 82 |

user 3, loss nan, acc 0.10416666666666667
user 24, loss nan, acc 0.125
user 58, loss nan, acc 0.041666666666666664
user 34, loss nan, acc 0.0625
user 0, loss nan, acc 0.125
user 85, loss nan, acc 0.14583333333333334
user 4, loss nan, acc 0.10416666666666667
user 69, loss nan, acc 0.041666666666666664
user 48, loss nan, acc 0.10416666666666667
user 12, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 82 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 83 |

user 85, loss nan, acc 0.14583333333333334
user 11, loss nan, acc 0.125
user 94, loss nan, acc 0.14583333333333334
user 26, loss nan, acc 0.16666666666666666
Malcious user 55 is selected!
user 55, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
user 95, loss nan, acc 0.10416666666666667
user 62, loss nan, acc 0.08333333333333333
user 10, loss nan, acc 0.10416666666666667
Malcious user 21 is selected!
user 21, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
user 84, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 83 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 84 |

user 30, loss nan, acc 0.041666666666666664
user 17, loss nan, acc 0.14583333333333334
user 97, loss nan, acc 0.10416666666666667
Malcious user 21 is selected!
user 21, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
user 9, loss nan, acc 0.0625
user 42, loss nan, acc 0.20833333333333334
user 59, loss nan, acc 0.041666666666666664
user 48, loss nan, acc 0.10416666666666667
user 71, loss nan, acc 0.125
user 32, loss nan, acc 0.08333333333333333
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 84 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 85 |

user 38, loss nan, acc 0.16666666666666666
user 86, loss nan, acc 0.0625
user 11, loss nan, acc 0.125
user 3, loss nan, acc 0.10416666666666667
user 1, loss nan, acc 0.08333333333333333
user 51, loss nan, acc 0.14583333333333334
user 12, loss nan, acc 0.10416666666666667
user 94, loss nan, acc 0.14583333333333334
Malcious user 66 is selected!
user 66, loss nan, acc 0.14583333333333334, mal loss nan, mal acc 0.12291666666666666
user 28, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 85 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 86 |

user 73, loss nan, acc 0.020833333333333332
user 82, loss nan, acc 0.125
user 72, loss nan, acc 0.10416666666666667
user 69, loss nan, acc 0.041666666666666664
user 17, loss nan, acc 0.14583333333333334
user 89, loss nan, acc 0.0625
user 57, loss nan, acc 0.0625
user 42, loss nan, acc 0.20833333333333334
user 30, loss nan, acc 0.041666666666666664
user 23, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 86 global rounds:
Training Loss : nan
 86%|████████▌ | 86/100 [15:19<02:28, 10.58s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 87%|████████▋ | 87/100 [15:29<02:15, 10.39s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 88%|████████▊ | 88/100 [15:40<02:07, 10.61s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 89%|████████▉ | 89/100 [15:51<01:57, 10.66s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 90%|█████████ | 90/100 [16:01<01:44, 10.44s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 91%|█████████ | 91/100 [16:12<01:35, 10.66s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 92%|█████████▏| 92/100 [16:22<01:25, 10.64s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 93%|█████████▎| 93/100 [16:33<01:13, 10.47s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 94%|█████████▍| 94/100 [16:44<01:04, 10.69s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 95%|█████████▌| 95/100 [16:55<00:53, 10.74s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 96%|█████████▌| 96/100 [17:05<00:42, 10.58s/it]Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 87 |

user 50, loss nan, acc 0.10416666666666667
user 34, loss nan, acc 0.0625
user 77, loss nan, acc 0.0625
user 51, loss nan, acc 0.14583333333333334
user 39, loss nan, acc 0.20833333333333334
user 63, loss nan, acc 0.10416666666666667
Malcious user 16 is selected!
user 16, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
user 25, loss nan, acc 0.020833333333333332
user 79, loss nan, acc 0.0625
user 49, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 87 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 88 |

user 85, loss nan, acc 0.14583333333333334
user 31, loss nan, acc 0.16666666666666666
Malcious user 68 is selected!
user 68, loss nan, acc 0.041666666666666664, mal loss nan, mal acc 0.12291666666666666
user 62, loss nan, acc 0.08333333333333333
user 48, loss nan, acc 0.10416666666666667
user 76, loss nan, acc 0.10416666666666667
Malcious user 81 is selected!
user 81, loss nan, acc 0.125, mal loss nan, mal acc 0.12291666666666666
user 97, loss nan, acc 0.10416666666666667
user 79, loss nan, acc 0.0625
user 40, loss nan, acc 0.08333333333333333
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 88 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 89 |

user 31, loss nan, acc 0.16666666666666666
user 14, loss nan, acc 0.10416666666666667
user 27, loss nan, acc 0.10416666666666667
Malcious user 6 is selected!
user 6, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
user 75, loss nan, acc 0.0625
Malcious user 66 is selected!
user 66, loss nan, acc 0.14583333333333334, mal loss nan, mal acc 0.12291666666666666
user 23, loss nan, acc 0.0625
user 99, loss nan, acc 0.0625
user 71, loss nan, acc 0.125
user 97, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 89 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 90 |

user 4, loss nan, acc 0.10416666666666667
user 85, loss nan, acc 0.14583333333333334
user 23, loss nan, acc 0.0625
user 65, loss nan, acc 0.125
user 12, loss nan, acc 0.10416666666666667
user 80, loss nan, acc 0.041666666666666664
user 87, loss nan, acc 0.14583333333333334
user 32, loss nan, acc 0.08333333333333333
user 2, loss nan, acc 0.0625
user 8, loss nan, acc 0.14583333333333334
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 90 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 91 |

user 88, loss nan, acc 0.08333333333333333
user 97, loss nan, acc 0.10416666666666667
user 43, loss nan, acc 0.16666666666666666
user 25, loss nan, acc 0.020833333333333332
user 40, loss nan, acc 0.08333333333333333
user 83, loss nan, acc 0.125
user 13, loss nan, acc 0.0625
user 58, loss nan, acc 0.041666666666666664
user 86, loss nan, acc 0.0625
user 46, loss nan, acc 0.14583333333333334
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 91 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 92 |

Malcious user 66 is selected!
user 66, loss nan, acc 0.14583333333333334, mal loss nan, mal acc 0.12291666666666666
user 97, loss nan, acc 0.10416666666666667
user 50, loss nan, acc 0.10416666666666667
user 72, loss nan, acc 0.10416666666666667
user 23, loss nan, acc 0.0625
user 89, loss nan, acc 0.0625
user 45, loss nan, acc 0.08333333333333333
Malcious user 6 is selected!
user 6, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
user 71, loss nan, acc 0.125
user 13, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 92 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 93 |

user 42, loss nan, acc 0.20833333333333334
user 94, loss nan, acc 0.14583333333333334
user 78, loss nan, acc 0.10416666666666667
user 86, loss nan, acc 0.0625
user 29, loss nan, acc 0.08333333333333333
user 75, loss nan, acc 0.0625
user 59, loss nan, acc 0.041666666666666664
user 62, loss nan, acc 0.08333333333333333
user 17, loss nan, acc 0.14583333333333334
user 52, loss nan, acc 0.125
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 93 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 94 |

user 71, loss nan, acc 0.125
Malcious user 60 is selected!
user 60, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
user 76, loss nan, acc 0.10416666666666667
user 64, loss nan, acc 0.1875
Malcious user 16 is selected!
user 16, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
Malcious user 21 is selected!
user 21, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
user 31, loss nan, acc 0.16666666666666666
user 38, loss nan, acc 0.16666666666666666
user 49, loss nan, acc 0.10416666666666667
user 13, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 94 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 95 |

user 26, loss nan, acc 0.16666666666666666
user 43, loss nan, acc 0.16666666666666666
user 51, loss nan, acc 0.14583333333333334
user 18, loss nan, acc 0.1875
user 3, loss nan, acc 0.10416666666666667
user 82, loss nan, acc 0.125
user 62, loss nan, acc 0.08333333333333333
Malcious user 21 is selected!
user 21, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
user 53, loss nan, acc 0.10416666666666667
user 92, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 95 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 96 |

user 47, loss nan, acc 0.10416666666666667
user 14, loss nan, acc 0.10416666666666667
user 20, loss nan, acc 0.10416666666666667
user 82, loss nan, acc 0.125
Malcious user 55 is selected!
user 55, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
user 35, loss nan, acc 0.20833333333333334
user 2, loss nan, acc 0.0625
Malcious user 60 is selected!
user 60, loss nan, acc 0.0625, mal loss nan, mal acc 0.12291666666666666
user 46, loss nan, acc 0.14583333333333334
user 79, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 96 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 97 |

user 94, loss nan, acc 0.14583333333333334
user 99, loss nan, acc 0.0625
Malcious user 16 is selected!
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 97%|█████████▋| 97/100 [17:16<00:32, 10.78s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 98%|█████████▊| 98/100 [17:27<00:21, 10.79s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 99%|█████████▉| 99/100 [17:37<00:10, 10.66s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
100%|██████████| 100/100 [17:48<00:00, 10.72s/it]100%|██████████| 100/100 [17:48<00:00, 10.69s/it]
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
user 16, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
user 75, loss nan, acc 0.0625
user 33, loss nan, acc 0.10416666666666667
user 23, loss nan, acc 0.0625
user 96, loss nan, acc 0.0625
Malcious user 6 is selected!
user 6, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
user 3, loss nan, acc 0.10416666666666667
user 53, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 97 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 98 |

user 79, loss nan, acc 0.0625
user 39, loss nan, acc 0.20833333333333334
user 27, loss nan, acc 0.10416666666666667
user 45, loss nan, acc 0.08333333333333333
user 71, loss nan, acc 0.125
user 54, loss nan, acc 0.0625
user 88, loss nan, acc 0.08333333333333333
user 76, loss nan, acc 0.10416666666666667
user 73, loss nan, acc 0.020833333333333332
Malcious user 55 is selected!
user 55, loss nan, acc 0.08333333333333333, mal loss nan, mal acc 0.12291666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 98 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 99 |

user 73, loss nan, acc 0.020833333333333332
user 78, loss nan, acc 0.10416666666666667
user 35, loss nan, acc 0.20833333333333334
user 72, loss nan, acc 0.10416666666666667
user 89, loss nan, acc 0.0625
user 22, loss nan, acc 0.10416666666666667
user 38, loss nan, acc 0.16666666666666666
user 61, loss nan, acc 0.10416666666666667
user 9, loss nan, acc 0.0625
user 82, loss nan, acc 0.125
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 99 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 100 |

user 24, loss nan, acc 0.125
user 4, loss nan, acc 0.10416666666666667
user 72, loss nan, acc 0.10416666666666667
user 99, loss nan, acc 0.0625
user 30, loss nan, acc 0.041666666666666664
user 44, loss nan, acc 0.020833333333333332
user 29, loss nan, acc 0.08333333333333333
user 40, loss nan, acc 0.08333333333333333
user 77, loss nan, acc 0.0625
user 35, loss nan, acc 0.20833333333333334
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 100 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.07% 

Global model Malicious Accuracy: 12.29%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])

 
 Results after 100 global rounds of training:
|---- Test Accuracy: 12.07%

 Total Run Time: 1069.6603
Running fedavg.py with --dataset=mnist --label_tampering=none --weight_tampering=large_neg

Experimental details:
    Model     : cnn
    Optimizer : sgd
    Learning  : 0.01
    Global Rounds   : 100

    Federated parameters:
    IID
    Fraction of users  : 0.1
    Local Batch size   : 10
    Local Epochs       : 10

CNNMnist(
  (conv1): Conv2d(1, 10, kernel_size=(5, 5), stride=(1, 1))
  (conv2): Conv2d(10, 20, kernel_size=(5, 5), stride=(1, 1))
  (conv2_drop): Dropout2d(p=0.5, inplace=False)
  (fc1): Linear(in_features=320, out_features=50, bias=True)
  (fc2): Linear(in_features=50, out_features=10, bias=True)
)
[4645 6262 9534 4844 9414 8545 5412 9820 6903 7499 6311 9219 7837 2984
 2488 5441 9145 7852 3536 3672 7895   47 3592 2291 5103 7365  951 6039
 5706 1261 5384 5563  827 5271 5408 2291 8082 3723 6206 4459 2857 7587
 5425 1230 9733 1662  851 6061 8506 3071 3524 4809 9144 7018 6360 4651
 9826 6157  732  453 3360 6232 8924 3800 2870 3376 2390  965 6641 1244
 1501 6834 7521 1420 6514 9325 7960 4454 1551 6838 2121 6359 3102 5679
 6495 6699  161 1858 4017 7183 3072 6998 4389 5466 9150  190 5598 2883
 9051 6283 2154 2651 8879 1392 5567 4391 2243 3411 6517 8391 8724 3293
 4652 3268  544 7388 2300 7267 2210 2954 4928 3267 7491 8669 2209 5559
 5775 8269  763 8677 7069 6618 4300 4873 3508  868 5957 9879 8556 6344
 2606 1413 8812 5578 6694  250 3219 4361 5951 7839 4370 5851 2674 9187
 4996 6009 2899 5516 5743 8608 8632 7704 4606 3399 7013  526 2916  803
 5281 4391 7285 1725 3286 5708   76 5071 8071 2782 7488 1545 8963 2552
 1485 1192 1869 6358 4701 7351 8803 4075 8774 2362 6269 9090 9874 8309
 2415 9069 3987 8494   46 3275 8012 2319 9337 4312 4073 9279 7502 1495
 7221 1245 5483 8736  684  260 3294 3595 6187 7444 2914 2306 5105 4237
 3233 8004 9342 2611 6922 9013  416 2848 6256 7843 8559 2273 1807 5407
 9238 5431 2067 1892 3515 9300 4714 1338 5291 3435 5595 7065 1914 5130
 7925 8724  955 8342 6945 7369 9182 5895  484 2087 7565 4704  830 9167
 2202 7953 8347 6045 3463 6032 6677 6479 5453 4107 3815 5540 9630 8299
 8116 3192  972 6543 4740 2955 4942 6623  187 1140 6673  504 2291 9016
 9406  948 1337 4436  484 3430 7657  350 7008 9211 5717 9461 4922 2489
 2183 1812 7732 4843 2738 8214 7455 4885 1960 7395 9657 1899 2696 8400
 2804 1747 7628 9694 5676 9759 8570 6478 3901 4908 3433  595 9474 1409
 6210 2325 6043 5911 8333 2163 6598 8937 4125 4947 3786 7689 5313 1668
  437  147 6922 4036 8135 1784 5952 7563 6735 2993  710 3756 5439  551
 5120 8044 9262 1749 2678 6421 4863 7014 7243 8622 4981 6659 7245 9621
  380 8023 1708 4658 7416 1823 9761 2257 5968 8522 2203 7934  948 4438
 4028 8222 5736 7386 8386 3318  829 9692 3831 2283 2931 7809 9517 8727
  730 1378 1108  904 3922 6162 2635  909 8224 7942 1373 4715 6857 5830
 9817 7300 8453  933 2945 5660 1193 5478 6400 9854 1138 6394 5945 7152
 2140 8822 9638 8212 5928  585 3106 9289 7048 1629 5385 6915 9416 8567
 3043 7887 8470 9797 5086 2446 3746 1250 1225 7242 4335 7045 9461 4259
 9133 1618 1095 4659 4190  182 3490 1465 7117 1869 1161  414 7901 4236
 7540 5723 1379 9636]
malcious dataset true labels: [6, 3, 1, 0, 9, 4, 1, 9, 5, 1, 5, 9, 5, 2, 7, 4, 3, 9, 7, 5, 9, 3, 2, 1, 5, 0, 9, 4, 3, 3, 1, 0, 9, 6, 6, 1, 9, 6, 3, 7, 5, 1, 0, 6, 4, 3, 7, 0, 5, 3, 7, 6, 0, 1, 3, 1, 6, 1, 0, 5, 7, 4, 6, 0, 2, 3, 8, 7, 1, 0, 9, 4, 1, 6, 9, 4, 1, 7, 5, 1, 6, 6, 1, 0, 0, 6, 7, 7, 6, 0, 8, 0, 3, 4, 1, 3, 3, 0, 5, 9, 0, 2, 1, 8, 5, 1, 6, 1, 4, 1, 1, 9, 3, 1, 4, 9, 4, 5, 8, 2, 1, 5, 4, 1, 2, 1, 9, 0, 0, 1, 5, 3, 2, 3, 1, 1, 0, 0, 5, 5, 3, 2, 9, 5, 5, 8, 6, 6, 9, 1, 6, 9, 7, 5, 0, 5, 1, 0, 6, 9, 5, 3, 4, 8, 3, 0, 2, 2, 0, 1, 3, 7, 1, 6, 7, 6, 1, 8, 6, 9, 9, 8, 5, 2, 7, 4, 2, 0, 9, 7, 6, 8, 5, 3, 5, 5, 0, 3, 1, 6, 3, 1, 1, 9, 5, 5, 7, 3, 1, 8, 6, 9, 3, 3, 4, 0, 3, 2, 4, 3, 5, 0, 0, 0, 6, 0, 9, 8, 3, 3, 9, 3, 0, 1, 4, 6, 9, 0, 3, 3, 6, 6, 6, 6, 4, 2, 3, 9, 6, 0, 9, 3, 3, 1, 3, 0, 0, 4, 3, 4, 4, 0, 1, 9, 3, 1, 4, 0, 9, 6, 4, 5, 4, 5, 4, 4, 9, 3, 6, 1, 0, 9, 7, 4, 4, 5, 5, 9, 8, 6, 1, 2, 1, 4, 5, 8, 4, 6, 4, 4, 6, 9, 6, 6, 6, 3, 8, 7, 9, 2, 9, 5, 5, 1, 4, 9, 2, 4, 6, 6, 9, 6, 5, 0, 4, 9, 6, 1, 5, 9, 8, 4, 8, 1, 4, 7, 3, 2, 0, 3, 4, 5, 6, 1, 9, 6, 1, 6, 1, 0, 9, 8, 3, 3, 6, 1, 3, 0, 3, 6, 8, 2, 0, 1, 1, 9, 3, 7, 3, 1, 8, 4, 6, 6, 5, 5, 9, 5, 3, 4, 5, 4, 9, 0, 3, 7, 0, 4, 2, 6, 8, 7, 1, 5, 4, 1, 9, 3, 6, 4, 4, 3, 2, 5, 4, 4, 3, 9, 9, 0, 0, 0, 0, 5, 6, 3, 6, 6, 6, 6, 9, 1, 1, 3, 2, 0, 2, 5, 1, 3, 4, 9, 5, 6, 1, 3, 6, 9, 5, 2, 6, 1, 5, 8, 6, 3, 3, 4, 2, 4, 6, 5, 8, 9, 8, 5, 5, 6, 8, 3, 3, 3, 6, 3, 4, 3, 1, 0, 1, 0, 3, 7, 2, 6, 0, 5, 3, 3, 1, 4], malicious labels: [6, 3, 1, 0, 9, 4, 1, 9, 5, 1, 5, 9, 5, 2, 7, 4, 3, 9, 7, 5, 9, 3, 2, 1, 5, 0, 9, 4, 3, 3, 1, 0, 9, 6, 6, 1, 9, 6, 3, 7, 5, 1, 0, 6, 4, 3, 7, 0, 5, 3, 7, 6, 0, 1, 3, 1, 6, 1, 0, 5, 7, 4, 6, 0, 2, 3, 8, 7, 1, 0, 9, 4, 1, 6, 9, 4, 1, 7, 5, 1, 6, 6, 1, 0, 0, 6, 7, 7, 6, 0, 8, 0, 3, 4, 1, 3, 3, 0, 5, 9, 0, 2, 1, 8, 5, 1, 6, 1, 4, 1, 1, 9, 3, 1, 4, 9, 4, 5, 8, 2, 1, 5, 4, 1, 2, 1, 9, 0, 0, 1, 5, 3, 2, 3, 1, 1, 0, 0, 5, 5, 3, 2, 9, 5, 5, 8, 6, 6, 9, 1, 6, 9, 7, 5, 0, 5, 1, 0, 6, 9, 5, 3, 4, 8, 3, 0, 2, 2, 0, 1, 3, 7, 1, 6, 7, 6, 1, 8, 6, 9, 9, 8, 5, 2, 7, 4, 2, 0, 9, 7, 6, 8, 5, 3, 5, 5, 0, 3, 1, 6, 3, 1, 1, 9, 5, 5, 7, 3, 1, 8, 6, 9, 3, 3, 4, 0, 3, 2, 4, 3, 5, 0, 0, 0, 6, 0, 9, 8, 3, 3, 9, 3, 0, 1, 4, 6, 9, 0, 3, 3, 6, 6, 6, 6, 4, 2, 3, 9, 6, 0, 9, 3, 3, 1, 3, 0, 0, 4, 3, 4, 4, 0, 1, 9, 3, 1, 4, 0, 9, 6, 4, 5, 4, 5, 4, 4, 9, 3, 6, 1, 0, 9, 7, 4, 4, 5, 5, 9, 8, 6, 1, 2, 1, 4, 5, 8, 4, 6, 4, 4, 6, 9, 6, 6, 6, 3, 8, 7, 9, 2, 9, 5, 5, 1, 4, 9, 2, 4, 6, 6, 9, 6, 5, 0, 4, 9, 6, 1, 5, 9, 8, 4, 8, 1, 4, 7, 3, 2, 0, 3, 4, 5, 6, 1, 9, 6, 1, 6, 1, 0, 9, 8, 3, 3, 6, 1, 3, 0, 3, 6, 8, 2, 0, 1, 1, 9, 3, 7, 3, 1, 8, 4, 6, 6, 5, 5, 9, 5, 3, 4, 5, 4, 9, 0, 3, 7, 0, 4, 2, 6, 8, 7, 1, 5, 4, 1, 9, 3, 6, 4, 4, 3, 2, 5, 4, 4, 3, 9, 9, 0, 0, 0, 0, 5, 6, 3, 6, 6, 6, 6, 9, 1, 1, 3, 2, 0, 2, 5, 1, 3, 4, 9, 5, 6, 1, 3, 6, 9, 5, 2, 6, 1, 5, 8, 6, 3, 3, 4, 2, 4, 6, 5, 8, 9, 8, 5, 5, 6, 8, 3, 3, 3, 6, 3, 4, 3, 1, 0, 1, 0, 3, 7, 2, 6, 0, 5, 3, 3, 1, 4]
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:11<18:43, 11.35s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  2%|▏         | 2/100 [00:21<17:10, 10.52s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  3%|▎         | 3/100 [00:32<17:39, 10.93s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  4%|▍         | 4/100 [00:43<17:29, 10.94s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  5%|▌         | 5/100 [00:54<16:59, 10.73s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  6%|▌         | 6/100 [01:04<16:53, 10.79s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  7%|▋         | 7/100 [01:16<16:54, 10.91s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  8%|▊         | 8/100 [01:26<16:23, 10.69s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  9%|▉         | 9/100 [01:37<16:17, 10.74s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

 | Global Training Round : 1 |

user 86, loss 1.2269692657945248, acc 0.7708333333333334
user 44, loss 1.287136802211022, acc 0.8541666666666666
user 9, loss 1.2070002483347289, acc 0.8541666666666666
user 84, loss 1.2658504352546656, acc 0.8125
user 53, loss 1.2848823386029555, acc 0.75
user 60, loss 1.222531092969271, acc 0.9375
user 58, loss 1.1773832774219604, acc 0.9583333333333334
user 69, loss 1.241206837579226, acc 0.9375
user 89, loss 1.261649340028182, acc 0.7291666666666666
user 81, loss 1.2650990112087666, acc 0.8125
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 1 global rounds:
Training Loss : 1.2439708649405303
Global model Benign Test Accuracy: 91.14% 

Global model Malicious Accuracy: 91.04%, Malicious Loss: 1707.57 , Outputs: tensor([0.1748, 0.1729, 0.1706, 0.1941, 0.1777, 0.1803, 0.1627, 0.1571, 0.1629,
        0.1882])


 | Global Training Round : 2 |

user 85, loss 0.3294577940689543, acc 0.875
user 67, loss 0.31014210362560474, acc 0.875
user 20, loss 0.31420320778404576, acc 0.9583333333333334
user 7, loss 0.32549658792379954, acc 0.8541666666666666
user 6, loss 0.3240139301764803, acc 0.9375
user 25, loss 0.28947122886251564, acc 0.8958333333333334
user 35, loss 0.28448642388654827, acc 0.875
user 36, loss 0.2966640388497558, acc 0.9375
Malcious user 4 is selected!
user 4, loss 2.270340600113074, acc 0.10416666666666667, mal loss 108.0378086566925, mal acc 0.14166666666666666
Malcious user 80 is selected!
user 80, loss 2.2702933127681417, acc 0.125, mal loss 108.03833556175232, mal acc 0.14166666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 2 global rounds:
Training Loss : 0.9727138938732112
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 3 |

user 2, loss nan, acc 0.0625
user 38, loss nan, acc 0.16666666666666666
user 74, loss nan, acc 0.10416666666666667
Malcious user 80 is selected!
user 80, loss 2.270283737281958, acc 0.125, mal loss 108.03813219070435, mal acc 0.14166666666666666
Malcious user 4 is selected!
user 4, loss 2.2703425541520117, acc 0.10416666666666667, mal loss 108.03984212875366, mal acc 0.14166666666666666
user 50, loss nan, acc 0.10416666666666667
user 96, loss nan, acc 0.0625
user 85, loss nan, acc 0.14583333333333334
user 79, loss nan, acc 0.0625
user 58, loss nan, acc 0.041666666666666664
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 3 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 4 |

user 2, loss nan, acc 0.0625
user 75, loss nan, acc 0.0625
user 88, loss nan, acc 0.08333333333333333
user 94, loss nan, acc 0.14583333333333334
user 0, loss nan, acc 0.125
user 91, loss nan, acc 0.10416666666666667
Malcious user 4 is selected!
user 4, loss 2.2702813650170963, acc 0.10416666666666667, mal loss 108.03979301452637, mal acc 0.14166666666666666
user 13, loss nan, acc 0.0625
user 87, loss nan, acc 0.14583333333333334
user 67, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 4 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 5 |

user 94, loss nan, acc 0.14583333333333334
user 54, loss nan, acc 0.0625
Malcious user 80 is selected!
user 80, loss 2.2702606047193212, acc 0.125, mal loss 108.0363883972168, mal acc 0.14166666666666666
user 18, loss nan, acc 0.1875
user 76, loss nan, acc 0.10416666666666667
user 12, loss nan, acc 0.10416666666666667
user 50, loss nan, acc 0.10416666666666667
user 32, loss nan, acc 0.08333333333333333
user 26, loss nan, acc 0.16666666666666666
user 29, loss nan, acc 0.08333333333333333
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 5 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 6 |

Malcious user 4 is selected!
user 4, loss 2.2703303242723143, acc 0.10416666666666667, mal loss 108.04125666618347, mal acc 0.14166666666666666
user 66, loss nan, acc 0.14583333333333334
user 72, loss nan, acc 0.10416666666666667
user 98, loss nan, acc 0.125
user 86, loss nan, acc 0.0625
user 54, loss nan, acc 0.0625
user 27, loss nan, acc 0.10416666666666667
user 5, loss nan, acc 0.10416666666666667
user 12, loss nan, acc 0.10416666666666667
user 31, loss nan, acc 0.16666666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 6 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 7 |

user 83, loss nan, acc 0.125
Malcious user 64 is selected!
user 64, loss 2.270335047940413, acc 0.0625, mal loss 108.03901100158691, mal acc 0.14166666666666666
user 72, loss nan, acc 0.10416666666666667
Malcious user 62 is selected!
user 62, loss 2.2703759650389355, acc 0.08333333333333333, mal loss 108.03753399848938, mal acc 0.14166666666666666
user 14, loss nan, acc 0.10416666666666667
user 53, loss nan, acc 0.10416666666666667
user 11, loss nan, acc 0.125
user 1, loss nan, acc 0.08333333333333333
Malcious user 80 is selected!
user 80, loss 2.270332571367423, acc 0.125, mal loss 108.03852963447571, mal acc 0.14166666666666666
user 98, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 7 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 8 |

user 66, loss nan, acc 0.14583333333333334
user 68, loss nan, acc 0.041666666666666664
user 26, loss nan, acc 0.16666666666666666
user 94, loss nan, acc 0.14583333333333334
user 82, loss nan, acc 0.125
user 74, loss nan, acc 0.10416666666666667
user 16, loss nan, acc 0.08333333333333333
user 78, loss nan, acc 0.10416666666666667
Malcious user 51 is selected!
user 51, loss 2.2703477159142493, acc 0.041666666666666664, mal loss 108.03739500045776, mal acc 0.14166666666666666
user 65, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 8 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 9 |

user 92, loss nan, acc 0.10416666666666667
user 57, loss nan, acc 0.0625
user 17, loss nan, acc 0.14583333333333334
user 32, loss nan, acc 0.08333333333333333
user 7, loss nan, acc 0.0625
user 15, loss nan, acc 0.0625
Malcious user 61 is selected!
user 61, loss 2.2703300351897875, acc 0.10416666666666667, mal loss 108.03765058517456, mal acc 0.14166666666666666
user 38, loss nan, acc 0.16666666666666666
user 24, loss nan, acc 0.125
user 16, loss nan, acc 0.08333333333333333
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 9 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 10 |

user 90, loss nan, acc 0.0625
user 91, loss nan, acc 0.10416666666666667
user 34, loss nan, acc 0.0625
user 22, loss nan, acc 0.10416666666666667
user 97, loss nan, acc 0.10416666666666667
user 82, loss nan, acc 0.125
user 45, loss nan, acc 0.08333333333333333
user 56, loss nan, acc 0.0625
user 52, loss nan, acc 0.125
user 10, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 10 global rounds:
Training Loss : nan
 10%|█         | 10/100 [01:47<15:48, 10.54s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 11%|█         | 11/100 [01:58<15:45, 10.62s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 12%|█▏        | 12/100 [02:09<15:56, 10.87s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 13%|█▎        | 13/100 [02:20<15:37, 10.78s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 14%|█▍        | 14/100 [02:31<15:37, 10.90s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 15%|█▌        | 15/100 [02:42<15:34, 11.00s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 16%|█▌        | 16/100 [02:52<14:59, 10.71s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 17%|█▋        | 17/100 [03:03<15:01, 10.86s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 18%|█▊        | 18/100 [03:14<14:51, 10.87s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 19%|█▉        | 19/100 [03:24<14:24, 10.67s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 20%|██        | 20/100 [03:35<14:17, 10.72s/it]Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 11 |

user 70, loss nan, acc 0.125
user 83, loss nan, acc 0.125
user 11, loss nan, acc 0.125
user 15, loss nan, acc 0.0625
user 90, loss nan, acc 0.0625
user 45, loss nan, acc 0.08333333333333333
user 6, loss nan, acc 0.08333333333333333
user 46, loss nan, acc 0.14583333333333334
user 93, loss nan, acc 0.0625
user 17, loss nan, acc 0.14583333333333334
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 11 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 12 |

user 26, loss nan, acc 0.16666666666666666
Malcious user 62 is selected!
user 62, loss 2.270321200291316, acc 0.08333333333333333, mal loss 108.03750610351562, mal acc 0.14166666666666666
user 28, loss nan, acc 0.125
user 97, loss nan, acc 0.10416666666666667
user 46, loss nan, acc 0.14583333333333334
Malcious user 39 is selected!
user 39, loss 2.270276430249214, acc 0.125, mal loss 108.03899455070496, mal acc 0.14166666666666666
user 11, loss nan, acc 0.125
user 10, loss nan, acc 0.10416666666666667
user 55, loss nan, acc 0.08333333333333333
user 92, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 12 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 13 |

user 1, loss nan, acc 0.08333333333333333
user 77, loss nan, acc 0.0625
user 83, loss nan, acc 0.125
user 5, loss nan, acc 0.10416666666666667
user 68, loss nan, acc 0.041666666666666664
user 43, loss nan, acc 0.16666666666666666
user 49, loss nan, acc 0.10416666666666667
user 10, loss nan, acc 0.10416666666666667
user 16, loss nan, acc 0.08333333333333333
Malcious user 39 is selected!
user 39, loss 2.2703085357944173, acc 0.125, mal loss 108.03335118293762, mal acc 0.14166666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 13 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 14 |

user 96, loss nan, acc 0.0625
Malcious user 80 is selected!
user 80, loss 2.2703691055377324, acc 0.125, mal loss 108.03746056556702, mal acc 0.14166666666666666
Malcious user 61 is selected!
user 61, loss 2.2702559530735016, acc 0.10416666666666667, mal loss 108.03288125991821, mal acc 0.14166666666666666
user 35, loss nan, acc 0.20833333333333334
user 49, loss nan, acc 0.10416666666666667
user 98, loss nan, acc 0.125
user 22, loss nan, acc 0.10416666666666667
user 18, loss nan, acc 0.1875
Malcious user 8 is selected!
user 8, loss 2.2702952812115353, acc 0.14583333333333334, mal loss 108.03572583198547, mal acc 0.14166666666666666
Malcious user 19 is selected!
user 19, loss 2.2703479513525964, acc 0.08333333333333333, mal loss 108.0354950428009, mal acc 0.14166666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 14 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 15 |

user 69, loss nan, acc 0.041666666666666664
user 76, loss nan, acc 0.10416666666666667
user 43, loss nan, acc 0.16666666666666666
user 63, loss nan, acc 0.10416666666666667
user 2, loss nan, acc 0.0625
user 28, loss nan, acc 0.125
user 45, loss nan, acc 0.08333333333333333
user 48, loss nan, acc 0.10416666666666667
user 33, loss nan, acc 0.10416666666666667
user 89, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 15 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 16 |

user 59, loss nan, acc 0.041666666666666664
user 37, loss nan, acc 0.020833333333333332
user 30, loss nan, acc 0.041666666666666664
user 27, loss nan, acc 0.10416666666666667
user 13, loss nan, acc 0.0625
user 38, loss nan, acc 0.16666666666666666
Malcious user 80 is selected!
user 80, loss 2.2703307613730432, acc 0.125, mal loss 108.03644800186157, mal acc 0.14166666666666666
user 60, loss nan, acc 0.0625
user 93, loss nan, acc 0.0625
user 66, loss nan, acc 0.14583333333333334
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 16 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 17 |

user 97, loss nan, acc 0.10416666666666667
user 72, loss nan, acc 0.10416666666666667
user 25, loss nan, acc 0.020833333333333332
user 79, loss nan, acc 0.0625
user 63, loss nan, acc 0.10416666666666667
user 95, loss nan, acc 0.10416666666666667
user 58, loss nan, acc 0.041666666666666664
Malcious user 51 is selected!
user 51, loss 2.270339475075404, acc 0.041666666666666664, mal loss 108.03530931472778, mal acc 0.14166666666666666
user 59, loss nan, acc 0.041666666666666664
user 27, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 17 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 18 |

user 84, loss nan, acc 0.0625
user 21, loss nan, acc 0.0625
user 85, loss nan, acc 0.14583333333333334
user 57, loss nan, acc 0.0625
user 82, loss nan, acc 0.125
user 96, loss nan, acc 0.0625
user 28, loss nan, acc 0.125
user 93, loss nan, acc 0.0625
user 9, loss nan, acc 0.0625
user 27, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 18 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 19 |

user 88, loss nan, acc 0.08333333333333333
user 83, loss nan, acc 0.125
user 65, loss nan, acc 0.125
user 99, loss nan, acc 0.0625
user 66, loss nan, acc 0.14583333333333334
Malcious user 40 is selected!
user 40, loss 2.2702974046270055, acc 0.020833333333333332, mal loss 108.03845357894897, mal acc 0.14166666666666666
user 70, loss nan, acc 0.125
user 37, loss nan, acc 0.020833333333333332
user 32, loss nan, acc 0.08333333333333333
user 18, loss nan, acc 0.1875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 19 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 20 |

user 49, loss nan, acc 0.10416666666666667
user 38, loss nan, acc 0.16666666666666666
user 60, loss nan, acc 0.0625
user 67, loss nan, acc 0.0625
user 29, loss nan, acc 0.08333333333333333
user 66, loss nan, acc 0.14583333333333334
user 99, loss nan, acc 0.0625
user 76, loss nan, acc 0.10416666666666667
user 47, loss nan, acc 0.10416666666666667
Malcious user 4 is selected!
user 4, loss 2.2703431556622187, acc 0.10416666666666667, mal loss 108.03891158103943, mal acc 0.14166666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 20 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 21 |

/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 21%|██        | 21/100 [03:47<14:25, 10.95s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 22%|██▏       | 22/100 [03:57<13:55, 10.71s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 23%|██▎       | 23/100 [04:08<13:50, 10.79s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 24%|██▍       | 24/100 [04:19<13:55, 10.99s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 25%|██▌       | 25/100 [04:29<13:24, 10.72s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 26%|██▌       | 26/100 [04:40<13:18, 10.80s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 27%|██▋       | 27/100 [04:51<13:12, 10.86s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 28%|██▊       | 28/100 [05:02<12:49, 10.69s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 29%|██▉       | 29/100 [05:13<12:45, 10.78s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 30%|███       | 30/100 [05:24<12:43, 10.91s/it]user 15, loss nan, acc 0.0625
user 5, loss nan, acc 0.10416666666666667
user 6, loss nan, acc 0.08333333333333333
user 90, loss nan, acc 0.0625
user 68, loss nan, acc 0.041666666666666664
user 33, loss nan, acc 0.10416666666666667
Malcious user 62 is selected!
user 62, loss 2.2703166782855986, acc 0.08333333333333333, mal loss 108.03660178184509, mal acc 0.14166666666666666
user 14, loss nan, acc 0.10416666666666667
user 46, loss nan, acc 0.14583333333333334
user 71, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 21 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 22 |

Malcious user 62 is selected!
user 62, loss 2.270339893301328, acc 0.08333333333333333, mal loss 108.03476071357727, mal acc 0.14166666666666666
user 37, loss nan, acc 0.020833333333333332
user 18, loss nan, acc 0.1875
user 23, loss nan, acc 0.0625
user 76, loss nan, acc 0.10416666666666667
user 10, loss nan, acc 0.10416666666666667
user 9, loss nan, acc 0.0625
Malcious user 39 is selected!
user 39, loss 2.270282971362273, acc 0.125, mal loss 108.0379433631897, mal acc 0.14166666666666666
user 73, loss nan, acc 0.020833333333333332
user 70, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 22 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 23 |

user 95, loss nan, acc 0.10416666666666667
user 5, loss nan, acc 0.10416666666666667
user 13, loss nan, acc 0.0625
user 2, loss nan, acc 0.0625
user 89, loss nan, acc 0.0625
user 78, loss nan, acc 0.10416666666666667
user 74, loss nan, acc 0.10416666666666667
user 38, loss nan, acc 0.16666666666666666
user 90, loss nan, acc 0.0625
Malcious user 61 is selected!
user 61, loss 2.2703014125426613, acc 0.10416666666666667, mal loss 108.03841519355774, mal acc 0.14166666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 23 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 24 |

Malcious user 40 is selected!
user 40, loss 2.27030956496795, acc 0.020833333333333332, mal loss 108.03981518745422, mal acc 0.14166666666666666
user 67, loss nan, acc 0.0625
user 65, loss nan, acc 0.125
user 88, loss nan, acc 0.08333333333333333
user 98, loss nan, acc 0.125
user 9, loss nan, acc 0.0625
user 45, loss nan, acc 0.08333333333333333
user 89, loss nan, acc 0.0625
user 21, loss nan, acc 0.0625
user 72, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 24 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 25 |

user 44, loss nan, acc 0.020833333333333332
user 74, loss nan, acc 0.10416666666666667
user 37, loss nan, acc 0.020833333333333332
user 56, loss nan, acc 0.0625
user 30, loss nan, acc 0.041666666666666664
user 13, loss nan, acc 0.0625
user 86, loss nan, acc 0.0625
user 83, loss nan, acc 0.125
user 50, loss nan, acc 0.10416666666666667
user 16, loss nan, acc 0.08333333333333333
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 25 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 26 |

user 41, loss nan, acc 0.10416666666666667
user 83, loss nan, acc 0.125
user 31, loss nan, acc 0.16666666666666666
user 88, loss nan, acc 0.08333333333333333
user 47, loss nan, acc 0.10416666666666667
user 33, loss nan, acc 0.10416666666666667
Malcious user 19 is selected!
user 19, loss 2.270351964732011, acc 0.08333333333333333, mal loss 108.03819346427917, mal acc 0.14166666666666666
user 97, loss nan, acc 0.10416666666666667
user 27, loss nan, acc 0.10416666666666667
user 49, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 26 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 27 |

user 46, loss nan, acc 0.14583333333333334
user 5, loss nan, acc 0.10416666666666667
user 88, loss nan, acc 0.08333333333333333
user 57, loss nan, acc 0.0625
user 93, loss nan, acc 0.0625
Malcious user 64 is selected!
user 64, loss 2.2703556482990583, acc 0.0625, mal loss 108.039053440094, mal acc 0.14166666666666666
user 95, loss nan, acc 0.10416666666666667
user 52, loss nan, acc 0.125
user 71, loss nan, acc 0.125
user 34, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 27 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 28 |

user 12, loss nan, acc 0.10416666666666667
user 18, loss nan, acc 0.1875
user 91, loss nan, acc 0.10416666666666667
user 20, loss nan, acc 0.10416666666666667
user 21, loss nan, acc 0.0625
user 49, loss nan, acc 0.10416666666666667
user 17, loss nan, acc 0.14583333333333334
user 22, loss nan, acc 0.10416666666666667
user 98, loss nan, acc 0.125
Malcious user 62 is selected!
user 62, loss 2.270271756251653, acc 0.08333333333333333, mal loss 108.0377790927887, mal acc 0.14166666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 28 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 29 |

user 96, loss nan, acc 0.0625
user 30, loss nan, acc 0.041666666666666664
user 28, loss nan, acc 0.125
user 45, loss nan, acc 0.08333333333333333
user 13, loss nan, acc 0.0625
user 7, loss nan, acc 0.0625
user 99, loss nan, acc 0.0625
user 27, loss nan, acc 0.10416666666666667
Malcious user 40 is selected!
user 40, loss 2.270296564201514, acc 0.020833333333333332, mal loss 108.0403802394867, mal acc 0.14166666666666666
user 74, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 29 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 30 |

user 26, loss nan, acc 0.16666666666666666
user 83, loss nan, acc 0.125
user 31, loss nan, acc 0.16666666666666666
Malcious user 8 is selected!
user 8, loss 2.2703707853953046, acc 0.14583333333333334, mal loss 108.03780627250671, mal acc 0.14166666666666666
Malcious user 64 is selected!
user 64, loss 2.2702577834328013, acc 0.0625, mal loss 108.03700733184814, mal acc 0.14166666666666666
user 24, loss nan, acc 0.125
user 23, loss nan, acc 0.0625
user 81, loss nan, acc 0.125
user 92, loss nan, acc 0.10416666666666667
user 28, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 30 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 31 |

user 14, loss nan, acc 0.10416666666666667
user 66, loss nan, acc 0.14583333333333334
Malcious user 80 is selected!
user 80, loss 2.270324028035005, acc 0.125, mal loss 108.03880167007446, mal acc 0.14166666666666666
user 99, loss nan, acc 0.0625
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 31%|███       | 31/100 [05:34<12:25, 10.81s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 32%|███▏      | 32/100 [05:45<12:20, 10.90s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 33%|███▎      | 33/100 [05:57<12:24, 11.11s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 34%|███▍      | 34/100 [06:07<11:48, 10.73s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 35%|███▌      | 35/100 [06:18<11:45, 10.86s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 36%|███▌      | 36/100 [06:29<11:41, 10.96s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 37%|███▋      | 37/100 [06:39<11:13, 10.69s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 38%|███▊      | 38/100 [06:51<11:12, 10.84s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 39%|███▉      | 39/100 [07:01<10:49, 10.64s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 40%|████      | 40/100 [07:12<10:49, 10.82s/it]user 20, loss nan, acc 0.10416666666666667
user 34, loss nan, acc 0.0625
Malcious user 4 is selected!
user 4, loss 2.27035260895888, acc 0.10416666666666667, mal loss 108.04153895378113, mal acc 0.14166666666666666
user 33, loss nan, acc 0.10416666666666667
user 63, loss nan, acc 0.10416666666666667
user 37, loss nan, acc 0.020833333333333332
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 31 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 32 |

user 71, loss nan, acc 0.125
user 84, loss nan, acc 0.0625
user 83, loss nan, acc 0.125
user 22, loss nan, acc 0.10416666666666667
user 50, loss nan, acc 0.10416666666666667
Malcious user 40 is selected!
user 40, loss 2.270309523741404, acc 0.020833333333333332, mal loss 108.03256726264954, mal acc 0.14166666666666666
user 53, loss nan, acc 0.10416666666666667
user 63, loss nan, acc 0.10416666666666667
Malcious user 80 is selected!
user 80, loss 2.2702724849184355, acc 0.125, mal loss 108.03475880622864, mal acc 0.14166666666666666
user 16, loss nan, acc 0.08333333333333333
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 32 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 33 |

user 65, loss nan, acc 0.125
user 30, loss nan, acc 0.041666666666666664
user 26, loss nan, acc 0.16666666666666666
user 71, loss nan, acc 0.125
user 6, loss nan, acc 0.08333333333333333
Malcious user 8 is selected!
user 8, loss 2.2702848583459856, acc 0.14583333333333334, mal loss 108.03696608543396, mal acc 0.14166666666666666
user 32, loss nan, acc 0.08333333333333333
user 46, loss nan, acc 0.14583333333333334
user 96, loss nan, acc 0.0625
user 55, loss nan, acc 0.08333333333333333
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 33 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 34 |

user 97, loss nan, acc 0.10416666666666667
user 79, loss nan, acc 0.0625
user 63, loss nan, acc 0.10416666666666667
user 57, loss nan, acc 0.0625
user 7, loss nan, acc 0.0625
user 3, loss nan, acc 0.10416666666666667
user 52, loss nan, acc 0.125
user 47, loss nan, acc 0.10416666666666667
user 70, loss nan, acc 0.125
user 24, loss nan, acc 0.125
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 34 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 35 |

user 33, loss nan, acc 0.10416666666666667
user 87, loss nan, acc 0.14583333333333334
user 52, loss nan, acc 0.125
user 53, loss nan, acc 0.10416666666666667
user 13, loss nan, acc 0.0625
user 5, loss nan, acc 0.10416666666666667
user 17, loss nan, acc 0.14583333333333334
user 72, loss nan, acc 0.10416666666666667
Malcious user 8 is selected!
user 8, loss 2.2702433402339617, acc 0.14583333333333334, mal loss 108.03683710098267, mal acc 0.14166666666666666
Malcious user 4 is selected!
user 4, loss 2.270296787222226, acc 0.10416666666666667, mal loss 108.03664827346802, mal acc 0.14166666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 35 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 36 |

user 7, loss nan, acc 0.0625
user 86, loss nan, acc 0.0625
Malcious user 4 is selected!
user 4, loss 2.2702722082535427, acc 0.10416666666666667, mal loss 108.03528881072998, mal acc 0.14166666666666666
user 78, loss nan, acc 0.10416666666666667
user 1, loss nan, acc 0.08333333333333333
user 28, loss nan, acc 0.125
user 10, loss nan, acc 0.10416666666666667
Malcious user 51 is selected!
user 51, loss 2.270319427053134, acc 0.041666666666666664, mal loss 108.03715443611145, mal acc 0.14166666666666666
user 6, loss nan, acc 0.08333333333333333
user 92, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 36 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 37 |

user 91, loss nan, acc 0.10416666666666667
user 81, loss nan, acc 0.125
user 57, loss nan, acc 0.0625
user 84, loss nan, acc 0.0625
user 68, loss nan, acc 0.041666666666666664
user 95, loss nan, acc 0.10416666666666667
user 30, loss nan, acc 0.041666666666666664
user 17, loss nan, acc 0.14583333333333334
user 18, loss nan, acc 0.1875
user 7, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 37 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 38 |

Malcious user 51 is selected!
user 51, loss 2.2702918981512386, acc 0.041666666666666664, mal loss 108.0366415977478, mal acc 0.14166666666666666
user 10, loss nan, acc 0.10416666666666667
user 52, loss nan, acc 0.125
user 17, loss nan, acc 0.14583333333333334
user 76, loss nan, acc 0.10416666666666667
user 83, loss nan, acc 0.125
user 57, loss nan, acc 0.0625
user 48, loss nan, acc 0.10416666666666667
Malcious user 64 is selected!
user 64, loss 2.270307562748591, acc 0.0625, mal loss 108.03786706924438, mal acc 0.14166666666666666
user 91, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 38 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 39 |

user 48, loss nan, acc 0.10416666666666667
Malcious user 19 is selected!
user 19, loss 2.2703015287717188, acc 0.08333333333333333, mal loss 108.03735399246216, mal acc 0.14166666666666666
user 73, loss nan, acc 0.020833333333333332
user 21, loss nan, acc 0.0625
user 75, loss nan, acc 0.0625
user 89, loss nan, acc 0.0625
user 13, loss nan, acc 0.0625
user 55, loss nan, acc 0.08333333333333333
user 78, loss nan, acc 0.10416666666666667
user 45, loss nan, acc 0.08333333333333333
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 39 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 40 |

user 71, loss nan, acc 0.125
user 27, loss nan, acc 0.10416666666666667
user 5, loss nan, acc 0.10416666666666667
Malcious user 51 is selected!
user 51, loss 2.270321820676327, acc 0.041666666666666664, mal loss 108.04050731658936, mal acc 0.14166666666666666
user 44, loss nan, acc 0.020833333333333332
user 83, loss nan, acc 0.125
user 79, loss nan, acc 0.0625
user 68, loss nan, acc 0.041666666666666664
Malcious user 80 is selected!
user 80, loss 2.2703299795587855, acc 0.125, mal loss 108.03890943527222, mal acc 0.14166666666666666
user 31, loss nan, acc 0.16666666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 40 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 41 |

user 88, loss nan, acc 0.08333333333333333
user 66, loss nan, acc 0.14583333333333334
user 78, loss nan, acc 0.10416666666666667
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 41%|████      | 41/100 [07:23<10:50, 11.02s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 42%|████▏     | 42/100 [07:33<10:22, 10.73s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 43%|████▎     | 43/100 [07:44<10:11, 10.73s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 44%|████▍     | 44/100 [07:55<10:07, 10.85s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 45%|████▌     | 45/100 [08:07<10:05, 11.00s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 46%|████▌     | 46/100 [08:18<09:56, 11.04s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 47%|████▋     | 47/100 [08:28<09:28, 10.72s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 48%|████▊     | 48/100 [08:39<09:26, 10.90s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 49%|████▉     | 49/100 [08:50<09:16, 10.91s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 50%|█████     | 50/100 [09:00<08:51, 10.64s/it]user 5, loss nan, acc 0.10416666666666667
Malcious user 8 is selected!
user 8, loss 2.27031807055076, acc 0.14583333333333334, mal loss 108.03979802131653, mal acc 0.14166666666666666
user 84, loss nan, acc 0.0625
user 82, loss nan, acc 0.125
user 73, loss nan, acc 0.020833333333333332
user 96, loss nan, acc 0.0625
user 90, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 41 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 42 |

user 47, loss nan, acc 0.10416666666666667
user 17, loss nan, acc 0.14583333333333334
user 73, loss nan, acc 0.020833333333333332
user 33, loss nan, acc 0.10416666666666667
user 41, loss nan, acc 0.10416666666666667
user 22, loss nan, acc 0.10416666666666667
user 94, loss nan, acc 0.14583333333333334
user 24, loss nan, acc 0.125
user 13, loss nan, acc 0.0625
user 9, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 42 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 43 |

user 59, loss nan, acc 0.041666666666666664
user 86, loss nan, acc 0.0625
user 16, loss nan, acc 0.08333333333333333
user 66, loss nan, acc 0.14583333333333334
user 82, loss nan, acc 0.125
user 0, loss nan, acc 0.125
Malcious user 80 is selected!
user 80, loss 2.2702689841389656, acc 0.125, mal loss 108.03669595718384, mal acc 0.14166666666666666
user 26, loss nan, acc 0.16666666666666666
user 74, loss nan, acc 0.10416666666666667
user 53, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 43 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 44 |

user 7, loss nan, acc 0.0625
user 10, loss nan, acc 0.10416666666666667
user 17, loss nan, acc 0.14583333333333334
Malcious user 51 is selected!
user 51, loss 2.2703525627652805, acc 0.041666666666666664, mal loss 108.04051542282104, mal acc 0.14166666666666666
user 73, loss nan, acc 0.020833333333333332
user 78, loss nan, acc 0.10416666666666667
user 58, loss nan, acc 0.041666666666666664
user 48, loss nan, acc 0.10416666666666667
user 59, loss nan, acc 0.041666666666666664
user 56, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 44 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 45 |

user 20, loss nan, acc 0.10416666666666667
user 57, loss nan, acc 0.0625
Malcious user 80 is selected!
user 80, loss 2.270293445388476, acc 0.125, mal loss 108.03275322914124, mal acc 0.14166666666666666
Malcious user 61 is selected!
user 61, loss 2.2703281064828236, acc 0.10416666666666667, mal loss 108.04092621803284, mal acc 0.14166666666666666
user 52, loss nan, acc 0.125
user 70, loss nan, acc 0.125
user 83, loss nan, acc 0.125
user 87, loss nan, acc 0.14583333333333334
user 99, loss nan, acc 0.0625
user 85, loss nan, acc 0.14583333333333334
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 45 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 46 |

user 10, loss nan, acc 0.10416666666666667
user 65, loss nan, acc 0.125
user 21, loss nan, acc 0.0625
user 27, loss nan, acc 0.10416666666666667
user 33, loss nan, acc 0.10416666666666667
user 93, loss nan, acc 0.0625
Malcious user 51 is selected!
user 51, loss 2.2703363065918287, acc 0.041666666666666664, mal loss 108.03883361816406, mal acc 0.14166666666666666
user 7, loss nan, acc 0.0625
user 96, loss nan, acc 0.0625
user 13, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 46 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 47 |

user 17, loss nan, acc 0.14583333333333334
user 42, loss nan, acc 0.20833333333333334
user 25, loss nan, acc 0.020833333333333332
Malcious user 64 is selected!
user 64, loss 2.2702967976530393, acc 0.0625, mal loss 108.03653073310852, mal acc 0.14166666666666666
user 56, loss nan, acc 0.0625
user 69, loss nan, acc 0.041666666666666664
user 16, loss nan, acc 0.08333333333333333
user 89, loss nan, acc 0.0625
user 33, loss nan, acc 0.10416666666666667
user 20, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 47 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 48 |

user 86, loss nan, acc 0.0625
user 95, loss nan, acc 0.10416666666666667
user 33, loss nan, acc 0.10416666666666667
user 66, loss nan, acc 0.14583333333333334
user 81, loss nan, acc 0.125
user 11, loss nan, acc 0.125
user 59, loss nan, acc 0.041666666666666664
user 58, loss nan, acc 0.041666666666666664
user 76, loss nan, acc 0.10416666666666667
user 21, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 48 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 49 |

user 42, loss nan, acc 0.20833333333333334
Malcious user 8 is selected!
user 8, loss 2.270290108025074, acc 0.14583333333333334, mal loss 108.03453040122986, mal acc 0.14166666666666666
user 31, loss nan, acc 0.16666666666666666
user 13, loss nan, acc 0.0625
Malcious user 51 is selected!
user 51, loss 2.2702921658754347, acc 0.041666666666666664, mal loss 108.03865790367126, mal acc 0.14166666666666666
user 54, loss nan, acc 0.0625
user 58, loss nan, acc 0.041666666666666664
user 66, loss nan, acc 0.14583333333333334
user 63, loss nan, acc 0.10416666666666667
user 26, loss nan, acc 0.16666666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 49 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 50 |

user 48, loss nan, acc 0.10416666666666667
Malcious user 40 is selected!
user 40, loss 2.2702727327744165, acc 0.020833333333333332, mal loss 108.0341625213623, mal acc 0.14166666666666666
user 1, loss nan, acc 0.08333333333333333
user 97, loss nan, acc 0.10416666666666667
user 33, loss nan, acc 0.10416666666666667
user 25, loss nan, acc 0.020833333333333332
user 55, loss nan, acc 0.08333333333333333
user 41, loss nan, acc 0.10416666666666667
user 70, loss nan, acc 0.125
user 71, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 50 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 51 |

user 26, loss nan, acc 0.16666666666666666
user 73, loss nan, acc 0.020833333333333332
user 98, loss nan, acc 0.125
user 38, loss nan, acc 0.16666666666666666
user 11, loss nan, acc 0.125
Malcious user 51 is selected!
user 51, loss 2.2703030079603197, acc 0.041666666666666664, mal loss 108.03749251365662, mal acc 0.14166666666666666
user 45, loss nan, acc 0.08333333333333333
user 93, loss nan, acc 0.0625
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 51%|█████     | 51/100 [09:11<08:51, 10.84s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 52%|█████▏    | 52/100 [09:22<08:32, 10.68s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 53%|█████▎    | 53/100 [09:33<08:25, 10.76s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 54%|█████▍    | 54/100 [09:44<08:18, 10.84s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 55%|█████▌    | 55/100 [09:54<07:55, 10.56s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 56%|█████▌    | 56/100 [10:04<07:48, 10.66s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 57%|█████▋    | 57/100 [10:15<07:42, 10.76s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 58%|█████▊    | 58/100 [10:26<07:27, 10.65s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 59%|█████▉    | 59/100 [10:37<07:21, 10.76s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 60%|██████    | 60/100 [10:48<07:15, 10.89s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 61%|██████    | 61/100 [10:58<06:58, 10.72s/it]user 43, loss nan, acc 0.16666666666666666
user 54, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 51 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 52 |

user 77, loss nan, acc 0.0625
user 59, loss nan, acc 0.041666666666666664
Malcious user 51 is selected!
user 51, loss 2.270303624371688, acc 0.041666666666666664, mal loss 108.03255200386047, mal acc 0.14166666666666666
user 95, loss nan, acc 0.10416666666666667
user 18, loss nan, acc 0.1875
Malcious user 19 is selected!
user 19, loss 2.2703381766875586, acc 0.08333333333333333, mal loss 108.03837156295776, mal acc 0.14166666666666666
user 48, loss nan, acc 0.10416666666666667
user 24, loss nan, acc 0.125
user 34, loss nan, acc 0.0625
user 67, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 52 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 53 |

user 44, loss nan, acc 0.020833333333333332
user 38, loss nan, acc 0.16666666666666666
user 5, loss nan, acc 0.10416666666666667
user 98, loss nan, acc 0.125
user 25, loss nan, acc 0.020833333333333332
user 1, loss nan, acc 0.08333333333333333
user 12, loss nan, acc 0.10416666666666667
Malcious user 8 is selected!
user 8, loss 2.2702754477659863, acc 0.14583333333333334, mal loss 108.03727459907532, mal acc 0.14166666666666666
Malcious user 62 is selected!
user 62, loss 2.2702954724431037, acc 0.08333333333333333, mal loss 108.03720116615295, mal acc 0.14166666666666666
user 53, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 53 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 54 |

user 46, loss nan, acc 0.14583333333333334
user 70, loss nan, acc 0.125
user 44, loss nan, acc 0.020833333333333332
user 18, loss nan, acc 0.1875
user 92, loss nan, acc 0.10416666666666667
user 65, loss nan, acc 0.125
user 7, loss nan, acc 0.0625
user 12, loss nan, acc 0.10416666666666667
user 22, loss nan, acc 0.10416666666666667
Malcious user 39 is selected!
user 39, loss 2.2703734536965685, acc 0.125, mal loss 108.03930306434631, mal acc 0.14166666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 54 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 55 |

user 7, loss nan, acc 0.0625
user 70, loss nan, acc 0.125
user 88, loss nan, acc 0.08333333333333333
user 56, loss nan, acc 0.0625
user 22, loss nan, acc 0.10416666666666667
user 90, loss nan, acc 0.0625
user 66, loss nan, acc 0.14583333333333334
user 11, loss nan, acc 0.125
user 18, loss nan, acc 0.1875
user 78, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 55 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 56 |

user 67, loss nan, acc 0.0625
user 45, loss nan, acc 0.08333333333333333
user 20, loss nan, acc 0.10416666666666667
user 73, loss nan, acc 0.020833333333333332
user 56, loss nan, acc 0.0625
user 30, loss nan, acc 0.041666666666666664
user 34, loss nan, acc 0.0625
user 23, loss nan, acc 0.0625
user 54, loss nan, acc 0.0625
user 55, loss nan, acc 0.08333333333333333
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 56 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 57 |

user 92, loss nan, acc 0.10416666666666667
user 11, loss nan, acc 0.125
user 72, loss nan, acc 0.10416666666666667
user 87, loss nan, acc 0.14583333333333334
user 55, loss nan, acc 0.08333333333333333
user 46, loss nan, acc 0.14583333333333334
user 83, loss nan, acc 0.125
user 73, loss nan, acc 0.020833333333333332
user 91, loss nan, acc 0.10416666666666667
user 32, loss nan, acc 0.08333333333333333
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 57 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 58 |

user 41, loss nan, acc 0.10416666666666667
user 10, loss nan, acc 0.10416666666666667
user 31, loss nan, acc 0.16666666666666666
user 98, loss nan, acc 0.125
user 89, loss nan, acc 0.0625
user 25, loss nan, acc 0.020833333333333332
user 87, loss nan, acc 0.14583333333333334
user 13, loss nan, acc 0.0625
user 50, loss nan, acc 0.10416666666666667
user 28, loss nan, acc 0.125
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 58 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 59 |

Malcious user 8 is selected!
user 8, loss 2.270337432126204, acc 0.14583333333333334, mal loss 108.03929114341736, mal acc 0.14166666666666666
user 67, loss nan, acc 0.0625
user 57, loss nan, acc 0.0625
user 96, loss nan, acc 0.0625
user 46, loss nan, acc 0.14583333333333334
user 94, loss nan, acc 0.14583333333333334
user 63, loss nan, acc 0.10416666666666667
user 17, loss nan, acc 0.14583333333333334
user 86, loss nan, acc 0.0625
user 49, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 59 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 60 |

Malcious user 39 is selected!
user 39, loss 2.2703707948327065, acc 0.125, mal loss 108.03675603866577, mal acc 0.14166666666666666
Malcious user 62 is selected!
user 62, loss 2.2703317513068515, acc 0.08333333333333333, mal loss 108.03933572769165, mal acc 0.14166666666666666
user 65, loss nan, acc 0.125
user 27, loss nan, acc 0.10416666666666667
user 68, loss nan, acc 0.041666666666666664
user 20, loss nan, acc 0.10416666666666667
user 22, loss nan, acc 0.10416666666666667
user 77, loss nan, acc 0.0625
user 88, loss nan, acc 0.08333333333333333
user 30, loss nan, acc 0.041666666666666664
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 60 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 61 |

user 53, loss nan, acc 0.10416666666666667
user 42, loss nan, acc 0.20833333333333334
user 29, loss nan, acc 0.08333333333333333
user 27, loss nan, acc 0.10416666666666667
user 24, loss nan, acc 0.125
user 37, loss nan, acc 0.020833333333333332
user 91, loss nan, acc 0.10416666666666667
user 31, loss nan, acc 0.16666666666666666
user 33, loss nan, acc 0.10416666666666667
user 32, loss nan, acc 0.08333333333333333
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 61 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 62 |

user 30, loss nan, acc 0.041666666666666664
user 27, loss nan, acc 0.10416666666666667
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 62%|██████▏   | 62/100 [11:10<06:53, 10.88s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 63%|██████▎   | 63/100 [11:21<06:42, 10.88s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 64%|██████▍   | 64/100 [11:30<06:20, 10.56s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 65%|██████▌   | 65/100 [11:41<06:10, 10.60s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 66%|██████▌   | 66/100 [11:52<06:06, 10.78s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 67%|██████▋   | 67/100 [12:03<05:51, 10.64s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 68%|██████▊   | 68/100 [12:14<05:45, 10.78s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 69%|██████▉   | 69/100 [12:24<05:34, 10.80s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 70%|███████   | 70/100 [12:34<05:16, 10.54s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 71%|███████   | 71/100 [12:46<05:12, 10.77s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
user 60, loss nan, acc 0.0625
user 93, loss nan, acc 0.0625
Malcious user 39 is selected!
user 39, loss 2.270262772341569, acc 0.125, mal loss 108.03785395622253, mal acc 0.14166666666666666
user 53, loss nan, acc 0.10416666666666667
user 66, loss nan, acc 0.14583333333333334
user 5, loss nan, acc 0.10416666666666667
user 74, loss nan, acc 0.10416666666666667
user 0, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 62 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 63 |

user 21, loss nan, acc 0.0625
user 0, loss nan, acc 0.125
Malcious user 62 is selected!
user 62, loss 2.2702934076388677, acc 0.08333333333333333, mal loss 108.03471255302429, mal acc 0.14166666666666666
user 82, loss nan, acc 0.125
user 85, loss nan, acc 0.14583333333333334
user 14, loss nan, acc 0.10416666666666667
user 72, loss nan, acc 0.10416666666666667
user 50, loss nan, acc 0.10416666666666667
user 5, loss nan, acc 0.10416666666666667
user 37, loss nan, acc 0.020833333333333332
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 63 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 64 |

user 5, loss nan, acc 0.10416666666666667
user 37, loss nan, acc 0.020833333333333332
user 89, loss nan, acc 0.0625
user 27, loss nan, acc 0.10416666666666667
user 53, loss nan, acc 0.10416666666666667
user 71, loss nan, acc 0.125
user 94, loss nan, acc 0.14583333333333334
user 59, loss nan, acc 0.041666666666666664
user 73, loss nan, acc 0.020833333333333332
user 20, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 64 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 65 |

user 22, loss nan, acc 0.10416666666666667
user 54, loss nan, acc 0.0625
user 84, loss nan, acc 0.0625
user 25, loss nan, acc 0.020833333333333332
user 59, loss nan, acc 0.041666666666666664
user 10, loss nan, acc 0.10416666666666667
user 85, loss nan, acc 0.14583333333333334
user 24, loss nan, acc 0.125
user 7, loss nan, acc 0.0625
user 74, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 65 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 66 |

user 22, loss nan, acc 0.10416666666666667
user 47, loss nan, acc 0.10416666666666667
user 0, loss nan, acc 0.125
user 76, loss nan, acc 0.10416666666666667
user 67, loss nan, acc 0.0625
user 84, loss nan, acc 0.0625
user 88, loss nan, acc 0.08333333333333333
Malcious user 4 is selected!
user 4, loss 2.270276305576165, acc 0.10416666666666667, mal loss 108.03491449356079, mal acc 0.14166666666666666
user 68, loss nan, acc 0.041666666666666664
user 44, loss nan, acc 0.020833333333333332
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 66 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 67 |

user 49, loss nan, acc 0.10416666666666667
user 73, loss nan, acc 0.020833333333333332
user 76, loss nan, acc 0.10416666666666667
user 68, loss nan, acc 0.041666666666666664
user 18, loss nan, acc 0.1875
user 67, loss nan, acc 0.0625
user 50, loss nan, acc 0.10416666666666667
user 74, loss nan, acc 0.10416666666666667
Malcious user 62 is selected!
user 62, loss 2.270305533707142, acc 0.08333333333333333, mal loss 108.03576350212097, mal acc 0.14166666666666666
user 77, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 67 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 68 |

user 97, loss nan, acc 0.10416666666666667
user 77, loss nan, acc 0.0625
user 82, loss nan, acc 0.125
user 14, loss nan, acc 0.10416666666666667
user 6, loss nan, acc 0.08333333333333333
user 54, loss nan, acc 0.0625
user 78, loss nan, acc 0.10416666666666667
user 47, loss nan, acc 0.10416666666666667
user 73, loss nan, acc 0.020833333333333332
user 50, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 68 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 69 |

user 66, loss nan, acc 0.14583333333333334
Malcious user 8 is selected!
user 8, loss 2.2703226139148076, acc 0.14583333333333334, mal loss 108.03539705276489, mal acc 0.14166666666666666
user 93, loss nan, acc 0.0625
user 48, loss nan, acc 0.10416666666666667
user 2, loss nan, acc 0.0625
user 75, loss nan, acc 0.0625
user 12, loss nan, acc 0.10416666666666667
user 54, loss nan, acc 0.0625
user 9, loss nan, acc 0.0625
user 86, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 69 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 70 |

user 78, loss nan, acc 0.10416666666666667
user 82, loss nan, acc 0.125
user 50, loss nan, acc 0.10416666666666667
user 41, loss nan, acc 0.10416666666666667
user 6, loss nan, acc 0.08333333333333333
user 68, loss nan, acc 0.041666666666666664
user 55, loss nan, acc 0.08333333333333333
user 32, loss nan, acc 0.08333333333333333
user 35, loss nan, acc 0.20833333333333334
user 10, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 70 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 71 |

user 29, loss nan, acc 0.08333333333333333
user 44, loss nan, acc 0.020833333333333332
user 22, loss nan, acc 0.10416666666666667
user 76, loss nan, acc 0.10416666666666667
Malcious user 80 is selected!
user 80, loss 2.2702184190352757, acc 0.125, mal loss 108.03846144676208, mal acc 0.14166666666666666
user 79, loss nan, acc 0.0625
user 91, loss nan, acc 0.10416666666666667
user 50, loss nan, acc 0.10416666666666667
user 71, loss nan, acc 0.125
user 59, loss nan, acc 0.041666666666666664
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 71 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 72 |

user 94, loss nan, acc 0.14583333333333334
user 35, loss nan, acc 0.20833333333333334
user 37, loss nan, acc 0.020833333333333332
user 78, loss nan, acc 0.10416666666666667
Malcious user 8 is selected!
user 8, loss 2.2702667420109113, acc 0.14583333333333334, mal loss 108.03758955001831, mal acc 0.14166666666666666
user 57, loss nan, acc 0.0625
user 7, loss nan, acc 0.0625
Malcious user 62 is selected!
user 62, loss 2.270375422636668, acc 0.08333333333333333, mal loss 108.03897476196289, mal acc 0.14166666666666666
user 68, loss nan, acc 0.041666666666666664
user 98, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 72 global rounds:
Training Loss : nan
 72%|███████▏  | 72/100 [12:57<05:05, 10.90s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 73%|███████▎  | 73/100 [13:08<04:54, 10.89s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 74%|███████▍  | 74/100 [13:18<04:37, 10.67s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 75%|███████▌  | 75/100 [13:29<04:28, 10.73s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 76%|███████▌  | 76/100 [13:40<04:19, 10.83s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 77%|███████▋  | 77/100 [13:50<04:07, 10.75s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 78%|███████▊  | 78/100 [14:02<03:58, 10.85s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 79%|███████▉  | 79/100 [14:13<03:48, 10.90s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 80%|████████  | 80/100 [14:23<03:35, 10.80s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 81%|████████  | 81/100 [14:34<03:25, 10.79s/it]Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 73 |

user 47, loss nan, acc 0.10416666666666667
user 75, loss nan, acc 0.0625
user 27, loss nan, acc 0.10416666666666667
user 32, loss nan, acc 0.08333333333333333
Malcious user 61 is selected!
user 61, loss 2.270255644619465, acc 0.10416666666666667, mal loss 108.03984045982361, mal acc 0.14166666666666666
user 59, loss nan, acc 0.041666666666666664
user 99, loss nan, acc 0.0625
user 5, loss nan, acc 0.10416666666666667
user 58, loss nan, acc 0.041666666666666664
user 79, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 73 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 74 |

user 37, loss nan, acc 0.020833333333333332
user 43, loss nan, acc 0.16666666666666666
user 95, loss nan, acc 0.10416666666666667
user 48, loss nan, acc 0.10416666666666667
user 50, loss nan, acc 0.10416666666666667
user 5, loss nan, acc 0.10416666666666667
user 26, loss nan, acc 0.16666666666666666
user 69, loss nan, acc 0.041666666666666664
Malcious user 4 is selected!
user 4, loss 2.270315449933211, acc 0.10416666666666667, mal loss 108.03544116020203, mal acc 0.14166666666666666
user 81, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 74 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 75 |

user 43, loss nan, acc 0.16666666666666666
user 20, loss nan, acc 0.10416666666666667
user 22, loss nan, acc 0.10416666666666667
user 48, loss nan, acc 0.10416666666666667
user 84, loss nan, acc 0.0625
user 3, loss nan, acc 0.10416666666666667
user 69, loss nan, acc 0.041666666666666664
user 0, loss nan, acc 0.125
user 16, loss nan, acc 0.08333333333333333
user 33, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 75 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 76 |

user 33, loss nan, acc 0.10416666666666667
user 36, loss nan, acc 0.08333333333333333
Malcious user 51 is selected!
user 51, loss 2.2702499628067017, acc 0.041666666666666664, mal loss 108.03718876838684, mal acc 0.14166666666666666
Malcious user 62 is selected!
user 62, loss 2.2703011756141978, acc 0.08333333333333333, mal loss 108.0329954624176, mal acc 0.14166666666666666
user 44, loss nan, acc 0.020833333333333332
Malcious user 61 is selected!
user 61, loss 2.2703372836112976, acc 0.10416666666666667, mal loss 108.03754448890686, mal acc 0.14166666666666666
user 63, loss nan, acc 0.10416666666666667
user 2, loss nan, acc 0.0625
user 74, loss nan, acc 0.10416666666666667
Malcious user 80 is selected!
user 80, loss 2.270279186964035, acc 0.125, mal loss 108.03767108917236, mal acc 0.14166666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 76 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 77 |

user 54, loss nan, acc 0.0625
user 6, loss nan, acc 0.08333333333333333
user 79, loss nan, acc 0.0625
user 78, loss nan, acc 0.10416666666666667
user 28, loss nan, acc 0.125
user 86, loss nan, acc 0.0625
user 81, loss nan, acc 0.125
Malcious user 62 is selected!
user 62, loss 2.2702893952528638, acc 0.08333333333333333, mal loss 108.04002666473389, mal acc 0.14166666666666666
Malcious user 80 is selected!
user 80, loss 2.270331222812335, acc 0.125, mal loss 108.0357563495636, mal acc 0.14166666666666666
user 22, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 77 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 78 |

Malcious user 40 is selected!
user 40, loss 2.2702964653571445, acc 0.020833333333333332, mal loss 108.03832840919495, mal acc 0.14166666666666666
Malcious user 51 is selected!
user 51, loss 2.2703168327609697, acc 0.041666666666666664, mal loss 108.03913903236389, mal acc 0.14166666666666666
user 88, loss nan, acc 0.08333333333333333
user 17, loss nan, acc 0.14583333333333334
user 94, loss nan, acc 0.14583333333333334
user 37, loss nan, acc 0.020833333333333332
user 5, loss nan, acc 0.10416666666666667
user 22, loss nan, acc 0.10416666666666667
user 92, loss nan, acc 0.10416666666666667
Malcious user 64 is selected!
user 64, loss 2.2703438848257065, acc 0.0625, mal loss 108.04063296318054, mal acc 0.14166666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 78 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 79 |

user 20, loss nan, acc 0.10416666666666667
Malcious user 64 is selected!
user 64, loss 2.2703304827213286, acc 0.0625, mal loss 108.03772115707397, mal acc 0.14166666666666666
user 36, loss nan, acc 0.08333333333333333
user 70, loss nan, acc 0.125
user 65, loss nan, acc 0.125
user 79, loss nan, acc 0.0625
user 53, loss nan, acc 0.10416666666666667
user 48, loss nan, acc 0.10416666666666667
user 23, loss nan, acc 0.0625
Malcious user 19 is selected!
user 19, loss 2.270294551551342, acc 0.08333333333333333, mal loss 108.04008364677429, mal acc 0.14166666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 79 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 80 |

user 7, loss nan, acc 0.0625
user 58, loss nan, acc 0.041666666666666664
user 23, loss nan, acc 0.0625
user 99, loss nan, acc 0.0625
user 56, loss nan, acc 0.0625
user 97, loss nan, acc 0.10416666666666667
user 26, loss nan, acc 0.16666666666666666
user 47, loss nan, acc 0.10416666666666667
user 27, loss nan, acc 0.10416666666666667
Malcious user 39 is selected!
user 39, loss 2.270316976805528, acc 0.125, mal loss 108.03892302513123, mal acc 0.14166666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 80 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 81 |

user 6, loss nan, acc 0.08333333333333333
user 48, loss nan, acc 0.10416666666666667
user 78, loss nan, acc 0.10416666666666667
user 0, loss nan, acc 0.125
Malcious user 4 is selected!
user 4, loss 2.2703492631514868, acc 0.10416666666666667, mal loss 108.03910708427429, mal acc 0.14166666666666666
user 13, loss nan, acc 0.0625
user 42, loss nan, acc 0.20833333333333334
user 90, loss nan, acc 0.0625
user 96, loss nan, acc 0.0625
user 15, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 81 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 82 |

user 36, loss nan, acc 0.08333333333333333
user 75, loss nan, acc 0.0625
user 35, loss nan, acc 0.20833333333333334
Malcious user 80 is selected!
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 82%|████████▏ | 82/100 [14:45<03:16, 10.94s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 83%|████████▎ | 83/100 [14:55<03:02, 10.76s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 84%|████████▍ | 84/100 [15:06<02:51, 10.73s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 85%|████████▌ | 85/100 [15:17<02:41, 10.77s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 86%|████████▌ | 86/100 [15:27<02:28, 10.57s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 87%|████████▋ | 87/100 [15:38<02:19, 10.70s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 88%|████████▊ | 88/100 [15:49<02:10, 10.84s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 89%|████████▉ | 89/100 [16:00<01:57, 10.72s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 90%|█████████ | 90/100 [16:11<01:47, 10.74s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 91%|█████████ | 91/100 [16:22<01:37, 10.89s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 92%|█████████▏| 92/100 [16:32<01:25, 10.63s/it]user 80, loss 2.2702747737367948, acc 0.125, mal loss 108.03708148002625, mal acc 0.14166666666666666
user 91, loss nan, acc 0.10416666666666667
user 43, loss nan, acc 0.16666666666666666
user 66, loss nan, acc 0.14583333333333334
user 11, loss nan, acc 0.125
user 6, loss nan, acc 0.08333333333333333
user 45, loss nan, acc 0.08333333333333333
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 82 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 83 |

Malcious user 61 is selected!
user 61, loss 2.270326842864354, acc 0.10416666666666667, mal loss 108.04018473625183, mal acc 0.14166666666666666
user 15, loss nan, acc 0.0625
Malcious user 4 is selected!
user 4, loss 2.270352762937546, acc 0.10416666666666667, mal loss 108.03736138343811, mal acc 0.14166666666666666
user 43, loss nan, acc 0.16666666666666666
user 46, loss nan, acc 0.14583333333333334
user 7, loss nan, acc 0.0625
user 59, loss nan, acc 0.041666666666666664
user 20, loss nan, acc 0.10416666666666667
user 22, loss nan, acc 0.10416666666666667
user 45, loss nan, acc 0.08333333333333333
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 83 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 84 |

user 43, loss nan, acc 0.16666666666666666
user 23, loss nan, acc 0.0625
user 49, loss nan, acc 0.10416666666666667
user 76, loss nan, acc 0.10416666666666667
user 18, loss nan, acc 0.1875
user 38, loss nan, acc 0.16666666666666666
user 11, loss nan, acc 0.125
user 21, loss nan, acc 0.0625
user 71, loss nan, acc 0.125
user 36, loss nan, acc 0.08333333333333333
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 84 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 85 |

user 59, loss nan, acc 0.041666666666666664
user 72, loss nan, acc 0.10416666666666667
user 18, loss nan, acc 0.1875
user 10, loss nan, acc 0.10416666666666667
user 57, loss nan, acc 0.0625
user 48, loss nan, acc 0.10416666666666667
user 27, loss nan, acc 0.10416666666666667
user 7, loss nan, acc 0.0625
user 69, loss nan, acc 0.041666666666666664
Malcious user 4 is selected!
user 4, loss 2.270349303384622, acc 0.10416666666666667, mal loss 108.04023146629333, mal acc 0.14166666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 85 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 86 |

user 18, loss nan, acc 0.1875
user 90, loss nan, acc 0.0625
user 20, loss nan, acc 0.10416666666666667
user 28, loss nan, acc 0.125
user 82, loss nan, acc 0.125
user 91, loss nan, acc 0.10416666666666667
user 77, loss nan, acc 0.0625
user 12, loss nan, acc 0.10416666666666667
user 7, loss nan, acc 0.0625
user 6, loss nan, acc 0.08333333333333333
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 86 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 87 |

user 14, loss nan, acc 0.10416666666666667
user 63, loss nan, acc 0.10416666666666667
user 18, loss nan, acc 0.1875
user 82, loss nan, acc 0.125
user 36, loss nan, acc 0.08333333333333333
user 60, loss nan, acc 0.0625
user 44, loss nan, acc 0.020833333333333332
user 52, loss nan, acc 0.125
user 26, loss nan, acc 0.16666666666666666
user 6, loss nan, acc 0.08333333333333333
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 87 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 88 |

user 29, loss nan, acc 0.08333333333333333
user 2, loss nan, acc 0.0625
user 86, loss nan, acc 0.0625
user 58, loss nan, acc 0.041666666666666664
user 95, loss nan, acc 0.10416666666666667
user 16, loss nan, acc 0.08333333333333333
user 17, loss nan, acc 0.14583333333333334
user 54, loss nan, acc 0.0625
Malcious user 62 is selected!
user 62, loss 2.2703098863363267, acc 0.08333333333333333, mal loss 108.03727102279663, mal acc 0.14166666666666666
user 81, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 88 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 89 |

user 55, loss nan, acc 0.08333333333333333
user 97, loss nan, acc 0.10416666666666667
user 56, loss nan, acc 0.0625
user 15, loss nan, acc 0.0625
user 69, loss nan, acc 0.041666666666666664
user 82, loss nan, acc 0.125
user 44, loss nan, acc 0.020833333333333332
user 78, loss nan, acc 0.10416666666666667
user 79, loss nan, acc 0.0625
user 89, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 89 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 90 |

user 92, loss nan, acc 0.10416666666666667
user 89, loss nan, acc 0.0625
user 14, loss nan, acc 0.10416666666666667
user 63, loss nan, acc 0.10416666666666667
user 25, loss nan, acc 0.020833333333333332
user 55, loss nan, acc 0.08333333333333333
user 23, loss nan, acc 0.0625
user 50, loss nan, acc 0.10416666666666667
user 41, loss nan, acc 0.10416666666666667
user 33, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 90 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 91 |

user 18, loss nan, acc 0.1875
user 57, loss nan, acc 0.0625
user 74, loss nan, acc 0.10416666666666667
user 35, loss nan, acc 0.20833333333333334
user 86, loss nan, acc 0.0625
user 73, loss nan, acc 0.020833333333333332
user 28, loss nan, acc 0.125
user 92, loss nan, acc 0.10416666666666667
user 52, loss nan, acc 0.125
user 34, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 91 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 92 |

user 65, loss nan, acc 0.125
user 93, loss nan, acc 0.0625
user 63, loss nan, acc 0.10416666666666667
user 30, loss nan, acc 0.041666666666666664
user 47, loss nan, acc 0.10416666666666667
user 23, loss nan, acc 0.0625
user 87, loss nan, acc 0.14583333333333334
user 41, loss nan, acc 0.10416666666666667
user 60, loss nan, acc 0.0625
user 12, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 92 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 93 |

user 45, loss nan, acc 0.08333333333333333
user 70, loss nan, acc 0.125
user 9, loss nan, acc 0.0625
user 52, loss nan, acc 0.125
user 82, loss nan, acc 0.125
user 68, loss nan, acc 0.041666666666666664
user 53, loss nan, acc 0.10416666666666667
user 17, loss nan, acc 0.14583333333333334
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 93%|█████████▎| 93/100 [16:43<01:15, 10.80s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 94%|█████████▍| 94/100 [16:54<01:04, 10.81s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 95%|█████████▌| 95/100 [17:04<00:53, 10.60s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 96%|█████████▌| 96/100 [17:15<00:43, 10.78s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 97%|█████████▋| 97/100 [17:26<00:32, 10.82s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 98%|█████████▊| 98/100 [17:36<00:21, 10.69s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 99%|█████████▉| 99/100 [17:48<00:10, 10.89s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
100%|██████████| 100/100 [17:59<00:00, 10.90s/it]100%|██████████| 100/100 [17:59<00:00, 10.79s/it]
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
user 47, loss nan, acc 0.10416666666666667
user 93, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 93 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 94 |

user 25, loss nan, acc 0.020833333333333332
user 71, loss nan, acc 0.125
user 23, loss nan, acc 0.0625
user 49, loss nan, acc 0.10416666666666667
user 31, loss nan, acc 0.16666666666666666
user 63, loss nan, acc 0.10416666666666667
user 60, loss nan, acc 0.0625
user 36, loss nan, acc 0.08333333333333333
user 15, loss nan, acc 0.0625
user 59, loss nan, acc 0.041666666666666664
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 94 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 95 |

user 29, loss nan, acc 0.08333333333333333
user 88, loss nan, acc 0.08333333333333333
user 15, loss nan, acc 0.0625
Malcious user 80 is selected!
user 80, loss 2.2702583983540534, acc 0.125, mal loss 108.03440141677856, mal acc 0.14166666666666666
user 75, loss nan, acc 0.0625
user 10, loss nan, acc 0.10416666666666667
Malcious user 19 is selected!
user 19, loss 2.2703149259090423, acc 0.08333333333333333, mal loss 108.039067029953, mal acc 0.14166666666666666
user 43, loss nan, acc 0.16666666666666666
Malcious user 40 is selected!
user 40, loss 2.270354351401329, acc 0.020833333333333332, mal loss 108.03930616378784, mal acc 0.14166666666666666
user 27, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 95 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 96 |

user 26, loss nan, acc 0.16666666666666666
Malcious user 40 is selected!
user 40, loss 2.270273200174173, acc 0.020833333333333332, mal loss 108.03698110580444, mal acc 0.14166666666666666
user 9, loss nan, acc 0.0625
user 90, loss nan, acc 0.0625
user 76, loss nan, acc 0.10416666666666667
user 92, loss nan, acc 0.10416666666666667
user 94, loss nan, acc 0.14583333333333334
user 43, loss nan, acc 0.16666666666666666
user 53, loss nan, acc 0.10416666666666667
user 17, loss nan, acc 0.14583333333333334
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 96 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 97 |

user 33, loss nan, acc 0.10416666666666667
user 78, loss nan, acc 0.10416666666666667
user 17, loss nan, acc 0.14583333333333334
user 91, loss nan, acc 0.10416666666666667
user 32, loss nan, acc 0.08333333333333333
user 16, loss nan, acc 0.08333333333333333
user 87, loss nan, acc 0.14583333333333334
user 76, loss nan, acc 0.10416666666666667
user 45, loss nan, acc 0.08333333333333333
user 5, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 97 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 98 |

user 32, loss nan, acc 0.08333333333333333
user 91, loss nan, acc 0.10416666666666667
user 18, loss nan, acc 0.1875
user 84, loss nan, acc 0.0625
Malcious user 62 is selected!
user 62, loss 2.270246224105358, acc 0.08333333333333333, mal loss 108.03678798675537, mal acc 0.14166666666666666
user 74, loss nan, acc 0.10416666666666667
user 24, loss nan, acc 0.125
user 6, loss nan, acc 0.08333333333333333
user 5, loss nan, acc 0.10416666666666667
user 30, loss nan, acc 0.041666666666666664
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 98 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 99 |

user 30, loss nan, acc 0.041666666666666664
user 93, loss nan, acc 0.0625
user 7, loss nan, acc 0.0625
user 46, loss nan, acc 0.14583333333333334
user 54, loss nan, acc 0.0625
user 91, loss nan, acc 0.10416666666666667
user 82, loss nan, acc 0.125
user 42, loss nan, acc 0.20833333333333334
user 71, loss nan, acc 0.125
user 60, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 99 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 100 |

user 98, loss nan, acc 0.125
Malcious user 51 is selected!
user 51, loss 2.270353174209595, acc 0.041666666666666664, mal loss 108.0416750907898, mal acc 0.14166666666666666
user 47, loss nan, acc 0.10416666666666667
user 59, loss nan, acc 0.041666666666666664
user 63, loss nan, acc 0.10416666666666667
user 41, loss nan, acc 0.10416666666666667
user 38, loss nan, acc 0.16666666666666666
user 78, loss nan, acc 0.10416666666666667
user 77, loss nan, acc 0.0625
user 15, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 100 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 11.99% 

Global model Malicious Accuracy: 11.04%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])

 
 Results after 100 global rounds of training:
|---- Test Accuracy: 11.99%

 Total Run Time: 1080.2873
Running fedavg.py with --dataset=mnist --label_tampering=none --weight_tampering=reverse

Experimental details:
    Model     : cnn
    Optimizer : sgd
    Learning  : 0.01
    Global Rounds   : 100

    Federated parameters:
    IID
    Fraction of users  : 0.1
    Local Batch size   : 10
    Local Epochs       : 10

CNNMnist(
  (conv1): Conv2d(1, 10, kernel_size=(5, 5), stride=(1, 1))
  (conv2): Conv2d(10, 20, kernel_size=(5, 5), stride=(1, 1))
  (conv2_drop): Dropout2d(p=0.5, inplace=False)
  (fc1): Linear(in_features=320, out_features=50, bias=True)
  (fc2): Linear(in_features=50, out_features=10, bias=True)
)
[4645 6262 9534 4844 9414 8545 5412 9820 6903 7499 6311 9219 7837 2984
 2488 5441 9885 9145 7852 3536 3672 7895   47 3592 2291 5103 7365  951
 6039 5706 1261 5384 5563  827 5271 5408 2291 8082 3723 6206 4459 2857
 7587 5425 1230 9733 1662  851 6061 8506 3071 3524 4809 9144 7018 6360
 4651 9826 6157  732  453 3360 6232 8924 3800 2870 3376 2390  965 6641
 1244 1501 6834 7521 1420 6514 9325 7960 4454 1551 6838 2121 6359 3102
 5679 6495 6699  161 1858 4017 7183 3072 6998 4389 5466 9150  190 5598
 2883 9051 6283 2154 2651 8879 1392 5567 4391 2243 3411 6517 8391 8724
 3293 4652 3268  544 7388 2300 7267 2210 2954 4928 3267 7491 9888 8669
 2209 5559 5775 8269  763 8677 7069 6618 4300 4873 3508  868 5957 9879
 8556 6344 2606 1413 8812 5578 6694  250 3219 4361 5951 7839 4370 5851
 2674 9187 4996 6009 2899 5516 5743 8608 8632 7704 4606 3399 7013  526
 2916  803 5281 4391 7285 1725 3286 5708   76 5071 8071 2782 7488 1545
 8963 2552 1485 1192 1869 6358 4701 7351 8803 4075 8774 2362 6269 9090
 9874 8309 2415 9069 3987 8494   46 3275 8012 2319 9337 4312 4073 9279
 7502 1495 7221 1245 5483 8736  684  260 3294 3595 6187 7444 2914 2306
 5105 4237 3233 8004 9342 2611 6922 9013  416 2848 6256 7843 8559 2273
 1807 5407 9238 5431 2067 1892 3515 9300 4714 1338 5291 3435 5595 7065
 1914 5130 7925 8724  955 8342 6945 7369 9182 5895  484 2087 7565 4704
  830 9167 2202 7953 8347 6045 3463 6032 6677 6479 5453 4107 3815 5540
 9630 8299 8116 3192  972 6543 4740 2955 4942 6623  187 1140 6673  504
 2291 9016 9406  948 1337 4436  484 3430 7657  350 7008 9211 5717 9461
 4922 2489 2183 1812 7732 4843 2738 8214 7455 4885 1960 7395 9657 1899
 2696 8400 2804 1747 7628 9694 5676 9759 8570 6478 3901 4908 3433  595
 9474 1409 6210 2325 6043 5911 8333 2163 6598 8937 4125 4947 3786 7689
 5313 1668  437  147 6922 4036 8135 1784 5952 7563 6735 2993  710 3756
 5439  551 5120 8044 9262 1749 2678 6421 4863 7014 7243 8622 4981 6659
 7245 9621  380 8023 1708 4658 7416 1823 9761 2257 5968 8522 2203 7934
  948 4438 4028 8222 5736 7386 8386 3318  829 9692 3831 2283 2931 7809
 9517 8727  730 1378 1108  904 3922 6162 2635  909 8224 7942 1373 4715
 6857 5830 9817 7300 8453  933 2945 5660 1193 5478 6400 9854 1138 6394
 5945 7152 2140 8822 9638 8212 5928  585 3106 9289 7048 1629 5385 6915
 9416 8567 3043 7887 8470 9797 5086 2446 3746 1250 1225 7242 4335 7045
 9461 4259 9133 1618 1095 4659 4190  182 3490 1465 7117 1869 1161  414
 7901 4236 7540 5723]
malcious dataset true labels: [6, 9, 9, 2, 9, 9, 6, 5, 6, 1, 1, 8, 8, 2, 7, 3, 5, 5, 1, 7, 5, 6, 3, 2, 1, 6, 6, 9, 6, 9, 3, 6, 9, 9, 6, 1, 1, 8, 6, 2, 7, 5, 1, 2, 6, 9, 3, 7, 6, 6, 3, 7, 6, 3, 8, 8, 1, 6, 5, 0, 5, 7, 2, 6, 0, 2, 3, 8, 7, 8, 0, 9, 6, 9, 6, 1, 8, 3, 7, 5, 5, 6, 3, 1, 8, 5, 1, 7, 7, 6, 1, 8, 9, 3, 3, 6, 3, 8, 0, 6, 1, 0, 2, 8, 8, 2, 1, 6, 1, 1, 1, 6, 9, 3, 1, 4, 2, 4, 1, 8, 2, 1, 5, 9, 8, 8, 2, 5, 9, 2, 0, 9, 2, 3, 2, 3, 1, 1, 9, 2, 1, 9, 3, 2, 6, 1, 2, 8, 6, 6, 3, 1, 6, 5, 7, 6, 5, 1, 1, 3, 6, 3, 3, 5, 4, 8, 6, 0, 2, 2, 5, 1, 9, 7, 1, 2, 7, 3, 5, 8, 6, 9, 5, 8, 5, 2, 7, 6, 2, 2, 8, 7, 6, 8, 2, 8, 5, 3, 0, 1, 1, 6, 3, 1, 5, 9, 5, 5, 7, 3, 8, 8, 2, 9, 1, 6, 4, 0, 3, 2, 2, 3, 5, 0, 9, 0, 6, 5, 5, 8, 3, 1, 9, 3, 9, 3, 1, 6, 9, 6, 6, 9, 6, 6, 6, 1, 4, 2, 2, 9, 1, 5, 9, 2, 2, 6, 3, 2, 2, 8, 1, 8, 4, 0, 8, 9, 3, 5, 4, 2, 2, 2, 4, 1, 3, 1, 8, 4, 9, 8, 8, 9, 6, 9, 7, 6, 4, 5, 8, 6, 8, 6, 6, 2, 1, 3, 1, 8, 4, 6, 4, 4, 1, 9, 5, 9, 5, 2, 3, 7, 9, 2, 8, 1, 5, 8, 2, 9, 2, 8, 5, 6, 9, 2, 5, 0, 3, 6, 3, 6, 6, 9, 8, 4, 8, 1, 6, 7, 8, 2, 5, 8, 6, 5, 8, 9, 9, 8, 1, 2, 3, 0, 9, 8, 3, 3, 1, 1, 1, 2, 1, 6, 8, 2, 6, 1, 4, 8, 1, 7, 3, 6, 3, 8, 1, 2, 8, 8, 9, 3, 3, 2, 5, 4, 5, 0, 3, 7, 9, 9, 2, 8, 8, 7, 1, 8, 3, 2, 9, 3, 6, 3, 4, 3, 2, 5, 5, 6, 3, 9, 9, 0, 0, 3, 0, 5, 6, 5, 6, 6, 2, 3, 6, 6, 8, 3, 2, 8, 2, 6, 5, 8, 4, 1, 2, 6, 1, 9, 6, 1, 6, 2, 6, 3, 8, 8, 1, 5, 1, 8, 2, 1, 9, 5, 6, 9, 8, 5, 5, 5, 8, 3, 2, 3, 5, 3, 4, 3, 1, 0, 1, 0, 3, 7, 2, 6, 8, 5, 9, 2], malicious labels: [6, 9, 9, 2, 9, 9, 6, 5, 6, 1, 1, 8, 8, 2, 7, 3, 5, 5, 1, 7, 5, 6, 3, 2, 1, 6, 6, 9, 6, 9, 3, 6, 9, 9, 6, 1, 1, 8, 6, 2, 7, 5, 1, 2, 6, 9, 3, 7, 6, 6, 3, 7, 6, 3, 8, 8, 1, 6, 5, 0, 5, 7, 2, 6, 0, 2, 3, 8, 7, 8, 0, 9, 6, 9, 6, 1, 8, 3, 7, 5, 5, 6, 3, 1, 8, 5, 1, 7, 7, 6, 1, 8, 9, 3, 3, 6, 3, 8, 0, 6, 1, 0, 2, 8, 8, 2, 1, 6, 1, 1, 1, 6, 9, 3, 1, 4, 2, 4, 1, 8, 2, 1, 5, 9, 8, 8, 2, 5, 9, 2, 0, 9, 2, 3, 2, 3, 1, 1, 9, 2, 1, 9, 3, 2, 6, 1, 2, 8, 6, 6, 3, 1, 6, 5, 7, 6, 5, 1, 1, 3, 6, 3, 3, 5, 4, 8, 6, 0, 2, 2, 5, 1, 9, 7, 1, 2, 7, 3, 5, 8, 6, 9, 5, 8, 5, 2, 7, 6, 2, 2, 8, 7, 6, 8, 2, 8, 5, 3, 0, 1, 1, 6, 3, 1, 5, 9, 5, 5, 7, 3, 8, 8, 2, 9, 1, 6, 4, 0, 3, 2, 2, 3, 5, 0, 9, 0, 6, 5, 5, 8, 3, 1, 9, 3, 9, 3, 1, 6, 9, 6, 6, 9, 6, 6, 6, 1, 4, 2, 2, 9, 1, 5, 9, 2, 2, 6, 3, 2, 2, 8, 1, 8, 4, 0, 8, 9, 3, 5, 4, 2, 2, 2, 4, 1, 3, 1, 8, 4, 9, 8, 8, 9, 6, 9, 7, 6, 4, 5, 8, 6, 8, 6, 6, 2, 1, 3, 1, 8, 4, 6, 4, 4, 1, 9, 5, 9, 5, 2, 3, 7, 9, 2, 8, 1, 5, 8, 2, 9, 2, 8, 5, 6, 9, 2, 5, 0, 3, 6, 3, 6, 6, 9, 8, 4, 8, 1, 6, 7, 8, 2, 5, 8, 6, 5, 8, 9, 9, 8, 1, 2, 3, 0, 9, 8, 3, 3, 1, 1, 1, 2, 1, 6, 8, 2, 6, 1, 4, 8, 1, 7, 3, 6, 3, 8, 1, 2, 8, 8, 9, 3, 3, 2, 5, 4, 5, 0, 3, 7, 9, 9, 2, 8, 8, 7, 1, 8, 3, 2, 9, 3, 6, 3, 4, 3, 2, 5, 5, 6, 3, 9, 9, 0, 0, 3, 0, 5, 6, 5, 6, 6, 2, 3, 6, 6, 8, 3, 2, 8, 2, 6, 5, 8, 4, 1, 2, 6, 1, 9, 6, 1, 6, 2, 6, 3, 8, 8, 1, 5, 1, 8, 2, 1, 9, 5, 6, 9, 8, 5, 5, 5, 8, 3, 2, 3, 5, 3, 4, 3, 1, 0, 1, 0, 3, 7, 2, 6, 8, 5, 9, 2]
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:11<18:28, 11.19s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  2%|▏         | 2/100 [00:21<17:52, 10.94s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  3%|▎         | 3/100 [00:32<17:13, 10.66s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  4%|▍         | 4/100 [00:43<17:18, 10.82s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  5%|▌         | 5/100 [00:54<17:13, 10.88s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  6%|▌         | 6/100 [01:04<16:43, 10.68s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  7%|▋         | 7/100 [01:15<16:46, 10.82s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  8%|▊         | 8/100 [01:26<16:44, 10.92s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  9%|▉         | 9/100 [01:37<16:21, 10.78s/it]
 | Global Training Round : 1 |

user 63, loss 1.3182555294571778, acc 0.9166666666666666
user 9, loss 1.2267884737979142, acc 0.8958333333333334
user 27, loss 1.1767136562424594, acc 0.8125
user 65, loss 1.2652732473535415, acc 0.8541666666666666
user 83, loss 1.2321832389976735, acc 0.8541666666666666
user 79, loss 1.2512311055635412, acc 0.8333333333333334
user 43, loss 1.2719673774849911, acc 0.8958333333333334
user 69, loss 1.2419937679687372, acc 0.9166666666666666
user 88, loss 1.2810641115292525, acc 0.9166666666666666
user 2, loss 1.214129290328576, acc 0.7916666666666666
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 1 global rounds:
Training Loss : 1.2479599798723864
Global model Benign Test Accuracy: 90.67% 

Global model Malicious Accuracy: 91.04%, Malicious Loss: 1703.60 , Outputs: tensor([0.1669, 0.1750, 0.1789, 0.1802, 0.1892, 0.1878, 0.1592, 0.1977, 0.1845,
        0.1773])


 | Global Training Round : 2 |

user 7, loss 0.3013291363580487, acc 0.8541666666666666
user 19, loss 0.30531515813289356, acc 0.8333333333333334
user 85, loss 0.32021912421601323, acc 0.9583333333333334
user 6, loss 0.31430659102610287, acc 0.9166666666666666
user 4, loss 0.32336184810847046, acc 0.8958333333333334
user 78, loss 0.3177410865178666, acc 0.9583333333333334
user 62, loss 0.2844265088880769, acc 0.9375
user 80, loss 0.29513565816271764, acc 0.9166666666666666
Malcious user 90 is selected!
user 90, loss 2.2597991387049357, acc 0.14583333333333334, mal loss 107.23657870292664, mal acc 0.15208333333333332
user 97, loss 0.31564859956359637, acc 0.9791666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 2 global rounds:
Training Loss : 0.8758441324201294
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 3 |

user 42, loss nan, acc 0.20833333333333334
Malcious user 56 is selected!
user 56, loss 2.2597894738117854, acc 0.08333333333333333, mal loss 107.234694480896, mal acc 0.15208333333333332
user 63, loss nan, acc 0.10416666666666667
user 48, loss nan, acc 0.10416666666666667
user 64, loss nan, acc 0.1875
user 68, loss nan, acc 0.041666666666666664
user 32, loss nan, acc 0.08333333333333333
user 75, loss nan, acc 0.0625
user 52, loss nan, acc 0.125
Malcious user 90 is selected!
user 90, loss 2.259878212213516, acc 0.14583333333333334, mal loss 107.24014520645142, mal acc 0.15208333333333332
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 3 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 4 |

user 42, loss nan, acc 0.20833333333333334
user 64, loss nan, acc 0.1875
user 25, loss nan, acc 0.020833333333333332
user 98, loss nan, acc 0.125
user 88, loss nan, acc 0.08333333333333333
user 23, loss nan, acc 0.0625
Malcious user 26 is selected!
user 26, loss 2.2597606832782424, acc 0.041666666666666664, mal loss 107.23654007911682, mal acc 0.15208333333333332
Malcious user 61 is selected!
user 61, loss 2.2597691973050438, acc 0.041666666666666664, mal loss 107.23333501815796, mal acc 0.15208333333333332
user 16, loss nan, acc 0.08333333333333333
Malcious user 55 is selected!
user 55, loss 2.2597818568348886, acc 0.14583333333333334, mal loss 107.2338879108429, mal acc 0.15208333333333332
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 4 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 5 |

user 11, loss nan, acc 0.125
user 60, loss nan, acc 0.0625
user 99, loss nan, acc 0.0625
user 23, loss nan, acc 0.0625
user 43, loss nan, acc 0.16666666666666666
user 48, loss nan, acc 0.10416666666666667
user 67, loss nan, acc 0.0625
user 57, loss nan, acc 0.0625
user 62, loss nan, acc 0.08333333333333333
user 66, loss nan, acc 0.14583333333333334
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 5 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 6 |

user 60, loss nan, acc 0.0625
Malcious user 70 is selected!
user 70, loss 2.259836615125338, acc 0.10416666666666667, mal loss 107.23859691619873, mal acc 0.15208333333333332
user 92, loss nan, acc 0.10416666666666667
user 19, loss nan, acc 0.10416666666666667
user 77, loss nan, acc 0.0625
user 95, loss nan, acc 0.10416666666666667
Malcious user 61 is selected!
user 61, loss 2.259825804332892, acc 0.041666666666666664, mal loss 107.23923802375793, mal acc 0.15208333333333332
user 67, loss nan, acc 0.0625
user 22, loss nan, acc 0.10416666666666667
user 79, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 6 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 7 |

user 52, loss nan, acc 0.125
user 24, loss nan, acc 0.125
user 82, loss nan, acc 0.125
user 95, loss nan, acc 0.10416666666666667
user 93, loss nan, acc 0.0625
user 1, loss nan, acc 0.08333333333333333
user 78, loss nan, acc 0.10416666666666667
user 75, loss nan, acc 0.0625
Malcious user 90 is selected!
user 90, loss 2.2598083570599554, acc 0.14583333333333334, mal loss 107.23554158210754, mal acc 0.15208333333333332
user 73, loss nan, acc 0.020833333333333332
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 7 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 8 |

user 85, loss nan, acc 0.14583333333333334
user 84, loss nan, acc 0.0625
user 97, loss nan, acc 0.10416666666666667
user 17, loss nan, acc 0.14583333333333334
user 27, loss nan, acc 0.10416666666666667
user 77, loss nan, acc 0.0625
Malcious user 40 is selected!
user 40, loss 2.2598549415667852, acc 0.10416666666666667, mal loss 107.23285222053528, mal acc 0.15208333333333332
user 41, loss nan, acc 0.10416666666666667
user 22, loss nan, acc 0.10416666666666667
user 34, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 8 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 9 |

user 36, loss nan, acc 0.08333333333333333
user 74, loss nan, acc 0.10416666666666667
user 5, loss nan, acc 0.10416666666666667
user 85, loss nan, acc 0.14583333333333334
user 39, loss nan, acc 0.20833333333333334
Malcious user 29 is selected!
user 29, loss 2.2598143607378005, acc 0.14583333333333334, mal loss 107.23602819442749, mal acc 0.15208333333333332
user 41, loss nan, acc 0.10416666666666667
Malcious user 61 is selected!
user 61, loss 2.259807286163171, acc 0.041666666666666664, mal loss 107.23601913452148, mal acc 0.15208333333333332
user 77, loss nan, acc 0.0625
user 14, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 9 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 10 |

user 24, loss nan, acc 0.125
user 88, loss nan, acc 0.08333333333333333
user 19, loss nan, acc 0.10416666666666667
user 41, loss nan, acc 0.10416666666666667
user 36, loss nan, acc 0.08333333333333333
Malcious user 10 is selected!
user 10, loss 2.2597731163104373, acc 0.125, mal loss 107.23944425582886, mal acc 0.15208333333333332
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 10%|█         | 10/100 [01:48<16:22, 10.91s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 11%|█         | 11/100 [01:59<16:17, 10.98s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 12%|█▏        | 12/100 [02:09<15:46, 10.75s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 13%|█▎        | 13/100 [02:21<15:48, 10.90s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 14%|█▍        | 14/100 [02:32<15:46, 11.00s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 15%|█▌        | 15/100 [02:42<15:15, 10.77s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 16%|█▌        | 16/100 [02:53<15:11, 10.85s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 17%|█▋        | 17/100 [03:04<15:08, 10.94s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 18%|█▊        | 18/100 [03:14<14:37, 10.70s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 19%|█▉        | 19/100 [03:25<14:29, 10.73s/it]user 84, loss nan, acc 0.0625
user 12, loss nan, acc 0.10416666666666667
user 99, loss nan, acc 0.0625
user 85, loss nan, acc 0.14583333333333334
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 10 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 11 |

user 17, loss nan, acc 0.14583333333333334
Malcious user 10 is selected!
user 10, loss 2.2597981820503867, acc 0.125, mal loss 107.23587226867676, mal acc 0.15208333333333332
user 51, loss nan, acc 0.14583333333333334
user 30, loss nan, acc 0.041666666666666664
user 3, loss nan, acc 0.10416666666666667
user 45, loss nan, acc 0.08333333333333333
user 65, loss nan, acc 0.125
user 87, loss nan, acc 0.14583333333333334
user 33, loss nan, acc 0.10416666666666667
Malcious user 26 is selected!
user 26, loss 2.2598141754666967, acc 0.041666666666666664, mal loss 107.23695683479309, mal acc 0.15208333333333332
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 11 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 12 |

user 36, loss nan, acc 0.08333333333333333
Malcious user 40 is selected!
user 40, loss 2.2598176419734957, acc 0.10416666666666667, mal loss 107.23709511756897, mal acc 0.15208333333333332
Malcious user 90 is selected!
user 90, loss 2.259818204243978, acc 0.14583333333333334, mal loss 107.2374210357666, mal acc 0.15208333333333332
Malcious user 29 is selected!
user 29, loss 2.259852708876133, acc 0.14583333333333334, mal loss 107.23711037635803, mal acc 0.15208333333333332
user 87, loss nan, acc 0.14583333333333334
user 24, loss nan, acc 0.125
user 2, loss nan, acc 0.0625
user 99, loss nan, acc 0.0625
user 9, loss nan, acc 0.0625
user 48, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 12 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 13 |

user 59, loss nan, acc 0.041666666666666664
user 82, loss nan, acc 0.125
user 25, loss nan, acc 0.020833333333333332
user 50, loss nan, acc 0.10416666666666667
user 45, loss nan, acc 0.08333333333333333
user 60, loss nan, acc 0.0625
user 30, loss nan, acc 0.041666666666666664
user 24, loss nan, acc 0.125
Malcious user 26 is selected!
user 26, loss 2.259819233417511, acc 0.041666666666666664, mal loss 107.23562455177307, mal acc 0.15208333333333332
user 94, loss nan, acc 0.14583333333333334
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 13 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 14 |

user 44, loss nan, acc 0.020833333333333332
user 2, loss nan, acc 0.0625
user 84, loss nan, acc 0.0625
user 53, loss nan, acc 0.10416666666666667
user 38, loss nan, acc 0.16666666666666666
user 68, loss nan, acc 0.041666666666666664
Malcious user 40 is selected!
user 40, loss 2.259775487581889, acc 0.10416666666666667, mal loss 107.23692989349365, mal acc 0.15208333333333332
user 28, loss nan, acc 0.125
user 32, loss nan, acc 0.08333333333333333
user 43, loss nan, acc 0.16666666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 14 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 15 |

user 45, loss nan, acc 0.08333333333333333
user 57, loss nan, acc 0.0625
user 73, loss nan, acc 0.020833333333333332
user 53, loss nan, acc 0.10416666666666667
user 98, loss nan, acc 0.125
Malcious user 56 is selected!
user 56, loss 2.2598052228490513, acc 0.08333333333333333, mal loss 107.23619961738586, mal acc 0.15208333333333332
user 7, loss nan, acc 0.0625
Malcious user 46 is selected!
user 46, loss 2.2598459904392563, acc 0.125, mal loss 107.24006509780884, mal acc 0.15208333333333332
user 28, loss nan, acc 0.125
user 80, loss nan, acc 0.041666666666666664
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 15 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 16 |

user 37, loss nan, acc 0.020833333333333332
user 49, loss nan, acc 0.10416666666666667
user 59, loss nan, acc 0.041666666666666664
user 68, loss nan, acc 0.041666666666666664
user 96, loss nan, acc 0.0625
user 41, loss nan, acc 0.10416666666666667
user 3, loss nan, acc 0.10416666666666667
user 36, loss nan, acc 0.08333333333333333
user 69, loss nan, acc 0.041666666666666664
user 11, loss nan, acc 0.125
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 16 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 17 |

user 23, loss nan, acc 0.0625
Malcious user 29 is selected!
user 29, loss 2.2598132267594337, acc 0.14583333333333334, mal loss 107.23649573326111, mal acc 0.15208333333333332
user 65, loss nan, acc 0.125
user 43, loss nan, acc 0.16666666666666666
user 86, loss nan, acc 0.0625
user 48, loss nan, acc 0.10416666666666667
Malcious user 90 is selected!
user 90, loss 2.2598116899530094, acc 0.14583333333333334, mal loss 107.23708438873291, mal acc 0.15208333333333332
user 38, loss nan, acc 0.16666666666666666
user 36, loss nan, acc 0.08333333333333333
user 87, loss nan, acc 0.14583333333333334
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 17 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 18 |

Malcious user 70 is selected!
user 70, loss 2.2598136613766355, acc 0.10416666666666667, mal loss 107.23630833625793, mal acc 0.15208333333333332
user 59, loss nan, acc 0.041666666666666664
user 99, loss nan, acc 0.0625
user 4, loss nan, acc 0.10416666666666667
user 84, loss nan, acc 0.0625
user 73, loss nan, acc 0.020833333333333332
user 65, loss nan, acc 0.125
user 53, loss nan, acc 0.10416666666666667
user 78, loss nan, acc 0.10416666666666667
user 32, loss nan, acc 0.08333333333333333
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 18 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 19 |

user 88, loss nan, acc 0.08333333333333333
user 13, loss nan, acc 0.0625
user 25, loss nan, acc 0.020833333333333332
user 43, loss nan, acc 0.16666666666666666
user 50, loss nan, acc 0.10416666666666667
user 12, loss nan, acc 0.10416666666666667
Malcious user 56 is selected!
user 56, loss 2.2598118886351584, acc 0.08333333333333333, mal loss 107.23784041404724, mal acc 0.15208333333333332
user 91, loss nan, acc 0.10416666666666667
user 5, loss nan, acc 0.10416666666666667
user 41, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 19 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 20 |

user 30, loss nan, acc 0.041666666666666664
user 66, loss nan, acc 0.14583333333333334
user 44, loss nan, acc 0.020833333333333332
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 20%|██        | 20/100 [03:36<14:24, 10.80s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 21%|██        | 21/100 [03:46<13:59, 10.63s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 22%|██▏       | 22/100 [03:58<14:08, 10.88s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 23%|██▎       | 23/100 [04:09<14:02, 10.94s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 24%|██▍       | 24/100 [04:19<13:31, 10.68s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 25%|██▌       | 25/100 [04:30<13:25, 10.73s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 26%|██▌       | 26/100 [04:41<13:18, 10.79s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 27%|██▋       | 27/100 [04:51<13:01, 10.70s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 28%|██▊       | 28/100 [05:02<12:56, 10.78s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 29%|██▉       | 29/100 [05:13<12:37, 10.67s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 30%|███       | 30/100 [05:24<12:34, 10.78s/it]user 93, loss nan, acc 0.0625
user 20, loss nan, acc 0.10416666666666667
user 38, loss nan, acc 0.16666666666666666
user 85, loss nan, acc 0.14583333333333334
user 96, loss nan, acc 0.0625
user 63, loss nan, acc 0.10416666666666667
user 34, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 20 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 21 |

user 78, loss nan, acc 0.10416666666666667
user 76, loss nan, acc 0.10416666666666667
user 9, loss nan, acc 0.0625
user 14, loss nan, acc 0.10416666666666667
Malcious user 61 is selected!
user 61, loss 2.259875272214413, acc 0.041666666666666664, mal loss 107.23616456985474, mal acc 0.15208333333333332
user 53, loss nan, acc 0.10416666666666667
user 0, loss nan, acc 0.125
user 2, loss nan, acc 0.0625
user 96, loss nan, acc 0.0625
user 18, loss nan, acc 0.1875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 21 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 22 |

Malcious user 26 is selected!
user 26, loss 2.2598067328333853, acc 0.041666666666666664, mal loss 107.24005389213562, mal acc 0.15208333333333332
user 95, loss nan, acc 0.10416666666666667
user 86, loss nan, acc 0.0625
Malcious user 10 is selected!
user 10, loss 2.259777279694875, acc 0.125, mal loss 107.23713040351868, mal acc 0.15208333333333332
user 41, loss nan, acc 0.10416666666666667
user 83, loss nan, acc 0.125
user 92, loss nan, acc 0.10416666666666667
user 49, loss nan, acc 0.10416666666666667
user 62, loss nan, acc 0.08333333333333333
user 74, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 22 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 23 |

user 0, loss nan, acc 0.125
user 80, loss nan, acc 0.041666666666666664
user 83, loss nan, acc 0.125
user 35, loss nan, acc 0.20833333333333334
user 62, loss nan, acc 0.08333333333333333
Malcious user 55 is selected!
user 55, loss 2.2598597650726635, acc 0.14583333333333334, mal loss 107.2382640838623, mal acc 0.15208333333333332
user 17, loss nan, acc 0.14583333333333334
user 4, loss nan, acc 0.10416666666666667
user 43, loss nan, acc 0.16666666666666666
Malcious user 26 is selected!
user 26, loss 2.259850845237573, acc 0.041666666666666664, mal loss 107.2429838180542, mal acc 0.15208333333333332
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 23 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 24 |

user 43, loss nan, acc 0.16666666666666666
user 25, loss nan, acc 0.020833333333333332
user 0, loss nan, acc 0.125
user 66, loss nan, acc 0.14583333333333334
user 80, loss nan, acc 0.041666666666666664
user 31, loss nan, acc 0.16666666666666666
user 16, loss nan, acc 0.08333333333333333
user 7, loss nan, acc 0.0625
user 96, loss nan, acc 0.0625
user 99, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 24 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 25 |

user 92, loss nan, acc 0.10416666666666667
user 33, loss nan, acc 0.10416666666666667
user 0, loss nan, acc 0.125
user 23, loss nan, acc 0.0625
user 75, loss nan, acc 0.0625
user 91, loss nan, acc 0.10416666666666667
user 21, loss nan, acc 0.0625
Malcious user 10 is selected!
user 10, loss 2.2598442817727724, acc 0.125, mal loss 107.2398157119751, mal acc 0.15208333333333332
user 2, loss nan, acc 0.0625
user 18, loss nan, acc 0.1875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 25 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 26 |

user 13, loss nan, acc 0.0625
user 39, loss nan, acc 0.20833333333333334
user 28, loss nan, acc 0.125
user 84, loss nan, acc 0.0625
user 85, loss nan, acc 0.14583333333333334
user 33, loss nan, acc 0.10416666666666667
user 47, loss nan, acc 0.10416666666666667
user 15, loss nan, acc 0.0625
user 38, loss nan, acc 0.16666666666666666
user 16, loss nan, acc 0.08333333333333333
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 26 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 27 |

Malcious user 55 is selected!
user 55, loss 2.259855509797732, acc 0.14583333333333334, mal loss 107.23873519897461, mal acc 0.15208333333333332
user 47, loss nan, acc 0.10416666666666667
user 83, loss nan, acc 0.125
user 43, loss nan, acc 0.16666666666666666
user 44, loss nan, acc 0.020833333333333332
user 89, loss nan, acc 0.0625
user 14, loss nan, acc 0.10416666666666667
user 76, loss nan, acc 0.10416666666666667
user 22, loss nan, acc 0.10416666666666667
user 80, loss nan, acc 0.041666666666666664
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 27 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 28 |

user 63, loss nan, acc 0.10416666666666667
user 48, loss nan, acc 0.10416666666666667
user 72, loss nan, acc 0.10416666666666667
user 41, loss nan, acc 0.10416666666666667
user 13, loss nan, acc 0.0625
user 1, loss nan, acc 0.08333333333333333
user 28, loss nan, acc 0.125
user 79, loss nan, acc 0.0625
user 74, loss nan, acc 0.10416666666666667
user 22, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 28 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 29 |

user 18, loss nan, acc 0.1875
user 68, loss nan, acc 0.041666666666666664
user 93, loss nan, acc 0.0625
user 42, loss nan, acc 0.20833333333333334
user 12, loss nan, acc 0.10416666666666667
user 28, loss nan, acc 0.125
user 67, loss nan, acc 0.0625
user 44, loss nan, acc 0.020833333333333332
user 92, loss nan, acc 0.10416666666666667
user 72, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 29 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 30 |

user 99, loss nan, acc 0.0625
user 53, loss nan, acc 0.10416666666666667
user 3, loss nan, acc 0.10416666666666667
user 45, loss nan, acc 0.08333333333333333
user 50, loss nan, acc 0.10416666666666667
user 64, loss nan, acc 0.1875
user 69, loss nan, acc 0.041666666666666664
user 62, loss nan, acc 0.08333333333333333
user 84, loss nan, acc 0.0625
user 18, loss nan, acc 0.1875
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 30 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 31 |

user 53, loss nan, acc 0.10416666666666667
user 52, loss nan, acc 0.125
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 31%|███       | 31/100 [05:35<12:29, 10.86s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 32%|███▏      | 32/100 [05:45<12:07, 10.71s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 33%|███▎      | 33/100 [05:56<11:57, 10.71s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 34%|███▍      | 34/100 [06:07<11:55, 10.84s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 35%|███▌      | 35/100 [06:17<11:32, 10.65s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 36%|███▌      | 36/100 [06:28<11:29, 10.77s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 37%|███▋      | 37/100 [06:39<11:22, 10.83s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 38%|███▊      | 38/100 [06:49<11:00, 10.66s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 39%|███▉      | 39/100 [07:00<10:52, 10.70s/it]user 14, loss nan, acc 0.10416666666666667
user 67, loss nan, acc 0.0625
user 99, loss nan, acc 0.0625
user 77, loss nan, acc 0.0625
user 82, loss nan, acc 0.125
user 43, loss nan, acc 0.16666666666666666
user 57, loss nan, acc 0.0625
user 94, loss nan, acc 0.14583333333333334
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 31 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 32 |

user 57, loss nan, acc 0.0625
user 95, loss nan, acc 0.10416666666666667
Malcious user 56 is selected!
user 56, loss 2.259827847778797, acc 0.08333333333333333, mal loss 107.23694896697998, mal acc 0.15208333333333332
user 33, loss nan, acc 0.10416666666666667
user 18, loss nan, acc 0.1875
Malcious user 55 is selected!
user 55, loss 2.259898698826631, acc 0.14583333333333334, mal loss 107.23977780342102, mal acc 0.15208333333333332
Malcious user 46 is selected!
user 46, loss 2.2597965334852534, acc 0.125, mal loss 107.23688340187073, mal acc 0.15208333333333332
user 88, loss nan, acc 0.08333333333333333
user 0, loss nan, acc 0.125
user 11, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 32 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 33 |

user 2, loss nan, acc 0.0625
user 0, loss nan, acc 0.125
user 22, loss nan, acc 0.10416666666666667
user 5, loss nan, acc 0.10416666666666667
user 76, loss nan, acc 0.10416666666666667
user 37, loss nan, acc 0.020833333333333332
user 24, loss nan, acc 0.125
user 30, loss nan, acc 0.041666666666666664
user 27, loss nan, acc 0.10416666666666667
Malcious user 10 is selected!
user 10, loss 2.2598191117246946, acc 0.125, mal loss 107.23524904251099, mal acc 0.15208333333333332
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 33 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 34 |

user 47, loss nan, acc 0.10416666666666667
user 62, loss nan, acc 0.08333333333333333
user 30, loss nan, acc 0.041666666666666664
user 3, loss nan, acc 0.10416666666666667
user 99, loss nan, acc 0.0625
user 8, loss nan, acc 0.14583333333333334
user 88, loss nan, acc 0.08333333333333333
user 60, loss nan, acc 0.0625
user 65, loss nan, acc 0.125
Malcious user 29 is selected!
user 29, loss 2.259800576170286, acc 0.14583333333333334, mal loss 107.23288798332214, mal acc 0.15208333333333332
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 34 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 35 |

user 9, loss nan, acc 0.0625
user 6, loss nan, acc 0.08333333333333333
user 67, loss nan, acc 0.0625
user 43, loss nan, acc 0.16666666666666666
Malcious user 40 is selected!
user 40, loss 2.2597921013832094, acc 0.10416666666666667, mal loss 107.23211479187012, mal acc 0.15208333333333332
user 28, loss nan, acc 0.125
user 2, loss nan, acc 0.0625
user 5, loss nan, acc 0.10416666666666667
user 78, loss nan, acc 0.10416666666666667
user 4, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 35 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 36 |

user 64, loss nan, acc 0.1875
user 96, loss nan, acc 0.0625
Malcious user 61 is selected!
user 61, loss 2.2597948501507443, acc 0.041666666666666664, mal loss 107.237149477005, mal acc 0.15208333333333332
user 42, loss nan, acc 0.20833333333333334
user 99, loss nan, acc 0.0625
user 20, loss nan, acc 0.10416666666666667
user 11, loss nan, acc 0.125
user 39, loss nan, acc 0.20833333333333334
user 76, loss nan, acc 0.10416666666666667
Malcious user 26 is selected!
user 26, loss 2.2598797366023065, acc 0.041666666666666664, mal loss 107.23983812332153, mal acc 0.15208333333333332
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 36 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 37 |

user 95, loss nan, acc 0.10416666666666667
user 93, loss nan, acc 0.0625
user 2, loss nan, acc 0.0625
user 49, loss nan, acc 0.10416666666666667
user 57, loss nan, acc 0.0625
Malcious user 61 is selected!
user 61, loss 2.2598512073357897, acc 0.041666666666666664, mal loss 107.24127197265625, mal acc 0.15208333333333332
user 4, loss nan, acc 0.10416666666666667
user 15, loss nan, acc 0.0625
Malcious user 40 is selected!
user 40, loss 2.2598214522004128, acc 0.10416666666666667, mal loss 107.23777866363525, mal acc 0.15208333333333332
user 58, loss nan, acc 0.041666666666666664
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 37 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 38 |

user 98, loss nan, acc 0.125
user 79, loss nan, acc 0.0625
Malcious user 10 is selected!
user 10, loss 2.2597791627049446, acc 0.125, mal loss 107.2375876903534, mal acc 0.15208333333333332
user 14, loss nan, acc 0.10416666666666667
user 92, loss nan, acc 0.10416666666666667
Malcious user 56 is selected!
user 56, loss 2.259847102065881, acc 0.08333333333333333, mal loss 107.23925423622131, mal acc 0.15208333333333332
user 5, loss nan, acc 0.10416666666666667
user 28, loss nan, acc 0.125
user 57, loss nan, acc 0.0625
Malcious user 90 is selected!
user 90, loss 2.2598397602637608, acc 0.14583333333333334, mal loss 107.24053692817688, mal acc 0.15208333333333332
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 38 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 39 |

user 9, loss nan, acc 0.0625
user 79, loss nan, acc 0.0625
user 63, loss nan, acc 0.10416666666666667
Malcious user 29 is selected!
user 29, loss 2.259799973666668, acc 0.14583333333333334, mal loss 107.23828434944153, mal acc 0.15208333333333332
user 94, loss nan, acc 0.14583333333333334
user 11, loss nan, acc 0.125
user 44, loss nan, acc 0.020833333333333332
user 85, loss nan, acc 0.14583333333333334
user 58, loss nan, acc 0.041666666666666664
user 88, loss nan, acc 0.08333333333333333
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 39 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 40 |

Malcious user 56 is selected!
user 56, loss 2.259873330593109, acc 0.08333333333333333, mal loss 107.240483045578, mal acc 0.15208333333333332
Malcious user 26 is selected!
user 26, loss 2.259869495530923, acc 0.041666666666666664, mal loss 107.23941564559937, mal acc 0.15208333333333332
user 92, loss nan, acc 0.10416666666666667
user 63, loss nan, acc 0.10416666666666667
user 99, loss nan, acc 0.0625
Malcious user 70 is selected!
user 70, loss 2.2597991451621056, acc 0.10416666666666667, mal loss 107.2351291179657, mal acc 0.15208333333333332
Malcious user 55 is selected!
user 55, loss 2.259816121061643, acc 0.14583333333333334, mal loss 107.23480892181396, mal acc 0.15208333333333332
user 53, loss nan, acc 0.10416666666666667
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 40%|████      | 40/100 [07:12<10:51, 10.86s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 41%|████      | 41/100 [07:22<10:32, 10.71s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 42%|████▏     | 42/100 [07:33<10:28, 10.84s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 43%|████▎     | 43/100 [07:44<10:23, 10.95s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 44%|████▍     | 44/100 [07:55<10:03, 10.78s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 45%|████▌     | 45/100 [08:06<09:54, 10.81s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 46%|████▌     | 46/100 [08:17<09:51, 10.96s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 47%|████▋     | 47/100 [08:27<09:29, 10.74s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 48%|████▊     | 48/100 [08:38<09:21, 10.79s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 49%|████▉     | 49/100 [08:49<09:19, 10.97s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 50%|█████     | 50/100 [09:00<08:56, 10.73s/it]user 49, loss nan, acc 0.10416666666666667
user 47, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 40 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 41 |

user 53, loss nan, acc 0.10416666666666667
user 59, loss nan, acc 0.041666666666666664
user 24, loss nan, acc 0.125
user 9, loss nan, acc 0.0625
user 98, loss nan, acc 0.125
user 66, loss nan, acc 0.14583333333333334
user 6, loss nan, acc 0.08333333333333333
user 95, loss nan, acc 0.10416666666666667
user 76, loss nan, acc 0.10416666666666667
user 19, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 41 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 42 |

user 78, loss nan, acc 0.10416666666666667
user 27, loss nan, acc 0.10416666666666667
user 84, loss nan, acc 0.0625
user 83, loss nan, acc 0.125
user 96, loss nan, acc 0.0625
user 5, loss nan, acc 0.10416666666666667
user 38, loss nan, acc 0.16666666666666666
user 0, loss nan, acc 0.125
user 94, loss nan, acc 0.14583333333333334
user 48, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 42 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 43 |

user 16, loss nan, acc 0.08333333333333333
user 97, loss nan, acc 0.10416666666666667
user 51, loss nan, acc 0.14583333333333334
user 36, loss nan, acc 0.08333333333333333
user 79, loss nan, acc 0.0625
user 54, loss nan, acc 0.0625
user 95, loss nan, acc 0.10416666666666667
user 81, loss nan, acc 0.125
user 15, loss nan, acc 0.0625
user 69, loss nan, acc 0.041666666666666664
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 43 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 44 |

user 35, loss nan, acc 0.20833333333333334
user 96, loss nan, acc 0.0625
user 53, loss nan, acc 0.10416666666666667
Malcious user 70 is selected!
user 70, loss 2.259801725546519, acc 0.10416666666666667, mal loss 107.24309039115906, mal acc 0.15208333333333332
user 37, loss nan, acc 0.020833333333333332
user 76, loss nan, acc 0.10416666666666667
user 83, loss nan, acc 0.125
user 71, loss nan, acc 0.125
Malcious user 56 is selected!
user 56, loss 2.259820890426636, acc 0.08333333333333333, mal loss 107.24037218093872, mal acc 0.15208333333333332
user 0, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 44 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 45 |

user 0, loss nan, acc 0.125
user 49, loss nan, acc 0.10416666666666667
user 76, loss nan, acc 0.10416666666666667
Malcious user 90 is selected!
user 90, loss 2.2597969899574917, acc 0.14583333333333334, mal loss 107.23832440376282, mal acc 0.15208333333333332
user 3, loss nan, acc 0.10416666666666667
user 5, loss nan, acc 0.10416666666666667
user 51, loss nan, acc 0.14583333333333334
Malcious user 46 is selected!
user 46, loss 2.2597961629430454, acc 0.125, mal loss 107.2345917224884, mal acc 0.15208333333333332
user 91, loss nan, acc 0.10416666666666667
user 79, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 45 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 46 |

user 65, loss nan, acc 0.125
user 50, loss nan, acc 0.10416666666666667
user 85, loss nan, acc 0.14583333333333334
user 54, loss nan, acc 0.0625
user 11, loss nan, acc 0.125
user 8, loss nan, acc 0.14583333333333334
user 35, loss nan, acc 0.20833333333333334
user 73, loss nan, acc 0.020833333333333332
user 92, loss nan, acc 0.10416666666666667
user 2, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 46 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 47 |

user 97, loss nan, acc 0.10416666666666667
user 57, loss nan, acc 0.0625
user 81, loss nan, acc 0.125
user 19, loss nan, acc 0.10416666666666667
user 8, loss nan, acc 0.14583333333333334
user 66, loss nan, acc 0.14583333333333334
user 51, loss nan, acc 0.14583333333333334
user 93, loss nan, acc 0.0625
user 39, loss nan, acc 0.20833333333333334
user 15, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 47 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 48 |

user 76, loss nan, acc 0.10416666666666667
user 92, loss nan, acc 0.10416666666666667
user 6, loss nan, acc 0.08333333333333333
user 0, loss nan, acc 0.125
user 27, loss nan, acc 0.10416666666666667
user 58, loss nan, acc 0.041666666666666664
Malcious user 10 is selected!
user 10, loss 2.2598403428991634, acc 0.125, mal loss 107.24103856086731, mal acc 0.15208333333333332
user 88, loss nan, acc 0.08333333333333333
user 21, loss nan, acc 0.0625
user 82, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 48 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 49 |

user 22, loss nan, acc 0.10416666666666667
user 72, loss nan, acc 0.10416666666666667
user 6, loss nan, acc 0.08333333333333333
user 94, loss nan, acc 0.14583333333333334
user 62, loss nan, acc 0.08333333333333333
user 32, loss nan, acc 0.08333333333333333
user 11, loss nan, acc 0.125
user 64, loss nan, acc 0.1875
user 98, loss nan, acc 0.125
user 2, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 49 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 50 |

user 9, loss nan, acc 0.0625
user 24, loss nan, acc 0.125
user 48, loss nan, acc 0.10416666666666667
Malcious user 56 is selected!
user 56, loss 2.2598273023962974, acc 0.08333333333333333, mal loss 107.24032878875732, mal acc 0.15208333333333332
user 63, loss nan, acc 0.10416666666666667
Malcious user 61 is selected!
user 61, loss 2.259859069188436, acc 0.041666666666666664, mal loss 107.23757910728455, mal acc 0.15208333333333332
user 12, loss nan, acc 0.10416666666666667
user 94, loss nan, acc 0.14583333333333334
user 86, loss nan, acc 0.0625
user 57, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 50 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 51 |

user 16, loss nan, acc 0.08333333333333333
user 77, loss nan, acc 0.0625
user 68, loss nan, acc 0.041666666666666664
user 45, loss nan, acc 0.08333333333333333
Malcious user 90 is selected!
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 51%|█████     | 51/100 [09:11<08:54, 10.90s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 52%|█████▏    | 52/100 [09:22<08:46, 10.96s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 53%|█████▎    | 53/100 [09:32<08:23, 10.72s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 54%|█████▍    | 54/100 [09:43<08:19, 10.85s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 55%|█████▌    | 55/100 [09:54<08:08, 10.86s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 56%|█████▌    | 56/100 [10:04<07:47, 10.63s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 57%|█████▋    | 57/100 [10:15<07:44, 10.80s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 58%|█████▊    | 58/100 [10:26<07:35, 10.85s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 59%|█████▉    | 59/100 [10:37<07:16, 10.64s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 60%|██████    | 60/100 [10:48<07:14, 10.87s/it]user 90, loss 2.2597742681701978, acc 0.14583333333333334, mal loss 107.23468613624573, mal acc 0.15208333333333332
user 6, loss nan, acc 0.08333333333333333
user 93, loss nan, acc 0.0625
user 42, loss nan, acc 0.20833333333333334
user 58, loss nan, acc 0.041666666666666664
user 98, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 51 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 52 |

user 21, loss nan, acc 0.0625
Malcious user 26 is selected!
user 26, loss 2.259747879207134, acc 0.041666666666666664, mal loss 107.23614430427551, mal acc 0.15208333333333332
user 80, loss nan, acc 0.041666666666666664
user 18, loss nan, acc 0.1875
Malcious user 90 is selected!
user 90, loss 2.2598391711711883, acc 0.14583333333333334, mal loss 107.23524808883667, mal acc 0.15208333333333332
user 54, loss nan, acc 0.0625
user 91, loss nan, acc 0.10416666666666667
user 68, loss nan, acc 0.041666666666666664
Malcious user 40 is selected!
user 40, loss 2.2597901935378713, acc 0.10416666666666667, mal loss 107.23685693740845, mal acc 0.15208333333333332
user 87, loss nan, acc 0.14583333333333334
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 52 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 53 |

user 62, loss nan, acc 0.08333333333333333
user 93, loss nan, acc 0.0625
user 44, loss nan, acc 0.020833333333333332
user 59, loss nan, acc 0.041666666666666664
Malcious user 55 is selected!
user 55, loss 2.259801937143008, acc 0.14583333333333334, mal loss 107.23476934432983, mal acc 0.15208333333333332
user 89, loss nan, acc 0.0625
user 31, loss nan, acc 0.16666666666666666
Malcious user 70 is selected!
user 70, loss 2.2598127772410708, acc 0.10416666666666667, mal loss 107.2364296913147, mal acc 0.15208333333333332
user 13, loss nan, acc 0.0625
user 18, loss nan, acc 0.1875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 53 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 54 |

user 98, loss nan, acc 0.125
Malcious user 46 is selected!
user 46, loss 2.2597813576459886, acc 0.125, mal loss 107.23794889450073, mal acc 0.15208333333333332
user 95, loss nan, acc 0.10416666666666667
user 87, loss nan, acc 0.14583333333333334
user 22, loss nan, acc 0.10416666666666667
user 38, loss nan, acc 0.16666666666666666
user 6, loss nan, acc 0.08333333333333333
Malcious user 61 is selected!
user 61, loss 2.2597553595900535, acc 0.041666666666666664, mal loss 107.23809623718262, mal acc 0.15208333333333332
user 48, loss nan, acc 0.10416666666666667
user 30, loss nan, acc 0.041666666666666664
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 54 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 55 |

user 2, loss nan, acc 0.0625
Malcious user 26 is selected!
user 26, loss 2.259848091006279, acc 0.041666666666666664, mal loss 107.23946118354797, mal acc 0.15208333333333332
user 89, loss nan, acc 0.0625
user 45, loss nan, acc 0.08333333333333333
user 84, loss nan, acc 0.0625
user 76, loss nan, acc 0.10416666666666667
user 22, loss nan, acc 0.10416666666666667
user 80, loss nan, acc 0.041666666666666664
user 93, loss nan, acc 0.0625
user 92, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 55 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 56 |

user 92, loss nan, acc 0.10416666666666667
user 48, loss nan, acc 0.10416666666666667
user 66, loss nan, acc 0.14583333333333334
user 35, loss nan, acc 0.20833333333333334
user 15, loss nan, acc 0.0625
user 17, loss nan, acc 0.14583333333333334
user 4, loss nan, acc 0.10416666666666667
user 34, loss nan, acc 0.0625
user 25, loss nan, acc 0.020833333333333332
user 80, loss nan, acc 0.041666666666666664
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 56 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 57 |

user 89, loss nan, acc 0.0625
Malcious user 90 is selected!
user 90, loss 2.2598878274361294, acc 0.14583333333333334, mal loss 107.2423803806305, mal acc 0.15208333333333332
user 47, loss nan, acc 0.10416666666666667
user 32, loss nan, acc 0.08333333333333333
user 34, loss nan, acc 0.0625
user 49, loss nan, acc 0.10416666666666667
user 38, loss nan, acc 0.16666666666666666
Malcious user 56 is selected!
user 56, loss 2.2597628379861514, acc 0.08333333333333333, mal loss 107.23368620872498, mal acc 0.15208333333333332
user 20, loss nan, acc 0.10416666666666667
user 33, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 57 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 58 |

user 88, loss nan, acc 0.08333333333333333
user 31, loss nan, acc 0.16666666666666666
user 38, loss nan, acc 0.16666666666666666
user 16, loss nan, acc 0.08333333333333333
user 32, loss nan, acc 0.08333333333333333
user 6, loss nan, acc 0.08333333333333333
user 67, loss nan, acc 0.0625
user 72, loss nan, acc 0.10416666666666667
user 84, loss nan, acc 0.0625
user 4, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 58 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 59 |

user 57, loss nan, acc 0.0625
user 17, loss nan, acc 0.14583333333333334
user 67, loss nan, acc 0.0625
user 59, loss nan, acc 0.041666666666666664
user 33, loss nan, acc 0.10416666666666667
user 72, loss nan, acc 0.10416666666666667
user 87, loss nan, acc 0.14583333333333334
user 86, loss nan, acc 0.0625
user 19, loss nan, acc 0.10416666666666667
user 65, loss nan, acc 0.125
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 59 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 60 |

user 93, loss nan, acc 0.0625
user 44, loss nan, acc 0.020833333333333332
user 4, loss nan, acc 0.10416666666666667
user 62, loss nan, acc 0.08333333333333333
user 17, loss nan, acc 0.14583333333333334
user 51, loss nan, acc 0.14583333333333334
user 99, loss nan, acc 0.0625
user 52, loss nan, acc 0.125
Malcious user 10 is selected!
user 10, loss 2.25982336550951, acc 0.125, mal loss 107.23210716247559, mal acc 0.15208333333333332
Malcious user 61 is selected!
user 61, loss 2.2598336880405743, acc 0.041666666666666664, mal loss 107.23844194412231, mal acc 0.15208333333333332
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 60 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 61 |

user 93, loss nan, acc 0.0625
Malcious user 46 is selected!
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 61%|██████    | 61/100 [10:59<07:06, 10.93s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 62%|██████▏   | 62/100 [11:09<06:47, 10.73s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 63%|██████▎   | 63/100 [11:20<06:38, 10.77s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 64%|██████▍   | 64/100 [11:31<06:24, 10.69s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 65%|██████▌   | 65/100 [11:41<06:14, 10.71s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 66%|██████▌   | 66/100 [11:52<06:03, 10.69s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 67%|██████▋   | 67/100 [12:02<05:49, 10.58s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 68%|██████▊   | 68/100 [12:13<05:40, 10.65s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 69%|██████▉   | 69/100 [12:24<05:31, 10.71s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 70%|███████   | 70/100 [12:34<05:14, 10.48s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 71%|███████   | 71/100 [12:45<05:10, 10.72s/it]user 46, loss 2.2598366613189382, acc 0.125, mal loss 107.2373058795929, mal acc 0.15208333333333332
user 69, loss nan, acc 0.041666666666666664
user 94, loss nan, acc 0.14583333333333334
user 72, loss nan, acc 0.10416666666666667
user 7, loss nan, acc 0.0625
user 13, loss nan, acc 0.0625
user 38, loss nan, acc 0.16666666666666666
user 74, loss nan, acc 0.10416666666666667
user 64, loss nan, acc 0.1875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 61 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 62 |

user 4, loss nan, acc 0.10416666666666667
user 12, loss nan, acc 0.10416666666666667
Malcious user 46 is selected!
user 46, loss 2.259862850109736, acc 0.125, mal loss 107.23903942108154, mal acc 0.15208333333333332
user 94, loss nan, acc 0.14583333333333334
user 1, loss nan, acc 0.08333333333333333
user 14, loss nan, acc 0.10416666666666667
user 44, loss nan, acc 0.020833333333333332
user 7, loss nan, acc 0.0625
user 11, loss nan, acc 0.125
user 81, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 62 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 63 |

user 82, loss nan, acc 0.125
user 48, loss nan, acc 0.10416666666666667
user 53, loss nan, acc 0.10416666666666667
user 77, loss nan, acc 0.0625
user 19, loss nan, acc 0.10416666666666667
user 15, loss nan, acc 0.0625
user 5, loss nan, acc 0.10416666666666667
user 83, loss nan, acc 0.125
user 88, loss nan, acc 0.08333333333333333
user 78, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 63 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 64 |

user 39, loss nan, acc 0.20833333333333334
Malcious user 29 is selected!
user 29, loss 2.2598761349916456, acc 0.14583333333333334, mal loss 107.23859357833862, mal acc 0.15208333333333332
user 19, loss nan, acc 0.10416666666666667
user 36, loss nan, acc 0.08333333333333333
user 16, loss nan, acc 0.08333333333333333
user 2, loss nan, acc 0.0625
user 51, loss nan, acc 0.14583333333333334
user 63, loss nan, acc 0.10416666666666667
user 71, loss nan, acc 0.125
user 11, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 64 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 65 |

user 30, loss nan, acc 0.041666666666666664
user 91, loss nan, acc 0.10416666666666667
user 74, loss nan, acc 0.10416666666666667
user 35, loss nan, acc 0.20833333333333334
Malcious user 10 is selected!
user 10, loss 2.2598250289758046, acc 0.125, mal loss 107.23688888549805, mal acc 0.15208333333333332
user 75, loss nan, acc 0.0625
user 66, loss nan, acc 0.14583333333333334
user 50, loss nan, acc 0.10416666666666667
user 11, loss nan, acc 0.125
user 8, loss nan, acc 0.14583333333333334
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 65 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 66 |

user 12, loss nan, acc 0.10416666666666667
user 28, loss nan, acc 0.125
user 89, loss nan, acc 0.0625
user 18, loss nan, acc 0.1875
user 86, loss nan, acc 0.0625
user 52, loss nan, acc 0.125
user 37, loss nan, acc 0.020833333333333332
user 5, loss nan, acc 0.10416666666666667
user 78, loss nan, acc 0.10416666666666667
user 85, loss nan, acc 0.14583333333333334
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 66 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 67 |

Malcious user 29 is selected!
user 29, loss 2.2598153412342072, acc 0.14583333333333334, mal loss 107.23632621765137, mal acc 0.15208333333333332
user 52, loss nan, acc 0.125
user 30, loss nan, acc 0.041666666666666664
user 59, loss nan, acc 0.041666666666666664
user 31, loss nan, acc 0.16666666666666666
user 95, loss nan, acc 0.10416666666666667
user 51, loss nan, acc 0.14583333333333334
user 79, loss nan, acc 0.0625
user 3, loss nan, acc 0.10416666666666667
user 92, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 67 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 68 |

user 53, loss nan, acc 0.10416666666666667
user 92, loss nan, acc 0.10416666666666667
user 1, loss nan, acc 0.08333333333333333
user 33, loss nan, acc 0.10416666666666667
user 2, loss nan, acc 0.0625
user 97, loss nan, acc 0.10416666666666667
user 86, loss nan, acc 0.0625
user 77, loss nan, acc 0.0625
user 20, loss nan, acc 0.10416666666666667
user 11, loss nan, acc 0.125
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 68 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 69 |

user 28, loss nan, acc 0.125
user 57, loss nan, acc 0.0625
user 78, loss nan, acc 0.10416666666666667
user 71, loss nan, acc 0.125
user 53, loss nan, acc 0.10416666666666667
user 11, loss nan, acc 0.125
user 42, loss nan, acc 0.20833333333333334
user 79, loss nan, acc 0.0625
user 95, loss nan, acc 0.10416666666666667
user 59, loss nan, acc 0.041666666666666664
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 69 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 70 |

user 43, loss nan, acc 0.16666666666666666
user 33, loss nan, acc 0.10416666666666667
user 45, loss nan, acc 0.08333333333333333
user 48, loss nan, acc 0.10416666666666667
user 19, loss nan, acc 0.10416666666666667
user 67, loss nan, acc 0.0625
user 82, loss nan, acc 0.125
user 92, loss nan, acc 0.10416666666666667
user 99, loss nan, acc 0.0625
user 27, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 70 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 71 |

user 3, loss nan, acc 0.10416666666666667
user 47, loss nan, acc 0.10416666666666667
user 2, loss nan, acc 0.0625
Malcious user 90 is selected!
user 90, loss 2.259878735244274, acc 0.14583333333333334, mal loss 107.23888397216797, mal acc 0.15208333333333332
user 59, loss nan, acc 0.041666666666666664
Malcious user 56 is selected!
user 56, loss 2.259810648858547, acc 0.08333333333333333, mal loss 107.23639726638794, mal acc 0.15208333333333332
user 48, loss nan, acc 0.10416666666666667
user 0, loss nan, acc 0.125
user 97, loss nan, acc 0.10416666666666667
user 23, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 71 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 72 |

/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 72%|███████▏  | 72/100 [12:57<05:07, 10.99s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 73%|███████▎  | 73/100 [13:07<04:49, 10.71s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 74%|███████▍  | 74/100 [13:18<04:41, 10.82s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 75%|███████▌  | 75/100 [13:29<04:31, 10.88s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 76%|███████▌  | 76/100 [13:39<04:16, 10.69s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 77%|███████▋  | 77/100 [13:50<04:08, 10.79s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 78%|███████▊  | 78/100 [14:01<03:59, 10.87s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 79%|███████▉  | 79/100 [14:12<03:44, 10.69s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 80%|████████  | 80/100 [14:22<03:34, 10.74s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 81%|████████  | 81/100 [14:34<03:28, 10.98s/it]user 77, loss nan, acc 0.0625
user 47, loss nan, acc 0.10416666666666667
user 96, loss nan, acc 0.0625
user 1, loss nan, acc 0.08333333333333333
user 94, loss nan, acc 0.14583333333333334
user 67, loss nan, acc 0.0625
user 37, loss nan, acc 0.020833333333333332
user 68, loss nan, acc 0.041666666666666664
user 16, loss nan, acc 0.08333333333333333
user 63, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 72 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 73 |

user 80, loss nan, acc 0.041666666666666664
user 75, loss nan, acc 0.0625
user 96, loss nan, acc 0.0625
user 18, loss nan, acc 0.1875
user 94, loss nan, acc 0.14583333333333334
user 86, loss nan, acc 0.0625
user 79, loss nan, acc 0.0625
user 84, loss nan, acc 0.0625
user 62, loss nan, acc 0.08333333333333333
user 65, loss nan, acc 0.125
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 73 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 74 |

user 4, loss nan, acc 0.10416666666666667
user 50, loss nan, acc 0.10416666666666667
Malcious user 29 is selected!
user 29, loss 2.259861356516679, acc 0.14583333333333334, mal loss 107.24062848091125, mal acc 0.15208333333333332
user 8, loss nan, acc 0.14583333333333334
user 34, loss nan, acc 0.0625
user 87, loss nan, acc 0.14583333333333334
user 98, loss nan, acc 0.125
user 36, loss nan, acc 0.08333333333333333
user 89, loss nan, acc 0.0625
user 77, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 74 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 75 |

user 5, loss nan, acc 0.10416666666666667
user 25, loss nan, acc 0.020833333333333332
user 72, loss nan, acc 0.10416666666666667
user 37, loss nan, acc 0.020833333333333332
user 97, loss nan, acc 0.10416666666666667
user 94, loss nan, acc 0.14583333333333334
user 0, loss nan, acc 0.125
Malcious user 29 is selected!
user 29, loss 2.2598560079932213, acc 0.14583333333333334, mal loss 107.23826622962952, mal acc 0.15208333333333332
user 69, loss nan, acc 0.041666666666666664
user 14, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 75 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 76 |

user 32, loss nan, acc 0.08333333333333333
user 80, loss nan, acc 0.041666666666666664
user 78, loss nan, acc 0.10416666666666667
user 0, loss nan, acc 0.125
user 68, loss nan, acc 0.041666666666666664
Malcious user 10 is selected!
user 10, loss 2.2598316038648285, acc 0.125, mal loss 107.23955869674683, mal acc 0.15208333333333332
user 62, loss nan, acc 0.08333333333333333
user 60, loss nan, acc 0.0625
user 22, loss nan, acc 0.10416666666666667
user 77, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 76 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 77 |

user 97, loss nan, acc 0.10416666666666667
user 87, loss nan, acc 0.14583333333333334
user 89, loss nan, acc 0.0625
user 52, loss nan, acc 0.125
user 48, loss nan, acc 0.10416666666666667
user 78, loss nan, acc 0.10416666666666667
user 36, loss nan, acc 0.08333333333333333
user 47, loss nan, acc 0.10416666666666667
user 35, loss nan, acc 0.20833333333333334
user 13, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 77 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 78 |

user 47, loss nan, acc 0.10416666666666667
user 18, loss nan, acc 0.1875
user 1, loss nan, acc 0.08333333333333333
user 76, loss nan, acc 0.10416666666666667
user 62, loss nan, acc 0.08333333333333333
user 72, loss nan, acc 0.10416666666666667
user 50, loss nan, acc 0.10416666666666667
user 6, loss nan, acc 0.08333333333333333
user 8, loss nan, acc 0.14583333333333334
Malcious user 61 is selected!
user 61, loss 2.259899329642455, acc 0.041666666666666664, mal loss 107.23922610282898, mal acc 0.15208333333333332
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 78 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 79 |

user 25, loss nan, acc 0.020833333333333332
user 68, loss nan, acc 0.041666666666666664
Malcious user 40 is selected!
user 40, loss 2.259861300885677, acc 0.10416666666666667, mal loss 107.23606586456299, mal acc 0.15208333333333332
user 64, loss nan, acc 0.1875
user 57, loss nan, acc 0.0625
user 32, loss nan, acc 0.08333333333333333
user 38, loss nan, acc 0.16666666666666666
user 6, loss nan, acc 0.08333333333333333
user 78, loss nan, acc 0.10416666666666667
user 99, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 79 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 80 |

user 51, loss nan, acc 0.14583333333333334
user 57, loss nan, acc 0.0625
Malcious user 55 is selected!
user 55, loss 2.2598578820625943, acc 0.14583333333333334, mal loss 107.23839926719666, mal acc 0.15208333333333332
user 28, loss nan, acc 0.125
user 76, loss nan, acc 0.10416666666666667
user 45, loss nan, acc 0.08333333333333333
user 71, loss nan, acc 0.125
user 95, loss nan, acc 0.10416666666666667
user 13, loss nan, acc 0.0625
user 48, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 80 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 81 |

user 4, loss nan, acc 0.10416666666666667
Malcious user 29 is selected!
user 29, loss 2.2598345374067623, acc 0.14583333333333334, mal loss 107.23672199249268, mal acc 0.15208333333333332
user 51, loss nan, acc 0.14583333333333334
user 68, loss nan, acc 0.041666666666666664
user 69, loss nan, acc 0.041666666666666664
user 80, loss nan, acc 0.041666666666666664
user 0, loss nan, acc 0.125
user 42, loss nan, acc 0.20833333333333334
user 66, loss nan, acc 0.14583333333333334
user 39, loss nan, acc 0.20833333333333334
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 81 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 82 |

user 96, loss nan, acc 0.0625
user 88, loss nan, acc 0.08333333333333333
user 35, loss nan, acc 0.20833333333333334
Malcious user 70 is selected!
user 70, loss 2.259790378808975, acc 0.10416666666666667, mal loss 107.23514699935913, mal acc 0.15208333333333332
user 91, loss nan, acc 0.10416666666666667
user 16, loss nan, acc 0.08333333333333333
user 87, loss nan, acc 0.14583333333333334
user 28, loss nan, acc 0.125
user 75, loss nan, acc 0.0625
user 48, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 82%|████████▏ | 82/100 [14:44<03:14, 10.81s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 83%|████████▎ | 83/100 [14:56<03:06, 10.96s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 84%|████████▍ | 84/100 [15:07<02:56, 11.00s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 85%|████████▌ | 85/100 [15:17<02:41, 10.76s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 86%|████████▌ | 86/100 [15:28<02:30, 10.74s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 87%|████████▋ | 87/100 [15:39<02:20, 10.80s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 88%|████████▊ | 88/100 [15:49<02:08, 10.67s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 89%|████████▉ | 89/100 [16:00<01:59, 10.86s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 90%|█████████ | 90/100 [16:11<01:48, 10.83s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 91%|█████████ | 91/100 [16:21<01:34, 10.55s/it] 
Avg Training Stats after 82 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 83 |

user 15, loss nan, acc 0.0625
user 4, loss nan, acc 0.10416666666666667
user 81, loss nan, acc 0.125
user 98, loss nan, acc 0.125
user 3, loss nan, acc 0.10416666666666667
user 50, loss nan, acc 0.10416666666666667
Malcious user 29 is selected!
user 29, loss 2.2598372265696525, acc 0.14583333333333334, mal loss 107.23808526992798, mal acc 0.15208333333333332
user 16, loss nan, acc 0.08333333333333333
user 51, loss nan, acc 0.14583333333333334
Malcious user 26 is selected!
user 26, loss 2.2598281994462015, acc 0.041666666666666664, mal loss 107.23893427848816, mal acc 0.15208333333333332
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 83 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 84 |

user 48, loss nan, acc 0.10416666666666667
user 41, loss nan, acc 0.10416666666666667
user 64, loss nan, acc 0.1875
user 16, loss nan, acc 0.08333333333333333
user 34, loss nan, acc 0.0625
Malcious user 40 is selected!
user 40, loss 2.25981845309337, acc 0.10416666666666667, mal loss 107.23671746253967, mal acc 0.15208333333333332
user 84, loss nan, acc 0.0625
Malcious user 26 is selected!
user 26, loss 2.259799040357272, acc 0.041666666666666664, mal loss 107.23799443244934, mal acc 0.15208333333333332
user 2, loss nan, acc 0.0625
user 17, loss nan, acc 0.14583333333333334
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 84 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 85 |

user 30, loss nan, acc 0.041666666666666664
user 1, loss nan, acc 0.08333333333333333
user 53, loss nan, acc 0.10416666666666667
user 42, loss nan, acc 0.20833333333333334
user 43, loss nan, acc 0.16666666666666666
user 69, loss nan, acc 0.041666666666666664
user 36, loss nan, acc 0.08333333333333333
user 88, loss nan, acc 0.08333333333333333
user 7, loss nan, acc 0.0625
user 24, loss nan, acc 0.125
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 85 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 86 |

user 77, loss nan, acc 0.0625
user 6, loss nan, acc 0.08333333333333333
user 95, loss nan, acc 0.10416666666666667
user 69, loss nan, acc 0.041666666666666664
user 98, loss nan, acc 0.125
user 33, loss nan, acc 0.10416666666666667
user 43, loss nan, acc 0.16666666666666666
user 14, loss nan, acc 0.10416666666666667
user 66, loss nan, acc 0.14583333333333334
Malcious user 70 is selected!
user 70, loss 2.25982447018226, acc 0.10416666666666667, mal loss 107.24114966392517, mal acc 0.15208333333333332
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 86 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 87 |

Malcious user 46 is selected!
user 46, loss 2.2598404477039975, acc 0.125, mal loss 107.23904371261597, mal acc 0.15208333333333332
user 51, loss nan, acc 0.14583333333333334
user 1, loss nan, acc 0.08333333333333333
user 6, loss nan, acc 0.08333333333333333
user 49, loss nan, acc 0.10416666666666667
user 15, loss nan, acc 0.0625
user 67, loss nan, acc 0.0625
user 32, loss nan, acc 0.08333333333333333
user 38, loss nan, acc 0.16666666666666666
user 34, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 87 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 88 |

user 50, loss nan, acc 0.10416666666666667
user 47, loss nan, acc 0.10416666666666667
user 17, loss nan, acc 0.14583333333333334
user 95, loss nan, acc 0.10416666666666667
user 20, loss nan, acc 0.10416666666666667
user 82, loss nan, acc 0.125
Malcious user 56 is selected!
user 56, loss 2.2598220924536387, acc 0.08333333333333333, mal loss 107.23285436630249, mal acc 0.15208333333333332
user 65, loss nan, acc 0.125
user 49, loss nan, acc 0.10416666666666667
Malcious user 10 is selected!
user 10, loss 2.2598827968041104, acc 0.125, mal loss 107.23996615409851, mal acc 0.15208333333333332
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 88 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 89 |

user 4, loss nan, acc 0.10416666666666667
Malcious user 29 is selected!
user 29, loss 2.2598555102944373, acc 0.14583333333333334, mal loss 107.2422251701355, mal acc 0.15208333333333332
user 50, loss nan, acc 0.10416666666666667
user 94, loss nan, acc 0.14583333333333334
user 57, loss nan, acc 0.0625
user 14, loss nan, acc 0.10416666666666667
user 54, loss nan, acc 0.0625
user 21, loss nan, acc 0.0625
user 53, loss nan, acc 0.10416666666666667
Malcious user 55 is selected!
user 55, loss 2.2598808909455936, acc 0.14583333333333334, mal loss 107.23920273780823, mal acc 0.15208333333333332
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 89 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 90 |

user 81, loss nan, acc 0.125
user 67, loss nan, acc 0.0625
user 58, loss nan, acc 0.041666666666666664
user 87, loss nan, acc 0.14583333333333334
user 35, loss nan, acc 0.20833333333333334
user 74, loss nan, acc 0.10416666666666667
user 3, loss nan, acc 0.10416666666666667
Malcious user 90 is selected!
user 90, loss 2.2598613391319913, acc 0.14583333333333334, mal loss 107.23612236976624, mal acc 0.15208333333333332
user 49, loss nan, acc 0.10416666666666667
user 50, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 90 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 91 |

user 65, loss nan, acc 0.125
user 49, loss nan, acc 0.10416666666666667
user 18, loss nan, acc 0.1875
user 4, loss nan, acc 0.10416666666666667
user 77, loss nan, acc 0.0625
user 6, loss nan, acc 0.08333333333333333
user 63, loss nan, acc 0.10416666666666667
user 47, loss nan, acc 0.10416666666666667
Malcious user 55 is selected!
user 55, loss 2.2598377202947937, acc 0.14583333333333334, mal loss 107.24083495140076, mal acc 0.15208333333333332
user 24, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 91 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 92 |

user 39, loss nan, acc 0.20833333333333334
user 69, loss nan, acc 0.041666666666666664
Malcious user 26 is selected!
user 26, loss 2.25982202142477, acc 0.041666666666666664, mal loss 107.23393607139587, mal acc 0.15208333333333332
user 72, loss nan, acc 0.10416666666666667
user 74, loss nan, acc 0.10416666666666667
user 76, loss nan, acc 0.10416666666666667
user 71, loss nan, acc 0.125
Malcious user 46 is selected!
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 92%|█████████▏| 92/100 [16:32<01:25, 10.74s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 93%|█████████▎| 93/100 [16:43<01:15, 10.81s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 94%|█████████▍| 94/100 [16:54<01:04, 10.74s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 95%|█████████▌| 95/100 [17:05<00:54, 10.83s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 96%|█████████▌| 96/100 [17:16<00:44, 11.01s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 97%|█████████▋| 97/100 [17:26<00:32, 10.81s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 98%|█████████▊| 98/100 [17:38<00:21, 10.97s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 99%|█████████▉| 99/100 [17:48<00:10, 10.77s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
100%|██████████| 100/100 [17:59<00:00, 10.87s/it]100%|██████████| 100/100 [17:59<00:00, 10.80s/it]
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
user 46, loss 2.259805682301521, acc 0.125, mal loss 107.23910760879517, mal acc 0.15208333333333332
user 82, loss nan, acc 0.125
user 20, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 92 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 93 |

user 34, loss nan, acc 0.0625
user 92, loss nan, acc 0.10416666666666667
user 95, loss nan, acc 0.10416666666666667
user 0, loss nan, acc 0.125
user 62, loss nan, acc 0.08333333333333333
Malcious user 70 is selected!
user 70, loss 2.2598541473348934, acc 0.10416666666666667, mal loss 107.23940324783325, mal acc 0.15208333333333332
user 11, loss nan, acc 0.125
user 78, loss nan, acc 0.10416666666666667
user 88, loss nan, acc 0.08333333333333333
user 20, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 93 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 94 |

user 57, loss nan, acc 0.0625
Malcious user 70 is selected!
user 70, loss 2.2598793894052505, acc 0.10416666666666667, mal loss 107.24070954322815, mal acc 0.15208333333333332
user 84, loss nan, acc 0.0625
Malcious user 29 is selected!
user 29, loss 2.259806304673354, acc 0.14583333333333334, mal loss 107.24036192893982, mal acc 0.15208333333333332
user 77, loss nan, acc 0.0625
user 85, loss nan, acc 0.14583333333333334
user 52, loss nan, acc 0.125
user 73, loss nan, acc 0.020833333333333332
user 69, loss nan, acc 0.041666666666666664
user 45, loss nan, acc 0.08333333333333333
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 94 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 95 |

user 91, loss nan, acc 0.10416666666666667
user 99, loss nan, acc 0.0625
user 52, loss nan, acc 0.125
user 14, loss nan, acc 0.10416666666666667
user 83, loss nan, acc 0.125
user 69, loss nan, acc 0.041666666666666664
Malcious user 29 is selected!
user 29, loss 2.2598373199502624, acc 0.14583333333333334, mal loss 107.24121308326721, mal acc 0.15208333333333332
user 22, loss nan, acc 0.10416666666666667
user 2, loss nan, acc 0.0625
user 28, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 95 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 96 |

user 84, loss nan, acc 0.0625
user 21, loss nan, acc 0.0625
user 74, loss nan, acc 0.10416666666666667
user 37, loss nan, acc 0.020833333333333332
user 91, loss nan, acc 0.10416666666666667
user 62, loss nan, acc 0.08333333333333333
Malcious user 70 is selected!
user 70, loss 2.2597165261705716, acc 0.10416666666666667, mal loss 107.23830676078796, mal acc 0.15208333333333332
user 48, loss nan, acc 0.10416666666666667
user 54, loss nan, acc 0.0625
Malcious user 61 is selected!
user 61, loss 2.2598456367850304, acc 0.041666666666666664, mal loss 107.23515844345093, mal acc 0.15208333333333332
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 96 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 97 |

user 66, loss nan, acc 0.14583333333333334
user 88, loss nan, acc 0.08333333333333333
user 57, loss nan, acc 0.0625
Malcious user 55 is selected!
user 55, loss 2.2597919632991155, acc 0.14583333333333334, mal loss 107.23865389823914, mal acc 0.15208333333333332
user 91, loss nan, acc 0.10416666666666667
user 30, loss nan, acc 0.041666666666666664
user 21, loss nan, acc 0.0625
user 25, loss nan, acc 0.020833333333333332
Malcious user 29 is selected!
user 29, loss 2.25982090930144, acc 0.14583333333333334, mal loss 107.24051713943481, mal acc 0.15208333333333332
user 54, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 97 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 98 |

user 75, loss nan, acc 0.0625
user 92, loss nan, acc 0.10416666666666667
user 7, loss nan, acc 0.0625
user 14, loss nan, acc 0.10416666666666667
Malcious user 56 is selected!
user 56, loss 2.259826737145583, acc 0.08333333333333333, mal loss 107.23620319366455, mal acc 0.15208333333333332
user 95, loss nan, acc 0.10416666666666667
user 94, loss nan, acc 0.14583333333333334
user 21, loss nan, acc 0.0625
user 82, loss nan, acc 0.125
Malcious user 55 is selected!
user 55, loss 2.259792485833168, acc 0.14583333333333334, mal loss 107.23396730422974, mal acc 0.15208333333333332
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 98 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 99 |

user 51, loss nan, acc 0.14583333333333334
user 12, loss nan, acc 0.10416666666666667
user 75, loss nan, acc 0.0625
user 33, loss nan, acc 0.10416666666666667
user 58, loss nan, acc 0.041666666666666664
user 79, loss nan, acc 0.0625
user 63, loss nan, acc 0.10416666666666667
user 0, loss nan, acc 0.125
Malcious user 70 is selected!
user 70, loss 2.2597681964437166, acc 0.10416666666666667, mal loss 107.23392844200134, mal acc 0.15208333333333332
user 52, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 99 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 100 |

Malcious user 90 is selected!
user 90, loss 2.2598503112792967, acc 0.14583333333333334, mal loss 107.23799872398376, mal acc 0.15208333333333332
user 17, loss nan, acc 0.14583333333333334
user 54, loss nan, acc 0.0625
user 65, loss nan, acc 0.125
user 21, loss nan, acc 0.0625
user 87, loss nan, acc 0.14583333333333334
user 30, loss nan, acc 0.041666666666666664
user 15, loss nan, acc 0.0625
user 49, loss nan, acc 0.10416666666666667
Malcious user 10 is selected!
user 10, loss 2.2597971017162006, acc 0.125, mal loss 107.23676443099976, mal acc 0.15208333333333332
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 100 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 5.05% 

Global model Malicious Accuracy: 4.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])

 
 Results after 100 global rounds of training:
|---- Test Accuracy: 5.05%

 Total Run Time: 1080.9123
Running fedavg.py with --dataset=mnist --label_tampering=none --weight_tampering=random

Experimental details:
    Model     : cnn
    Optimizer : sgd
    Learning  : 0.01
    Global Rounds   : 100

    Federated parameters:
    IID
    Fraction of users  : 0.1
    Local Batch size   : 10
    Local Epochs       : 10

CNNMnist(
  (conv1): Conv2d(1, 10, kernel_size=(5, 5), stride=(1, 1))
  (conv2): Conv2d(10, 20, kernel_size=(5, 5), stride=(1, 1))
  (conv2_drop): Dropout2d(p=0.5, inplace=False)
  (fc1): Linear(in_features=320, out_features=50, bias=True)
  (fc2): Linear(in_features=50, out_features=10, bias=True)
)
[4645 6262 9534 4844 9414 8545 5412 9820 6903 7499 6311 9219 7837 2984
 2488 5441 9145 7852 3536 3672 7895   47 3592 2291 5103 7365  951 6039
 5706 1261 5384 5563  827 5271 5408 2291 8082 3723 6206 4459 2857 7587
 5425 1230 9733 1662  851 6061 8506 3071 3524 4809 9144 7018 6360 4651
 9826 6157  732  453 3360 6232 8924 3800 2870 3376 2390  965 6641 1244
 1501 6834 7521 1420 6514 9325 7960 4454 1551 6838 2121 6359 3102 5679
 6495 6699  161 1858 4017 7183 3072 6998 4389 5466 9150  190 5598 2883
 9051 6283 2154 2651 8879 1392 5567 4391 2243 3411 6517 8391 8724 3293
 4652 3268  544 7388 2300 7267 2210 2954 4928 3267 7491 8669 2209 5559
 5775 8269  763 8677 7069 6618 4300 4873 3508  868 5957 8556 6344 2606
 1413 8812 5578 6694  250 3219 4361 5951 7839 4370 5851 2674 9187 4996
 6009 2899 5516 5743 8608 8632 7704 4606 3399 7013  526 2916  803 5281
 4391 7285 1725 3286 5708   76 5071 8071 2782 7488 1545 8963 2552 1485
 1192 1869 6358 4701 7351 8803 4075 8774 2362 6269 9090 8309 2415 9069
 3987 8494   46 3275 8012 2319 9337 4312 4073 9279 7502 1495 7221 1245
 5483 8736  684  260 3294 3595 6187 7444 2914 2306 5105 4237 3233 8004
 9342 2611 6922 9013  416 2848 6256 7843 8559 2273 1807 5407 9238 5431
 2067 1892 3515 9300 4714 1338 5291 3435 5595 7065 1914 5130 7925 8724
  955 8342 6945 7369 9182 5895  484 2087 7565 4704  830 9167 2202 7953
 8347 6045 3463 6032 6677 6479 5453 4107 3815 5540 9630 8299 8116 3192
  972 6543 4740 2955 4942 6623  187 1140 6673  504 2291 9016 9406  948
 1337 4436  484 3430 7657  350 7008 9211 5717 9461 4922 2489 2183 1812
 7732 4843 2738 8214 7455 4885 1960 7395 9657 1899 2696 8400 2804 1747
 7628 9694 5676 9759 8570 6478 3901 4908 3433  595 9474 1409 6210 2325
 6043 5911 8333 2163 6598 8937 4125 4947 3786 7689 5313 1668  437  147
 6922 4036 8135 1784 5952 7563 6735 2993  710 3756 5439  551 5120 8044
 9262 1749 2678 6421 4863 7014 7243 8622 4981 6659 7245 9621  380 8023
 1708 4658 7416 1823 9761 2257 5968 8522 2203 7934  948 4438 4028 8222
 5736 7386 8386 3318  829 9692 3831 2283 2931 7809 9517 8727  730 1378
 1108  904 3922 6162 2635  909 8224 7942 1373 4715 6857 5830 9817 7300
 8453  933 2945 5660 1193 5478 6400 1138 6394 5945 7152 2140 8822 9638
 8212 5928  585 3106 9289 7048 1629 5385 6915 9416 8567 3043 7887 8470
 9797 5086 2446 3746 1250 1225 7242 4335 7045 9461 4259 9133 1618 1095
 4659 4190  182 3490 1465 7117 1869 1161  414 7901 4236 7540 5723 1379
 9636  292 1464 8286]
malcious dataset true labels: [6, 1, 6, 2, 0, 9, 6, 6, 9, 5, 9, 1, 4, 2, 7, 0, 6, 1, 7, 5, 0, 3, 2, 1, 9, 5, 9, 5, 1, 3, 1, 0, 9, 5, 4, 1, 0, 6, 2, 7, 5, 1, 1, 6, 1, 3, 7, 2, 1, 3, 7, 6, 9, 4, 1, 1, 0, 2, 0, 5, 7, 4, 6, 0, 2, 3, 8, 7, 0, 0, 9, 1, 1, 6, 6, 5, 9, 7, 5, 6, 6, 1, 1, 0, 4, 2, 7, 7, 6, 4, 8, 2, 3, 6, 4, 3, 1, 0, 1, 1, 0, 2, 4, 8, 9, 1, 6, 1, 2, 4, 1, 9, 3, 1, 4, 5, 4, 6, 8, 2, 6, 5, 1, 2, 2, 5, 1, 9, 0, 9, 0, 6, 2, 3, 1, 1, 2, 4, 6, 3, 2, 1, 0, 2, 8, 6, 6, 0, 6, 6, 5, 7, 2, 5, 0, 1, 5, 9, 0, 4, 0, 4, 8, 1, 0, 2, 2, 0, 1, 6, 7, 1, 6, 7, 9, 9, 8, 6, 9, 2, 8, 5, 2, 7, 9, 2, 2, 1, 7, 9, 8, 1, 0, 6, 0, 9, 1, 4, 3, 1, 0, 9, 9, 5, 7, 1, 9, 8, 5, 9, 4, 9, 4, 0, 3, 2, 4, 2, 5, 0, 5, 0, 6, 1, 6, 8, 4, 2, 9, 3, 9, 0, 4, 6, 9, 1, 0, 2, 6, 6, 6, 9, 4, 2, 1, 9, 4, 2, 9, 0, 1, 1, 3, 0, 6, 9, 4, 9, 4, 0, 2, 9, 3, 9, 4, 6, 6, 5, 4, 2, 0, 1, 6, 4, 9, 2, 1, 6, 6, 9, 7, 2, 4, 5, 8, 1, 8, 6, 4, 2, 1, 2, 2, 8, 4, 6, 4, 4, 0, 9, 5, 4, 0, 4, 3, 7, 9, 2, 9, 1, 5, 4, 1, 4, 2, 0, 2, 6, 9, 4, 5, 0, 1, 2, 6, 5, 1, 9, 8, 5, 8, 1, 2, 7, 6, 2, 6, 1, 5, 5, 1, 5, 9, 8, 1, 0, 0, 0, 9, 8, 4, 3, 5, 1, 0, 6, 5, 6, 8, 2, 5, 1, 0, 6, 4, 7, 3, 0, 3, 2, 1, 6, 4, 2, 1, 0, 3, 2, 5, 4, 9, 0, 6, 7, 6, 0, 2, 6, 8, 7, 1, 1, 2, 4, 0, 3, 6, 4, 4, 3, 2, 0, 9, 4, 3, 9, 9, 0, 0, 0, 0, 5, 2, 0, 6, 6, 1, 9, 9, 2, 0, 3, 2, 1, 2, 2, 0, 4, 4, 5, 2, 1, 6, 6, 0, 0, 2, 6, 5, 4, 8, 1, 0, 4, 2, 2, 0, 9, 9, 8, 9, 8, 5, 5, 2, 8, 4, 4, 3, 6, 3, 4, 3, 1, 0, 1, 0, 2, 7, 2, 6, 1, 5, 4, 0, 1, 6, 8, 0, 5], malicious labels: [6, 1, 6, 2, 0, 9, 6, 6, 9, 5, 9, 1, 4, 2, 7, 0, 6, 1, 7, 5, 0, 3, 2, 1, 9, 5, 9, 5, 1, 3, 1, 0, 9, 5, 4, 1, 0, 6, 2, 7, 5, 1, 1, 6, 1, 3, 7, 2, 1, 3, 7, 6, 9, 4, 1, 1, 0, 2, 0, 5, 7, 4, 6, 0, 2, 3, 8, 7, 0, 0, 9, 1, 1, 6, 6, 5, 9, 7, 5, 6, 6, 1, 1, 0, 4, 2, 7, 7, 6, 4, 8, 2, 3, 6, 4, 3, 1, 0, 1, 1, 0, 2, 4, 8, 9, 1, 6, 1, 2, 4, 1, 9, 3, 1, 4, 5, 4, 6, 8, 2, 6, 5, 1, 2, 2, 5, 1, 9, 0, 9, 0, 6, 2, 3, 1, 1, 2, 4, 6, 3, 2, 1, 0, 2, 8, 6, 6, 0, 6, 6, 5, 7, 2, 5, 0, 1, 5, 9, 0, 4, 0, 4, 8, 1, 0, 2, 2, 0, 1, 6, 7, 1, 6, 7, 9, 9, 8, 6, 9, 2, 8, 5, 2, 7, 9, 2, 2, 1, 7, 9, 8, 1, 0, 6, 0, 9, 1, 4, 3, 1, 0, 9, 9, 5, 7, 1, 9, 8, 5, 9, 4, 9, 4, 0, 3, 2, 4, 2, 5, 0, 5, 0, 6, 1, 6, 8, 4, 2, 9, 3, 9, 0, 4, 6, 9, 1, 0, 2, 6, 6, 6, 9, 4, 2, 1, 9, 4, 2, 9, 0, 1, 1, 3, 0, 6, 9, 4, 9, 4, 0, 2, 9, 3, 9, 4, 6, 6, 5, 4, 2, 0, 1, 6, 4, 9, 2, 1, 6, 6, 9, 7, 2, 4, 5, 8, 1, 8, 6, 4, 2, 1, 2, 2, 8, 4, 6, 4, 4, 0, 9, 5, 4, 0, 4, 3, 7, 9, 2, 9, 1, 5, 4, 1, 4, 2, 0, 2, 6, 9, 4, 5, 0, 1, 2, 6, 5, 1, 9, 8, 5, 8, 1, 2, 7, 6, 2, 6, 1, 5, 5, 1, 5, 9, 8, 1, 0, 0, 0, 9, 8, 4, 3, 5, 1, 0, 6, 5, 6, 8, 2, 5, 1, 0, 6, 4, 7, 3, 0, 3, 2, 1, 6, 4, 2, 1, 0, 3, 2, 5, 4, 9, 0, 6, 7, 6, 0, 2, 6, 8, 7, 1, 1, 2, 4, 0, 3, 6, 4, 4, 3, 2, 0, 9, 4, 3, 9, 9, 0, 0, 0, 0, 5, 2, 0, 6, 6, 1, 9, 9, 2, 0, 3, 2, 1, 2, 2, 0, 4, 4, 5, 2, 1, 6, 6, 0, 0, 2, 6, 5, 4, 8, 1, 0, 4, 2, 2, 0, 9, 9, 8, 9, 8, 5, 5, 2, 8, 4, 4, 3, 6, 3, 4, 3, 1, 0, 1, 0, 2, 7, 2, 6, 1, 5, 4, 0, 1, 6, 8, 0, 5]
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:11<18:16, 11.07s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  2%|▏         | 2/100 [00:21<17:33, 10.75s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  3%|▎         | 3/100 [00:32<17:33, 10.86s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  4%|▍         | 4/100 [00:44<17:45, 11.10s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  5%|▌         | 5/100 [00:54<16:56, 10.70s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  6%|▌         | 6/100 [01:04<16:48, 10.73s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  7%|▋         | 7/100 [01:15<16:50, 10.87s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  8%|▊         | 8/100 [01:25<16:13, 10.59s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  9%|▉         | 9/100 [01:37<16:20, 10.78s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 10%|█         | 10/100 [01:48<16:25, 10.95s/it]
 | Global Training Round : 1 |

user 87, loss 1.2260861042791453, acc 0.8541666666666666
user 74, loss 1.227921973235714, acc 0.8333333333333334
user 64, loss 1.3113758216492641, acc 0.875
user 88, loss 1.2771213462910591, acc 0.8958333333333334
user 98, loss 1.2469772749556562, acc 0.7708333333333334
user 43, loss 1.258066926896572, acc 0.8541666666666666
user 75, loss 1.203528655282198, acc 0.9166666666666666
user 50, loss 1.2265350936386639, acc 0.8958333333333334
user 27, loss 1.195754096456445, acc 0.7708333333333334
user 76, loss 1.285430463212423, acc 1.0
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 1 global rounds:
Training Loss : 1.2458797755897142
Global model Benign Test Accuracy: 90.91% 

Global model Malicious Accuracy: 91.88%, Malicious Loss: 1596.82 , Outputs: tensor([0.1863, 0.1794, 0.1993, 0.1866, 0.1797, 0.1801, 0.2077, 0.1887, 0.1834,
        0.1719])


 | Global Training Round : 2 |

user 70, loss 0.2784195705853143, acc 0.7708333333333334
user 46, loss 0.29746951105980535, acc 0.9791666666666666
user 17, loss 0.31058625112323524, acc 0.8958333333333334
user 6, loss 0.31122332064506525, acc 0.9375
user 7, loss 0.30964811570369283, acc 0.8541666666666666
Malcious user 93 is selected!
user 93, loss 42041993.301689394, acc 0.14583333333333334, mal loss 108.40348315238953, mal acc 0.14375
user 89, loss 0.29634360870352394, acc 0.8541666666666666
user 55, loss 0.2978701366386257, acc 0.9375
user 3, loss 0.2811547443285608, acc 0.8958333333333334
user 57, loss 0.30888743743133273, acc 0.9166666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 2 global rounds:
Training Loss : 2102100.4226044924
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 3 |

user 32, loss nan, acc 0.08333333333333333
user 31, loss nan, acc 0.16666666666666666
user 44, loss nan, acc 0.020833333333333332
user 50, loss nan, acc 0.10416666666666667
user 33, loss nan, acc 0.10416666666666667
user 79, loss nan, acc 0.0625
user 55, loss nan, acc 0.08333333333333333
user 67, loss nan, acc 0.0625
user 89, loss nan, acc 0.0625
user 54, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 3 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 4 |

user 63, loss nan, acc 0.10416666666666667
user 92, loss nan, acc 0.10416666666666667
Malcious user 94 is selected!
user 94, loss 2831.749295086662, acc 0.14583333333333334, mal loss 108.4555504322052, mal acc 0.13333333333333333
user 16, loss nan, acc 0.08333333333333333
user 52, loss nan, acc 0.125
user 0, loss nan, acc 0.125
user 37, loss nan, acc 0.020833333333333332
Malcious user 81 is selected!
user 81, loss 2736.183454927802, acc 0.10416666666666667, mal loss 107.97281551361084, mal acc 0.13125
user 73, loss nan, acc 0.020833333333333332
user 17, loss nan, acc 0.14583333333333334
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 4 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 5 |

user 67, loss nan, acc 0.0625
user 25, loss nan, acc 0.020833333333333332
user 52, loss nan, acc 0.125
user 34, loss nan, acc 0.0625
user 9, loss nan, acc 0.0625
user 54, loss nan, acc 0.0625
user 14, loss nan, acc 0.10416666666666667
user 18, loss nan, acc 0.1875
user 7, loss nan, acc 0.0625
user 27, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 5 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 6 |

user 27, loss nan, acc 0.10416666666666667
user 59, loss nan, acc 0.041666666666666664
user 0, loss nan, acc 0.125
user 99, loss nan, acc 0.0625
user 11, loss nan, acc 0.125
user 56, loss nan, acc 0.0625
Malcious user 94 is selected!
user 94, loss 4935.8997243215645, acc 0.0625, mal loss 108.00605630874634, mal acc 0.14375
user 61, loss nan, acc 0.10416666666666667
user 24, loss nan, acc 0.125
user 76, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 6 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 7 |

user 8, loss nan, acc 0.14583333333333334
user 97, loss nan, acc 0.10416666666666667
user 75, loss nan, acc 0.0625
user 77, loss nan, acc 0.0625
user 1, loss nan, acc 0.08333333333333333
user 20, loss nan, acc 0.10416666666666667
user 55, loss nan, acc 0.08333333333333333
user 37, loss nan, acc 0.020833333333333332
user 45, loss nan, acc 0.08333333333333333
Malcious user 49 is selected!
user 49, loss 1755.1548198968171, acc 0.10416666666666667, mal loss 108.07140064239502, mal acc 0.13333333333333333
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 7 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 8 |

user 32, loss nan, acc 0.08333333333333333
user 88, loss nan, acc 0.08333333333333333
user 1, loss nan, acc 0.08333333333333333
user 83, loss nan, acc 0.125
user 86, loss nan, acc 0.0625
user 13, loss nan, acc 0.0625
user 61, loss nan, acc 0.10416666666666667
user 16, loss nan, acc 0.08333333333333333
user 38, loss nan, acc 0.16666666666666666
user 99, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 8 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 9 |

user 54, loss nan, acc 0.0625
user 74, loss nan, acc 0.10416666666666667
Malcious user 96 is selected!
user 96, loss 100095.06606636544, acc 0.041666666666666664, mal loss 108.34593105316162, mal acc 0.12916666666666668
user 33, loss nan, acc 0.10416666666666667
Malcious user 62 is selected!
user 62, loss 72847.42886075526, acc 0.16666666666666666, mal loss 108.4779281616211, mal acc 0.14375
Malcious user 49 is selected!
user 49, loss 2045.839774094522, acc 0.10416666666666667, mal loss 108.57867288589478, mal acc 0.13333333333333333
user 20, loss nan, acc 0.10416666666666667
user 14, loss nan, acc 0.10416666666666667
user 53, loss nan, acc 0.10416666666666667
user 29, loss nan, acc 0.08333333333333333
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 9 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 10 |

user 13, loss nan, acc 0.0625
user 67, loss nan, acc 0.0625
user 37, loss nan, acc 0.020833333333333332
user 60, loss nan, acc 0.0625
user 32, loss nan, acc 0.08333333333333333
user 18, loss nan, acc 0.1875
user 90, loss nan, acc 0.0625
user 99, loss nan, acc 0.0625
Malcious user 72 is selected!
user 72, loss 17038857.814899337, acc 0.20833333333333334, mal loss 108.070805311203, mal acc 0.14375
user 57, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 10 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 11 |

user 30, loss nan, acc 0.041666666666666664
user 15, loss nan, acc 0.0625
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 11%|█         | 11/100 [01:58<15:59, 10.78s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 12%|█▏        | 12/100 [02:10<16:07, 11.00s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 13%|█▎        | 13/100 [02:21<16:00, 11.04s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 14%|█▍        | 14/100 [02:32<15:39, 10.92s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 15%|█▌        | 15/100 [02:42<15:25, 10.89s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 16%|█▌        | 16/100 [02:53<14:56, 10.67s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 17%|█▋        | 17/100 [03:03<14:47, 10.69s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 18%|█▊        | 18/100 [03:14<14:39, 10.73s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 19%|█▉        | 19/100 [03:24<14:11, 10.52s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 20%|██        | 20/100 [03:36<14:22, 10.78s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 21%|██        | 21/100 [03:46<14:11, 10.78s/it]user 73, loss nan, acc 0.020833333333333332
user 45, loss nan, acc 0.08333333333333333
user 34, loss nan, acc 0.0625
user 71, loss nan, acc 0.125
user 60, loss nan, acc 0.0625
user 61, loss nan, acc 0.10416666666666667
user 78, loss nan, acc 0.10416666666666667
user 25, loss nan, acc 0.020833333333333332
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 11 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 12 |

Malcious user 93 is selected!
user 93, loss 6466999.285661505, acc 0.14583333333333334, mal loss 108.42575979232788, mal acc 0.14375
user 54, loss nan, acc 0.0625
user 44, loss nan, acc 0.020833333333333332
Malcious user 81 is selected!
user 81, loss 7295.022123679519, acc 0.08333333333333333, mal loss 108.18670010566711, mal acc 0.14375
user 28, loss nan, acc 0.125
user 75, loss nan, acc 0.0625
user 71, loss nan, acc 0.125
user 36, loss nan, acc 0.08333333333333333
user 60, loss nan, acc 0.0625
user 76, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 12 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 13 |

Malcious user 95 is selected!
user 95, loss 1890.0224608942867, acc 0.10416666666666667, mal loss 107.80124759674072, mal acc 0.13333333333333333
user 55, loss nan, acc 0.08333333333333333
user 52, loss nan, acc 0.125
user 12, loss nan, acc 0.10416666666666667
user 64, loss nan, acc 0.1875
user 70, loss nan, acc 0.125
user 34, loss nan, acc 0.0625
user 56, loss nan, acc 0.0625
user 90, loss nan, acc 0.0625
user 47, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 13 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 14 |

user 12, loss nan, acc 0.10416666666666667
user 23, loss nan, acc 0.0625
user 15, loss nan, acc 0.0625
user 65, loss nan, acc 0.125
user 32, loss nan, acc 0.08333333333333333
user 33, loss nan, acc 0.10416666666666667
user 64, loss nan, acc 0.1875
user 91, loss nan, acc 0.10416666666666667
user 50, loss nan, acc 0.10416666666666667
user 71, loss nan, acc 0.125
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 14 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 15 |

user 67, loss nan, acc 0.0625
user 24, loss nan, acc 0.125
user 79, loss nan, acc 0.0625
user 51, loss nan, acc 0.14583333333333334
user 74, loss nan, acc 0.10416666666666667
user 90, loss nan, acc 0.0625
user 30, loss nan, acc 0.041666666666666664
user 76, loss nan, acc 0.10416666666666667
user 31, loss nan, acc 0.16666666666666666
Malcious user 72 is selected!
user 72, loss 83398.06538965405, acc 0.14583333333333334, mal loss 108.61642265319824, mal acc 0.12916666666666668
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 15 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 16 |

user 13, loss nan, acc 0.0625
user 15, loss nan, acc 0.0625
user 50, loss nan, acc 0.10416666666666667
user 20, loss nan, acc 0.10416666666666667
user 66, loss nan, acc 0.14583333333333334
user 53, loss nan, acc 0.10416666666666667
user 3, loss nan, acc 0.10416666666666667
user 19, loss nan, acc 0.10416666666666667
user 58, loss nan, acc 0.041666666666666664
user 91, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 16 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 17 |

user 83, loss nan, acc 0.125
Malcious user 49 is selected!
user 49, loss 811187.8589503397, acc 0.14583333333333334, mal loss 108.48234987258911, mal acc 0.14375
user 88, loss nan, acc 0.08333333333333333
user 64, loss nan, acc 0.1875
user 41, loss nan, acc 0.10416666666666667
user 60, loss nan, acc 0.0625
user 54, loss nan, acc 0.0625
Malcious user 5 is selected!
user 5, loss 2346.5108285605907, acc 0.14583333333333334, mal loss 108.27029633522034, mal acc 0.12916666666666668
user 68, loss nan, acc 0.041666666666666664
user 73, loss nan, acc 0.020833333333333332
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 17 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 18 |

user 14, loss nan, acc 0.10416666666666667
user 75, loss nan, acc 0.0625
user 56, loss nan, acc 0.0625
user 12, loss nan, acc 0.10416666666666667
user 77, loss nan, acc 0.0625
user 1, loss nan, acc 0.08333333333333333
user 33, loss nan, acc 0.10416666666666667
user 38, loss nan, acc 0.16666666666666666
user 80, loss nan, acc 0.041666666666666664
user 35, loss nan, acc 0.20833333333333334
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 18 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 19 |

user 13, loss nan, acc 0.0625
user 46, loss nan, acc 0.14583333333333334
user 97, loss nan, acc 0.10416666666666667
user 89, loss nan, acc 0.0625
user 29, loss nan, acc 0.08333333333333333
user 52, loss nan, acc 0.125
Malcious user 49 is selected!
user 49, loss 2460.2171357984344, acc 0.0625, mal loss 107.88794589042664, mal acc 0.13125
user 78, loss nan, acc 0.10416666666666667
user 19, loss nan, acc 0.10416666666666667
user 11, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 19 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 20 |

user 92, loss nan, acc 0.10416666666666667
user 24, loss nan, acc 0.125
user 82, loss nan, acc 0.125
user 21, loss nan, acc 0.0625
user 38, loss nan, acc 0.16666666666666666
user 6, loss nan, acc 0.08333333333333333
user 88, loss nan, acc 0.08333333333333333
user 35, loss nan, acc 0.20833333333333334
user 54, loss nan, acc 0.0625
user 91, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 20 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 21 |

user 31, loss nan, acc 0.16666666666666666
user 56, loss nan, acc 0.0625
user 21, loss nan, acc 0.0625
user 46, loss nan, acc 0.14583333333333334
user 55, loss nan, acc 0.08333333333333333
user 10, loss nan, acc 0.10416666666666667
user 98, loss nan, acc 0.125
user 47, loss nan, acc 0.10416666666666667
user 45, loss nan, acc 0.08333333333333333
user 16, loss nan, acc 0.08333333333333333
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 21 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 22 |

user 6, loss nan, acc 0.08333333333333333
user 74, loss nan, acc 0.10416666666666667
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 22%|██▏       | 22/100 [03:57<13:50, 10.65s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 23%|██▎       | 23/100 [04:08<14:01, 10.93s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 24%|██▍       | 24/100 [04:19<13:55, 10.99s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 25%|██▌       | 25/100 [04:30<13:28, 10.78s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 26%|██▌       | 26/100 [04:41<13:36, 11.04s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 27%|██▋       | 27/100 [04:52<13:24, 11.02s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 28%|██▊       | 28/100 [05:02<12:48, 10.67s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 29%|██▉       | 29/100 [05:13<12:42, 10.75s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 30%|███       | 30/100 [05:24<12:40, 10.86s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 31%|███       | 31/100 [05:34<12:14, 10.64s/it]user 36, loss nan, acc 0.08333333333333333
user 3, loss nan, acc 0.10416666666666667
user 64, loss nan, acc 0.1875
user 67, loss nan, acc 0.0625
user 24, loss nan, acc 0.125
user 73, loss nan, acc 0.020833333333333332
user 44, loss nan, acc 0.020833333333333332
user 34, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 22 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 23 |

Malcious user 95 is selected!
user 95, loss 7604751.958602126, acc 0.08333333333333333, mal loss 107.8180947303772, mal acc 0.14375
user 40, loss nan, acc 0.08333333333333333
user 36, loss nan, acc 0.08333333333333333
user 46, loss nan, acc 0.14583333333333334
user 73, loss nan, acc 0.020833333333333332
user 54, loss nan, acc 0.0625
user 21, loss nan, acc 0.0625
user 53, loss nan, acc 0.10416666666666667
user 8, loss nan, acc 0.14583333333333334
user 38, loss nan, acc 0.16666666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 23 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 24 |

user 55, loss nan, acc 0.08333333333333333
user 1, loss nan, acc 0.08333333333333333
Malcious user 5 is selected!
user 5, loss 13567.178151695925, acc 0.10416666666666667, mal loss 107.98289203643799, mal acc 0.14375
user 43, loss nan, acc 0.16666666666666666
user 52, loss nan, acc 0.125
Malcious user 81 is selected!
user 81, loss 25078847.870459102, acc 0.08333333333333333, mal loss 108.48536562919617, mal acc 0.14375
user 14, loss nan, acc 0.10416666666666667
user 30, loss nan, acc 0.041666666666666664
user 90, loss nan, acc 0.0625
Malcious user 93 is selected!
user 93, loss 1315.7412434493501, acc 0.14583333333333334, mal loss 108.57308220863342, mal acc 0.14375
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 24 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 25 |

user 18, loss nan, acc 0.1875
user 89, loss nan, acc 0.0625
user 99, loss nan, acc 0.0625
user 65, loss nan, acc 0.125
user 0, loss nan, acc 0.125
Malcious user 93 is selected!
user 93, loss 6611678.38621507, acc 0.14583333333333334, mal loss 108.35827660560608, mal acc 0.14375
user 32, loss nan, acc 0.08333333333333333
user 76, loss nan, acc 0.10416666666666667
user 92, loss nan, acc 0.10416666666666667
user 14, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 25 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 26 |

user 91, loss nan, acc 0.10416666666666667
user 53, loss nan, acc 0.10416666666666667
Malcious user 93 is selected!
user 93, loss 2537304.2306447597, acc 0.14583333333333334, mal loss 108.76917958259583, mal acc 0.11041666666666666
Malcious user 96 is selected!
user 96, loss 2401.5013924241066, acc 0.14583333333333334, mal loss 107.97511315345764, mal acc 0.14375
Malcious user 94 is selected!
user 94, loss 1515.677687210838, acc 0.125, mal loss 108.09385967254639, mal acc 0.13125
user 31, loss nan, acc 0.16666666666666666
user 92, loss nan, acc 0.10416666666666667
Malcious user 5 is selected!
user 5, loss 25860174.560654595, acc 0.10416666666666667, mal loss 108.25310730934143, mal acc 0.14375
user 85, loss nan, acc 0.14583333333333334
user 52, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 26 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 27 |

user 82, loss nan, acc 0.125
user 6, loss nan, acc 0.08333333333333333
user 78, loss nan, acc 0.10416666666666667
user 43, loss nan, acc 0.16666666666666666
user 26, loss nan, acc 0.16666666666666666
user 36, loss nan, acc 0.08333333333333333
user 20, loss nan, acc 0.10416666666666667
user 80, loss nan, acc 0.041666666666666664
user 2, loss nan, acc 0.0625
user 76, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 27 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 28 |

user 47, loss nan, acc 0.10416666666666667
user 90, loss nan, acc 0.0625
user 91, loss nan, acc 0.10416666666666667
user 58, loss nan, acc 0.041666666666666664
user 80, loss nan, acc 0.041666666666666664
user 50, loss nan, acc 0.10416666666666667
user 78, loss nan, acc 0.10416666666666667
user 42, loss nan, acc 0.20833333333333334
user 51, loss nan, acc 0.14583333333333334
user 46, loss nan, acc 0.14583333333333334
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 28 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 29 |

user 3, loss nan, acc 0.10416666666666667
user 99, loss nan, acc 0.0625
user 37, loss nan, acc 0.020833333333333332
user 60, loss nan, acc 0.0625
user 56, loss nan, acc 0.0625
user 33, loss nan, acc 0.10416666666666667
user 15, loss nan, acc 0.0625
user 38, loss nan, acc 0.16666666666666666
user 19, loss nan, acc 0.10416666666666667
user 6, loss nan, acc 0.08333333333333333
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 29 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 30 |

user 15, loss nan, acc 0.0625
user 39, loss nan, acc 0.20833333333333334
user 66, loss nan, acc 0.14583333333333334
user 92, loss nan, acc 0.10416666666666667
user 68, loss nan, acc 0.041666666666666664
user 80, loss nan, acc 0.041666666666666664
user 36, loss nan, acc 0.08333333333333333
user 28, loss nan, acc 0.125
Malcious user 81 is selected!
user 81, loss 10636606.99348278, acc 0.08333333333333333, mal loss 108.1411645412445, mal acc 0.14375
user 55, loss nan, acc 0.08333333333333333
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 30 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 31 |

user 54, loss nan, acc 0.0625
user 15, loss nan, acc 0.0625
user 82, loss nan, acc 0.125
user 20, loss nan, acc 0.10416666666666667
user 34, loss nan, acc 0.0625
user 11, loss nan, acc 0.125
user 56, loss nan, acc 0.0625
user 16, loss nan, acc 0.08333333333333333
user 67, loss nan, acc 0.0625
user 66, loss nan, acc 0.14583333333333334
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 31 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 32 |

user 15, loss nan, acc 0.0625
user 11, loss nan, acc 0.125
user 86, loss nan, acc 0.0625
user 43, loss nan, acc 0.16666666666666666
user 89, loss nan, acc 0.0625
user 52, loss nan, acc 0.125
user 7, loss nan, acc 0.0625
user 31, loss nan, acc 0.16666666666666666
user 35, loss nan, acc 0.20833333333333334
user 56, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 32 global rounds:
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 32%|███▏      | 32/100 [05:45<12:12, 10.78s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 33%|███▎      | 33/100 [05:57<12:09, 10.89s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 34%|███▍      | 34/100 [06:07<11:49, 10.74s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 35%|███▌      | 35/100 [06:19<12:09, 11.22s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 36%|███▌      | 36/100 [06:31<12:01, 11.27s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 37%|███▋      | 37/100 [06:41<11:23, 10.86s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 38%|███▊      | 38/100 [06:51<11:11, 10.83s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 39%|███▉      | 39/100 [07:04<11:27, 11.27s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 40%|████      | 40/100 [07:15<11:15, 11.25s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 41%|████      | 41/100 [07:27<11:13, 11.42s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 42%|████▏     | 42/100 [07:38<10:55, 11.30s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 33 |

Malcious user 72 is selected!
user 72, loss 2526.0043301045894, acc 0.20833333333333334, mal loss 108.13287043571472, mal acc 0.14375
user 99, loss nan, acc 0.0625
user 50, loss nan, acc 0.10416666666666667
user 75, loss nan, acc 0.0625
user 17, loss nan, acc 0.14583333333333334
user 14, loss nan, acc 0.10416666666666667
user 18, loss nan, acc 0.1875
user 24, loss nan, acc 0.125
user 48, loss nan, acc 0.10416666666666667
user 30, loss nan, acc 0.041666666666666664
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 33 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 34 |

user 89, loss nan, acc 0.0625
user 42, loss nan, acc 0.20833333333333334
user 59, loss nan, acc 0.041666666666666664
user 67, loss nan, acc 0.0625
user 82, loss nan, acc 0.125
user 22, loss nan, acc 0.10416666666666667
user 97, loss nan, acc 0.10416666666666667
user 56, loss nan, acc 0.0625
Malcious user 69 is selected!
user 69, loss 3007161.462704648, acc 0.08333333333333333, mal loss 108.74794554710388, mal acc 0.11041666666666666
user 28, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 34 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 35 |

user 70, loss nan, acc 0.125
user 13, loss nan, acc 0.0625
user 36, loss nan, acc 0.08333333333333333
user 22, loss nan, acc 0.10416666666666667
user 41, loss nan, acc 0.10416666666666667
user 46, loss nan, acc 0.14583333333333334
user 53, loss nan, acc 0.10416666666666667
user 10, loss nan, acc 0.10416666666666667
user 89, loss nan, acc 0.0625
user 24, loss nan, acc 0.125
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 35 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 36 |

user 45, loss nan, acc 0.08333333333333333
user 66, loss nan, acc 0.14583333333333334
user 38, loss nan, acc 0.16666666666666666
user 39, loss nan, acc 0.20833333333333334
user 34, loss nan, acc 0.0625
Malcious user 96 is selected!
user 96, loss 5478.614742686351, acc 0.14583333333333334, mal loss 108.32445764541626, mal acc 0.14375
user 83, loss nan, acc 0.125
user 78, loss nan, acc 0.10416666666666667
user 75, loss nan, acc 0.0625
user 35, loss nan, acc 0.20833333333333334
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 36 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 37 |

user 8, loss nan, acc 0.14583333333333334
user 64, loss nan, acc 0.1875
user 46, loss nan, acc 0.14583333333333334
user 87, loss nan, acc 0.14583333333333334
user 55, loss nan, acc 0.08333333333333333
user 24, loss nan, acc 0.125
user 30, loss nan, acc 0.041666666666666664
user 82, loss nan, acc 0.125
user 60, loss nan, acc 0.0625
user 79, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 37 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 38 |

user 1, loss nan, acc 0.08333333333333333
user 86, loss nan, acc 0.0625
user 24, loss nan, acc 0.125
user 48, loss nan, acc 0.10416666666666667
user 44, loss nan, acc 0.020833333333333332
user 41, loss nan, acc 0.10416666666666667
user 82, loss nan, acc 0.125
user 11, loss nan, acc 0.125
user 16, loss nan, acc 0.08333333333333333
user 54, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 38 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 39 |

user 27, loss nan, acc 0.10416666666666667
user 85, loss nan, acc 0.14583333333333334
user 23, loss nan, acc 0.0625
user 84, loss nan, acc 0.0625
user 44, loss nan, acc 0.020833333333333332
user 63, loss nan, acc 0.10416666666666667
user 47, loss nan, acc 0.10416666666666667
user 29, loss nan, acc 0.08333333333333333
user 68, loss nan, acc 0.041666666666666664
user 86, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 39 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 40 |

user 74, loss nan, acc 0.10416666666666667
Malcious user 62 is selected!
user 62, loss 1998.0989104037485, acc 0.16666666666666666, mal loss 108.4958827495575, mal acc 0.14375
user 73, loss nan, acc 0.020833333333333332
user 26, loss nan, acc 0.16666666666666666
user 98, loss nan, acc 0.125
user 51, loss nan, acc 0.14583333333333334
user 23, loss nan, acc 0.0625
user 42, loss nan, acc 0.20833333333333334
user 50, loss nan, acc 0.10416666666666667
user 76, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 40 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 41 |

user 11, loss nan, acc 0.125
user 68, loss nan, acc 0.041666666666666664
user 38, loss nan, acc 0.16666666666666666
user 71, loss nan, acc 0.125
user 46, loss nan, acc 0.14583333333333334
user 7, loss nan, acc 0.0625
user 15, loss nan, acc 0.0625
user 26, loss nan, acc 0.16666666666666666
user 98, loss nan, acc 0.125
user 37, loss nan, acc 0.020833333333333332
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 41 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 42 |

user 76, loss nan, acc 0.10416666666666667
Malcious user 72 is selected!
user 72, loss 96437.58534548232, acc 0.10416666666666667, mal loss 108.57362914085388, mal acc 0.13333333333333333
user 12, loss nan, acc 0.10416666666666667
Malcious user 5 is selected!
user 5, loss 16822265.57323841, acc 0.14583333333333334, mal loss 108.40957689285278, mal acc 0.12916666666666668
user 33, loss nan, acc 0.10416666666666667
user 86, loss nan, acc 0.0625
user 75, loss nan, acc 0.0625
user 64, loss nan, acc 0.1875
user 88, loss nan, acc 0.08333333333333333
user 52, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 42 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 43 |

user 15, loss nan, acc 0.0625
user 71, loss nan, acc 0.125
user 43, loss nan, acc 0.16666666666666666
user 25, loss nan, acc 0.020833333333333332
user 12, loss nan, acc 0.10416666666666667
user 16, loss nan, acc 0.08333333333333333
user 17, loss nan, acc 0.14583333333333334
user 6, loss nan, acc 0.08333333333333333
user 53, loss nan, acc 0.10416666666666667
user 29, loss nan, acc 0.08333333333333333
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 43 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

 43%|████▎     | 43/100 [07:49<10:45, 11.32s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 44%|████▍     | 44/100 [08:00<10:28, 11.23s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 45%|████▌     | 45/100 [08:11<10:03, 10.97s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 46%|████▌     | 46/100 [08:22<10:05, 11.22s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 47%|████▋     | 47/100 [08:34<10:03, 11.39s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 48%|████▊     | 48/100 [08:45<09:48, 11.31s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 49%|████▉     | 49/100 [08:57<09:44, 11.45s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 50%|█████     | 50/100 [09:08<09:29, 11.39s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 51%|█████     | 51/100 [09:18<08:59, 11.00s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 52%|█████▏    | 52/100 [09:29<08:49, 11.03s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 53%|█████▎    | 53/100 [09:40<08:38, 11.03s/it]Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 44 |

user 7, loss nan, acc 0.0625
user 64, loss nan, acc 0.1875
user 17, loss nan, acc 0.14583333333333334
user 71, loss nan, acc 0.125
user 92, loss nan, acc 0.10416666666666667
user 30, loss nan, acc 0.041666666666666664
user 12, loss nan, acc 0.10416666666666667
user 70, loss nan, acc 0.125
user 13, loss nan, acc 0.0625
user 97, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 44 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 45 |

user 41, loss nan, acc 0.10416666666666667
user 64, loss nan, acc 0.1875
user 63, loss nan, acc 0.10416666666666667
user 83, loss nan, acc 0.125
user 59, loss nan, acc 0.041666666666666664
user 47, loss nan, acc 0.10416666666666667
user 98, loss nan, acc 0.125
user 67, loss nan, acc 0.0625
user 17, loss nan, acc 0.14583333333333334
user 7, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 45 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 46 |

user 28, loss nan, acc 0.125
user 29, loss nan, acc 0.08333333333333333
user 8, loss nan, acc 0.14583333333333334
Malcious user 49 is selected!
user 49, loss 2165.005435005327, acc 0.14583333333333334, mal loss 108.37786054611206, mal acc 0.14375
user 76, loss nan, acc 0.10416666666666667
user 9, loss nan, acc 0.0625
user 47, loss nan, acc 0.10416666666666667
user 91, loss nan, acc 0.10416666666666667
user 58, loss nan, acc 0.041666666666666664
user 24, loss nan, acc 0.125
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 46 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 47 |

user 4, loss nan, acc 0.10416666666666667
user 14, loss nan, acc 0.10416666666666667
user 39, loss nan, acc 0.20833333333333334
user 50, loss nan, acc 0.10416666666666667
user 19, loss nan, acc 0.10416666666666667
Malcious user 81 is selected!
user 81, loss 6605.002069442472, acc 0.125, mal loss 108.18413472175598, mal acc 0.12916666666666668
user 40, loss nan, acc 0.08333333333333333
user 88, loss nan, acc 0.08333333333333333
user 7, loss nan, acc 0.0625
user 43, loss nan, acc 0.16666666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 47 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 48 |

user 56, loss nan, acc 0.0625
user 0, loss nan, acc 0.125
user 11, loss nan, acc 0.125
user 10, loss nan, acc 0.10416666666666667
user 1, loss nan, acc 0.08333333333333333
user 64, loss nan, acc 0.1875
user 98, loss nan, acc 0.125
user 45, loss nan, acc 0.08333333333333333
Malcious user 5 is selected!
user 5, loss 1443.2986894066137, acc 0.10416666666666667, mal loss 108.00562286376953, mal acc 0.14375
user 74, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 48 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 49 |

user 8, loss nan, acc 0.14583333333333334
user 60, loss nan, acc 0.0625
user 64, loss nan, acc 0.1875
Malcious user 62 is selected!
user 62, loss 90167.35540260722, acc 0.16666666666666666, mal loss 108.14275789260864, mal acc 0.14375
user 76, loss nan, acc 0.10416666666666667
user 75, loss nan, acc 0.0625
user 63, loss nan, acc 0.10416666666666667
user 2, loss nan, acc 0.0625
user 9, loss nan, acc 0.0625
user 39, loss nan, acc 0.20833333333333334
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 49 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 50 |

user 28, loss nan, acc 0.125
user 12, loss nan, acc 0.10416666666666667
user 89, loss nan, acc 0.0625
user 87, loss nan, acc 0.14583333333333334
user 43, loss nan, acc 0.16666666666666666
Malcious user 62 is selected!
user 62, loss 1697.4804765691358, acc 0.08333333333333333, mal loss 109.08483481407166, mal acc 0.13333333333333333
user 40, loss nan, acc 0.08333333333333333
user 10, loss nan, acc 0.10416666666666667
user 48, loss nan, acc 0.10416666666666667
user 2, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 50 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 51 |

user 12, loss nan, acc 0.10416666666666667
user 71, loss nan, acc 0.125
user 46, loss nan, acc 0.14583333333333334
user 84, loss nan, acc 0.0625
user 76, loss nan, acc 0.10416666666666667
user 52, loss nan, acc 0.125
Malcious user 94 is selected!
user 94, loss 7860178.165809576, acc 0.14583333333333334, mal loss 107.74699282646179, mal acc 0.13333333333333333
user 11, loss nan, acc 0.125
Malcious user 93 is selected!
user 93, loss 14895990.67654938, acc 0.0625, mal loss 108.22491002082825, mal acc 0.13333333333333333
user 6, loss nan, acc 0.08333333333333333
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 51 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 52 |

user 87, loss nan, acc 0.14583333333333334
user 50, loss nan, acc 0.10416666666666667
user 6, loss nan, acc 0.08333333333333333
user 18, loss nan, acc 0.1875
user 63, loss nan, acc 0.10416666666666667
Malcious user 93 is selected!
user 93, loss 2114531.0944396807, acc 0.0625, mal loss 107.95327663421631, mal acc 0.13333333333333333
Malcious user 62 is selected!
user 62, loss 3992.5722502415374, acc 0.08333333333333333, mal loss 107.86130857467651, mal acc 0.13333333333333333
user 35, loss nan, acc 0.20833333333333334
user 13, loss nan, acc 0.0625
user 85, loss nan, acc 0.14583333333333334
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 52 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 53 |

user 22, loss nan, acc 0.10416666666666667
user 25, loss nan, acc 0.020833333333333332
user 33, loss nan, acc 0.10416666666666667
user 21, loss nan, acc 0.0625
user 20, loss nan, acc 0.10416666666666667
user 30, loss nan, acc 0.041666666666666664
user 71, loss nan, acc 0.125
user 77, loss nan, acc 0.0625
user 92, loss nan, acc 0.10416666666666667
user 14, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 53 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 54 |

Malcious user 93 is selected!
user 93, loss 2641.797432223459, acc 0.14583333333333334, mal loss 108.08635425567627, mal acc 0.14375
user 21, loss nan, acc 0.0625
Malcious user 5 is selected!
user 5, loss 1861854899164621.5, acc 0.14583333333333334, mal loss 107.84342956542969, mal acc 0.12916666666666668
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 54%|█████▍    | 54/100 [09:51<08:26, 11.01s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 55%|█████▌    | 55/100 [10:03<08:19, 11.10s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 56%|█████▌    | 56/100 [10:14<08:07, 11.07s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 57%|█████▋    | 57/100 [10:25<07:58, 11.14s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 58%|█████▊    | 58/100 [10:37<07:53, 11.27s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 59%|█████▉    | 59/100 [10:47<07:31, 11.02s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 60%|██████    | 60/100 [10:58<07:22, 11.06s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 61%|██████    | 61/100 [11:09<07:13, 11.11s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 62%|██████▏   | 62/100 [11:20<06:58, 11.01s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 63%|██████▎   | 63/100 [11:32<06:57, 11.29s/it]Malcious user 95 is selected!
user 95, loss 2722.2414173275233, acc 0.08333333333333333, mal loss 108.14486813545227, mal acc 0.14375
user 85, loss nan, acc 0.14583333333333334
user 91, loss nan, acc 0.10416666666666667
user 64, loss nan, acc 0.1875
user 78, loss nan, acc 0.10416666666666667
user 63, loss nan, acc 0.10416666666666667
user 47, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 54 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 55 |

user 2, loss nan, acc 0.0625
user 6, loss nan, acc 0.08333333333333333
user 20, loss nan, acc 0.10416666666666667
user 82, loss nan, acc 0.125
user 75, loss nan, acc 0.0625
Malcious user 94 is selected!
user 94, loss 2636.787869094312, acc 0.14583333333333334, mal loss 107.8928804397583, mal acc 0.13333333333333333
user 77, loss nan, acc 0.0625
user 16, loss nan, acc 0.08333333333333333
user 8, loss nan, acc 0.14583333333333334
user 23, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 55 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 56 |

user 47, loss nan, acc 0.10416666666666667
user 24, loss nan, acc 0.125
user 19, loss nan, acc 0.10416666666666667
user 90, loss nan, acc 0.0625
user 66, loss nan, acc 0.14583333333333334
user 30, loss nan, acc 0.041666666666666664
user 48, loss nan, acc 0.10416666666666667
user 41, loss nan, acc 0.10416666666666667
Malcious user 62 is selected!
user 62, loss 2270.7772114738823, acc 0.16666666666666666, mal loss 108.00570368766785, mal acc 0.14375
user 36, loss nan, acc 0.08333333333333333
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 56 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 57 |

user 45, loss nan, acc 0.08333333333333333
Malcious user 5 is selected!
user 5, loss 1883.0212873349587, acc 0.14583333333333334, mal loss 108.25416374206543, mal acc 0.12916666666666668
user 91, loss nan, acc 0.10416666666666667
user 59, loss nan, acc 0.041666666666666664
user 63, loss nan, acc 0.10416666666666667
user 51, loss nan, acc 0.14583333333333334
user 23, loss nan, acc 0.0625
user 35, loss nan, acc 0.20833333333333334
user 56, loss nan, acc 0.0625
user 73, loss nan, acc 0.020833333333333332
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 57 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 58 |

user 27, loss nan, acc 0.10416666666666667
Malcious user 95 is selected!
user 95, loss 105904226.49614064, acc 0.125, mal loss 107.9308385848999, mal acc 0.12916666666666668
user 51, loss nan, acc 0.14583333333333334
Malcious user 69 is selected!
user 69, loss 11850111.037343271, acc 0.0625, mal loss 108.35453248023987, mal acc 0.14375
Malcious user 72 is selected!
user 72, loss 110792.54358071387, acc 0.20833333333333334, mal loss 107.77839088439941, mal acc 0.14375
user 10, loss nan, acc 0.10416666666666667
user 45, loss nan, acc 0.08333333333333333
user 29, loss nan, acc 0.08333333333333333
user 36, loss nan, acc 0.08333333333333333
user 19, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 58 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 59 |

user 70, loss nan, acc 0.125
user 45, loss nan, acc 0.08333333333333333
user 67, loss nan, acc 0.0625
user 53, loss nan, acc 0.10416666666666667
user 59, loss nan, acc 0.041666666666666664
user 20, loss nan, acc 0.10416666666666667
user 24, loss nan, acc 0.125
user 75, loss nan, acc 0.0625
user 76, loss nan, acc 0.10416666666666667
user 16, loss nan, acc 0.08333333333333333
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 59 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 60 |

user 76, loss nan, acc 0.10416666666666667
user 85, loss nan, acc 0.14583333333333334
user 98, loss nan, acc 0.125
user 60, loss nan, acc 0.0625
Malcious user 62 is selected!
user 62, loss 2305.012997786204, acc 0.08333333333333333, mal loss 108.24493646621704, mal acc 0.13333333333333333
user 32, loss nan, acc 0.08333333333333333
user 86, loss nan, acc 0.0625
user 24, loss nan, acc 0.125
user 13, loss nan, acc 0.0625
user 43, loss nan, acc 0.16666666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 60 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 61 |

user 14, loss nan, acc 0.10416666666666667
user 12, loss nan, acc 0.10416666666666667
user 78, loss nan, acc 0.10416666666666667
user 39, loss nan, acc 0.20833333333333334
user 13, loss nan, acc 0.0625
Malcious user 62 is selected!
user 62, loss 1602.7488266537587, acc 0.08333333333333333, mal loss 108.16622519493103, mal acc 0.13125
user 57, loss nan, acc 0.0625
user 38, loss nan, acc 0.16666666666666666
user 40, loss nan, acc 0.08333333333333333
user 31, loss nan, acc 0.16666666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 61 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 62 |

user 34, loss nan, acc 0.0625
user 97, loss nan, acc 0.10416666666666667
user 35, loss nan, acc 0.20833333333333334
user 89, loss nan, acc 0.0625
Malcious user 93 is selected!
user 93, loss 2164714.8812021124, acc 0.041666666666666664, mal loss 108.45598483085632, mal acc 0.13125
user 27, loss nan, acc 0.10416666666666667
user 74, loss nan, acc 0.10416666666666667
user 37, loss nan, acc 0.020833333333333332
user 47, loss nan, acc 0.10416666666666667
user 64, loss nan, acc 0.1875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 62 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 63 |

user 38, loss nan, acc 0.16666666666666666
user 8, loss nan, acc 0.14583333333333334
Malcious user 94 is selected!
user 94, loss 6209.709811609487, acc 0.14583333333333334, mal loss 108.36761021614075, mal acc 0.13333333333333333
Malcious user 69 is selected!
user 69, loss 6583447.36485829, acc 0.041666666666666664, mal loss 108.73113989830017, mal acc 0.13333333333333333
user 51, loss nan, acc 0.14583333333333334
Malcious user 93 is selected!
user 93, loss 23015611.504427817, acc 0.14583333333333334, mal loss 108.14485740661621, mal acc 0.14375
user 63, loss nan, acc 0.10416666666666667
user 18, loss nan, acc 0.1875
user 16, loss nan, acc 0.08333333333333333
user 43, loss nan, acc 0.16666666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 63 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 64 |

user 40, loss nan, acc 0.08333333333333333
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 64%|██████▍   | 64/100 [11:44<06:54, 11.51s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 65%|██████▌   | 65/100 [11:55<06:37, 11.36s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 66%|██████▌   | 66/100 [12:06<06:21, 11.23s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 67%|██████▋   | 67/100 [12:17<06:11, 11.25s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 68%|██████▊   | 68/100 [12:28<05:51, 10.99s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 69%|██████▉   | 69/100 [12:39<05:38, 10.93s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 70%|███████   | 70/100 [12:50<05:35, 11.18s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 71%|███████   | 71/100 [13:02<05:24, 11.18s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 72%|███████▏  | 72/100 [13:13<05:11, 11.14s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 73%|███████▎  | 73/100 [13:22<04:48, 10.70s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 74%|███████▍  | 74/100 [13:33<04:41, 10.82s/it]user 36, loss nan, acc 0.08333333333333333
user 89, loss nan, acc 0.0625
user 78, loss nan, acc 0.10416666666666667
user 56, loss nan, acc 0.0625
user 22, loss nan, acc 0.10416666666666667
user 28, loss nan, acc 0.125
user 67, loss nan, acc 0.0625
user 80, loss nan, acc 0.041666666666666664
user 77, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 64 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 65 |

user 71, loss nan, acc 0.125
user 73, loss nan, acc 0.020833333333333332
user 83, loss nan, acc 0.125
user 54, loss nan, acc 0.0625
user 19, loss nan, acc 0.10416666666666667
user 9, loss nan, acc 0.0625
user 55, loss nan, acc 0.08333333333333333
user 74, loss nan, acc 0.10416666666666667
Malcious user 72 is selected!
user 72, loss 2013306.4199366178, acc 0.20833333333333334, mal loss 108.0760247707367, mal acc 0.14375
user 48, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 65 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 66 |

user 79, loss nan, acc 0.0625
user 50, loss nan, acc 0.10416666666666667
user 16, loss nan, acc 0.08333333333333333
user 21, loss nan, acc 0.0625
user 60, loss nan, acc 0.0625
user 41, loss nan, acc 0.10416666666666667
user 48, loss nan, acc 0.10416666666666667
user 22, loss nan, acc 0.10416666666666667
user 77, loss nan, acc 0.0625
user 55, loss nan, acc 0.08333333333333333
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 66 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 67 |

user 27, loss nan, acc 0.10416666666666667
user 66, loss nan, acc 0.14583333333333334
user 58, loss nan, acc 0.041666666666666664
user 0, loss nan, acc 0.125
user 44, loss nan, acc 0.020833333333333332
user 6, loss nan, acc 0.08333333333333333
user 29, loss nan, acc 0.08333333333333333
user 10, loss nan, acc 0.10416666666666667
user 43, loss nan, acc 0.16666666666666666
user 11, loss nan, acc 0.125
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 67 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 68 |

user 83, loss nan, acc 0.125
user 55, loss nan, acc 0.08333333333333333
Malcious user 72 is selected!
user 72, loss 54313.992091650274, acc 0.14583333333333334, mal loss 108.287029504776, mal acc 0.12916666666666668
user 41, loss nan, acc 0.10416666666666667
user 74, loss nan, acc 0.10416666666666667
user 61, loss nan, acc 0.10416666666666667
user 8, loss nan, acc 0.14583333333333334
user 19, loss nan, acc 0.10416666666666667
user 7, loss nan, acc 0.0625
user 1, loss nan, acc 0.08333333333333333
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 68 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 69 |

user 38, loss nan, acc 0.16666666666666666
user 63, loss nan, acc 0.10416666666666667
user 84, loss nan, acc 0.0625
user 80, loss nan, acc 0.041666666666666664
user 17, loss nan, acc 0.14583333333333334
user 31, loss nan, acc 0.16666666666666666
user 3, loss nan, acc 0.10416666666666667
user 10, loss nan, acc 0.10416666666666667
user 78, loss nan, acc 0.10416666666666667
user 87, loss nan, acc 0.14583333333333334
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 69 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 70 |

user 40, loss nan, acc 0.08333333333333333
user 83, loss nan, acc 0.125
user 43, loss nan, acc 0.16666666666666666
user 63, loss nan, acc 0.10416666666666667
user 39, loss nan, acc 0.20833333333333334
user 73, loss nan, acc 0.020833333333333332
user 41, loss nan, acc 0.10416666666666667
user 71, loss nan, acc 0.125
Malcious user 49 is selected!
user 49, loss 74150.38935739845, acc 0.10416666666666667, mal loss 108.17489624023438, mal acc 0.13333333333333333
user 12, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 70 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 71 |

user 32, loss nan, acc 0.08333333333333333
user 44, loss nan, acc 0.020833333333333332
user 11, loss nan, acc 0.125
user 78, loss nan, acc 0.10416666666666667
user 30, loss nan, acc 0.041666666666666664
user 19, loss nan, acc 0.10416666666666667
user 55, loss nan, acc 0.08333333333333333
user 35, loss nan, acc 0.20833333333333334
user 53, loss nan, acc 0.10416666666666667
user 13, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 71 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 72 |

user 98, loss nan, acc 0.125
user 74, loss nan, acc 0.10416666666666667
user 37, loss nan, acc 0.020833333333333332
user 11, loss nan, acc 0.125
user 2, loss nan, acc 0.0625
user 63, loss nan, acc 0.10416666666666667
user 22, loss nan, acc 0.10416666666666667
user 19, loss nan, acc 0.10416666666666667
user 92, loss nan, acc 0.10416666666666667
user 26, loss nan, acc 0.16666666666666666
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 72 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 73 |

Malcious user 69 is selected!
user 69, loss 1651.5472141275804, acc 0.14583333333333334, mal loss 107.96995735168457, mal acc 0.13125
user 55, loss nan, acc 0.08333333333333333
user 15, loss nan, acc 0.0625
user 66, loss nan, acc 0.14583333333333334
user 43, loss nan, acc 0.16666666666666666
user 64, loss nan, acc 0.1875
user 28, loss nan, acc 0.125
user 14, loss nan, acc 0.10416666666666667
user 2, loss nan, acc 0.0625
user 58, loss nan, acc 0.041666666666666664
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 73 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 74 |

user 38, loss nan, acc 0.16666666666666666
user 56, loss nan, acc 0.0625
user 57, loss nan, acc 0.0625
Malcious user 5 is selected!
user 5, loss 19950183.984808017, acc 0.10416666666666667, mal loss 108.42791843414307, mal acc 0.14375
user 14, loss nan, acc 0.10416666666666667
user 59, loss nan, acc 0.041666666666666664
user 86, loss nan, acc 0.0625
user 43, loss nan, acc 0.16666666666666666
user 79, loss nan, acc 0.0625
Malcious user 94 is selected!
user 94, loss 2726.3086882968746, acc 0.0625, mal loss 108.26480078697205, mal acc 0.14375
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 74 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 75 |

/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 75%|███████▌  | 75/100 [13:45<04:34, 10.97s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 76%|███████▌  | 76/100 [13:55<04:18, 10.78s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 77%|███████▋  | 77/100 [14:06<04:12, 10.99s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 78%|███████▊  | 78/100 [14:18<04:02, 11.03s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 79%|███████▉  | 79/100 [14:28<03:46, 10.79s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 80%|████████  | 80/100 [14:39<03:36, 10.83s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 81%|████████  | 81/100 [14:49<03:25, 10.79s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 82%|████████▏ | 82/100 [15:00<03:11, 10.64s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 83%|████████▎ | 83/100 [15:11<03:02, 10.74s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 84%|████████▍ | 84/100 [15:21<02:51, 10.72s/it]Malcious user 94 is selected!
user 94, loss 2438820.504805618, acc 0.14583333333333334, mal loss 108.1509621143341, mal acc 0.13333333333333333
user 4, loss nan, acc 0.10416666666666667
user 35, loss nan, acc 0.20833333333333334
user 86, loss nan, acc 0.0625
user 21, loss nan, acc 0.0625
user 10, loss nan, acc 0.10416666666666667
user 61, loss nan, acc 0.10416666666666667
user 16, loss nan, acc 0.08333333333333333
user 59, loss nan, acc 0.041666666666666664
user 76, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 75 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 76 |

user 55, loss nan, acc 0.08333333333333333
user 18, loss nan, acc 0.1875
user 82, loss nan, acc 0.125
user 30, loss nan, acc 0.041666666666666664
user 11, loss nan, acc 0.125
user 70, loss nan, acc 0.125
user 51, loss nan, acc 0.14583333333333334
user 63, loss nan, acc 0.10416666666666667
Malcious user 93 is selected!
user 93, loss 35135700.98383642, acc 0.0625, mal loss 108.50643944740295, mal acc 0.13333333333333333
user 17, loss nan, acc 0.14583333333333334
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 76 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 77 |

user 97, loss nan, acc 0.10416666666666667
user 66, loss nan, acc 0.14583333333333334
Malcious user 94 is selected!
user 94, loss 2574.3730899160105, acc 0.0625, mal loss 108.22124314308167, mal acc 0.14375
user 38, loss nan, acc 0.16666666666666666
user 32, loss nan, acc 0.08333333333333333
user 31, loss nan, acc 0.16666666666666666
user 25, loss nan, acc 0.020833333333333332
user 17, loss nan, acc 0.14583333333333334
Malcious user 95 is selected!
user 95, loss 277063.5193694949, acc 0.125, mal loss 107.91010236740112, mal acc 0.12916666666666668
user 92, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 77 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 78 |

user 75, loss nan, acc 0.0625
user 66, loss nan, acc 0.14583333333333334
user 78, loss nan, acc 0.10416666666666667
user 40, loss nan, acc 0.08333333333333333
user 2, loss nan, acc 0.0625
Malcious user 72 is selected!
user 72, loss 28131090.53738599, acc 0.10416666666666667, mal loss 108.01965141296387, mal acc 0.13333333333333333
user 80, loss nan, acc 0.041666666666666664
user 60, loss nan, acc 0.0625
user 55, loss nan, acc 0.08333333333333333
user 45, loss nan, acc 0.08333333333333333
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 78 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 79 |

user 13, loss nan, acc 0.0625
user 51, loss nan, acc 0.14583333333333334
user 88, loss nan, acc 0.08333333333333333
user 99, loss nan, acc 0.0625
Malcious user 62 is selected!
user 62, loss 1828.5898959204555, acc 0.041666666666666664, mal loss 108.32250308990479, mal acc 0.12916666666666668
Malcious user 69 is selected!
user 69, loss 9311600.989632089, acc 0.0625, mal loss 108.0211775302887, mal acc 0.14375
Malcious user 5 is selected!
user 5, loss 9794021.156296078, acc 0.10416666666666667, mal loss 108.73171186447144, mal acc 0.14375
user 37, loss nan, acc 0.020833333333333332
user 67, loss nan, acc 0.0625
user 1, loss nan, acc 0.08333333333333333
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 79 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 80 |

user 73, loss nan, acc 0.020833333333333332
Malcious user 49 is selected!
user 49, loss 496953.93663392466, acc 0.14583333333333334, mal loss 108.51193761825562, mal acc 0.14375
user 54, loss nan, acc 0.0625
user 21, loss nan, acc 0.0625
user 70, loss nan, acc 0.125
user 45, loss nan, acc 0.08333333333333333
user 61, loss nan, acc 0.10416666666666667
Malcious user 62 is selected!
user 62, loss 13562.269964890182, acc 0.16666666666666666, mal loss 108.32444095611572, mal acc 0.14375
user 77, loss nan, acc 0.0625
user 7, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 80 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 81 |

user 53, loss nan, acc 0.10416666666666667
user 55, loss nan, acc 0.08333333333333333
user 31, loss nan, acc 0.16666666666666666
user 74, loss nan, acc 0.10416666666666667
user 52, loss nan, acc 0.125
user 10, loss nan, acc 0.10416666666666667
user 79, loss nan, acc 0.0625
user 6, loss nan, acc 0.08333333333333333
user 97, loss nan, acc 0.10416666666666667
user 22, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 81 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 82 |

user 37, loss nan, acc 0.020833333333333332
user 34, loss nan, acc 0.0625
user 23, loss nan, acc 0.0625
user 13, loss nan, acc 0.0625
Malcious user 69 is selected!
user 69, loss 8086.429787057638, acc 0.041666666666666664, mal loss 108.52110934257507, mal acc 0.13333333333333333
user 10, loss nan, acc 0.10416666666666667
Malcious user 49 is selected!
user 49, loss 2115.144710883995, acc 0.14583333333333334, mal loss 108.02518582344055, mal acc 0.14375
user 66, loss nan, acc 0.14583333333333334
user 75, loss nan, acc 0.0625
user 63, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 82 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 83 |

user 7, loss nan, acc 0.0625
user 85, loss nan, acc 0.14583333333333334
user 75, loss nan, acc 0.0625
user 9, loss nan, acc 0.0625
user 82, loss nan, acc 0.125
user 17, loss nan, acc 0.14583333333333334
user 74, loss nan, acc 0.10416666666666667
user 67, loss nan, acc 0.0625
user 55, loss nan, acc 0.08333333333333333
user 98, loss nan, acc 0.125
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 83 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 84 |

user 18, loss nan, acc 0.1875
user 61, loss nan, acc 0.10416666666666667
user 35, loss nan, acc 0.20833333333333334
user 83, loss nan, acc 0.125
user 63, loss nan, acc 0.10416666666666667
user 51, loss nan, acc 0.14583333333333334
user 92, loss nan, acc 0.10416666666666667
user 90, loss nan, acc 0.0625
user 53, loss nan, acc 0.10416666666666667
user 7, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 84 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 85 |

user 56, loss nan, acc 0.0625
user 7, loss nan, acc 0.0625
user 79, loss nan, acc 0.0625
user 34, loss nan, acc 0.0625
user 64, loss nan, acc 0.1875
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 85%|████████▌ | 85/100 [15:31<02:36, 10.44s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 86%|████████▌ | 86/100 [15:42<02:28, 10.60s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 87%|████████▋ | 87/100 [15:53<02:19, 10.70s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 88%|████████▊ | 88/100 [16:03<02:06, 10.58s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 89%|████████▉ | 89/100 [16:15<01:58, 10.77s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 90%|█████████ | 90/100 [16:26<01:50, 11.02s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 91%|█████████ | 91/100 [16:37<01:37, 10.84s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 92%|█████████▏| 92/100 [16:48<01:28, 11.02s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 93%|█████████▎| 93/100 [17:00<01:18, 11.26s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 94%|█████████▍| 94/100 [17:11<01:07, 11.18s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
user 86, loss nan, acc 0.0625
user 2, loss nan, acc 0.0625
user 24, loss nan, acc 0.125
user 12, loss nan, acc 0.10416666666666667
user 20, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 85 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 86 |

user 66, loss nan, acc 0.14583333333333334
user 18, loss nan, acc 0.1875
user 64, loss nan, acc 0.1875
user 6, loss nan, acc 0.08333333333333333
user 53, loss nan, acc 0.10416666666666667
user 99, loss nan, acc 0.0625
Malcious user 96 is selected!
user 96, loss 1855.347698617975, acc 0.14583333333333334, mal loss 108.14546275138855, mal acc 0.14375
user 52, loss nan, acc 0.125
Malcious user 49 is selected!
user 49, loss 941061.5085419426, acc 0.14583333333333334, mal loss 107.57063698768616, mal acc 0.14375
user 41, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 86 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 87 |

user 61, loss nan, acc 0.10416666666666667
user 79, loss nan, acc 0.0625
user 84, loss nan, acc 0.0625
user 88, loss nan, acc 0.08333333333333333
user 26, loss nan, acc 0.16666666666666666
user 75, loss nan, acc 0.0625
user 23, loss nan, acc 0.0625
user 36, loss nan, acc 0.08333333333333333
Malcious user 5 is selected!
user 5, loss 1956.7508711417515, acc 0.10416666666666667, mal loss 108.59280371665955, mal acc 0.14375
user 54, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 87 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 88 |

Malcious user 95 is selected!
user 95, loss 58725.26664699067, acc 0.08333333333333333, mal loss 108.44457197189331, mal acc 0.14375
user 21, loss nan, acc 0.0625
user 89, loss nan, acc 0.0625
user 74, loss nan, acc 0.10416666666666667
user 36, loss nan, acc 0.08333333333333333
user 80, loss nan, acc 0.041666666666666664
user 2, loss nan, acc 0.0625
user 3, loss nan, acc 0.10416666666666667
user 32, loss nan, acc 0.08333333333333333
user 37, loss nan, acc 0.020833333333333332
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 88 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 89 |

user 41, loss nan, acc 0.10416666666666667
user 86, loss nan, acc 0.0625
Malcious user 62 is selected!
user 62, loss 249527.1653310557, acc 0.16666666666666666, mal loss 107.91043400764465, mal acc 0.14375
Malcious user 72 is selected!
user 72, loss 9905112.860669287, acc 0.020833333333333332, mal loss 108.12591981887817, mal acc 0.13125
user 35, loss nan, acc 0.20833333333333334
user 65, loss nan, acc 0.125
user 60, loss nan, acc 0.0625
user 22, loss nan, acc 0.10416666666666667
user 27, loss nan, acc 0.10416666666666667
user 66, loss nan, acc 0.14583333333333334
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 89 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 90 |

user 16, loss nan, acc 0.08333333333333333
user 38, loss nan, acc 0.16666666666666666
user 71, loss nan, acc 0.125
user 97, loss nan, acc 0.10416666666666667
user 7, loss nan, acc 0.0625
Malcious user 49 is selected!
user 49, loss 2644.5530996521316, acc 0.0625, mal loss 108.05572009086609, mal acc 0.13125
user 45, loss nan, acc 0.08333333333333333
user 56, loss nan, acc 0.0625
user 59, loss nan, acc 0.041666666666666664
Malcious user 94 is selected!
user 94, loss 19333192.004690103, acc 0.0625, mal loss 108.22568988800049, mal acc 0.14375
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 90 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 91 |

user 52, loss nan, acc 0.125
user 45, loss nan, acc 0.08333333333333333
user 71, loss nan, acc 0.125
user 42, loss nan, acc 0.20833333333333334
user 30, loss nan, acc 0.041666666666666664
user 39, loss nan, acc 0.20833333333333334
user 83, loss nan, acc 0.125
user 84, loss nan, acc 0.0625
user 14, loss nan, acc 0.10416666666666667
user 24, loss nan, acc 0.125
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 91 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 92 |

user 90, loss nan, acc 0.0625
user 38, loss nan, acc 0.16666666666666666
Malcious user 96 is selected!
user 96, loss 3008.4420204490425, acc 0.041666666666666664, mal loss 108.44283652305603, mal acc 0.12916666666666668
user 91, loss nan, acc 0.10416666666666667
user 28, loss nan, acc 0.125
Malcious user 93 is selected!
user 93, loss 4305783.453060246, acc 0.041666666666666664, mal loss 108.13400292396545, mal acc 0.13125
user 84, loss nan, acc 0.0625
user 10, loss nan, acc 0.10416666666666667
user 82, loss nan, acc 0.125
user 80, loss nan, acc 0.041666666666666664
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 92 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 93 |

user 25, loss nan, acc 0.020833333333333332
user 75, loss nan, acc 0.0625
user 26, loss nan, acc 0.16666666666666666
user 18, loss nan, acc 0.1875
user 99, loss nan, acc 0.0625
user 38, loss nan, acc 0.16666666666666666
user 39, loss nan, acc 0.20833333333333334
user 10, loss nan, acc 0.10416666666666667
user 80, loss nan, acc 0.041666666666666664
user 47, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 93 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 94 |

user 23, loss nan, acc 0.0625
user 89, loss nan, acc 0.0625
user 27, loss nan, acc 0.10416666666666667
user 42, loss nan, acc 0.20833333333333334
user 7, loss nan, acc 0.0625
Malcious user 96 is selected!
user 96, loss 25023984.862201285, acc 0.041666666666666664, mal loss 107.99577760696411, mal acc 0.12916666666666668
user 35, loss nan, acc 0.20833333333333334
user 16, loss nan, acc 0.08333333333333333
user 15, loss nan, acc 0.0625
user 66, loss nan, acc 0.14583333333333334
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 94 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 95 |

user 90, loss nan, acc 0.0625
user 44, loss nan, acc 0.020833333333333332
user 71, loss nan, acc 0.125
user 91, loss nan, acc 0.10416666666666667
user 50, loss nan, acc 0.10416666666666667
user 88, loss nan, acc 0.08333333333333333
user 66, loss nan, acc 0.14583333333333334
user 68, loss nan, acc 0.041666666666666664
user 86, loss nan, acc 0.0625
user 42, loss nan, acc 0.20833333333333334
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 95 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

 95%|█████████▌| 95/100 [17:22<00:56, 11.23s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 96%|█████████▌| 96/100 [17:33<00:43, 10.98s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 97%|█████████▋| 97/100 [17:44<00:33, 11.10s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 98%|█████████▊| 98/100 [17:55<00:22, 11.06s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 99%|█████████▉| 99/100 [18:05<00:10, 10.90s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
100%|██████████| 100/100 [18:17<00:00, 10.98s/it]100%|██████████| 100/100 [18:17<00:00, 10.97s/it]
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 96 |

user 61, loss nan, acc 0.10416666666666667
user 77, loss nan, acc 0.0625
user 60, loss nan, acc 0.0625
Malcious user 95 is selected!
user 95, loss 14751.447047081096, acc 0.08333333333333333, mal loss 108.23389673233032, mal acc 0.14375
user 67, loss nan, acc 0.0625
user 45, loss nan, acc 0.08333333333333333
user 83, loss nan, acc 0.125
user 82, loss nan, acc 0.125
user 79, loss nan, acc 0.0625
user 19, loss nan, acc 0.10416666666666667
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 96 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 97 |

user 77, loss nan, acc 0.0625
user 8, loss nan, acc 0.14583333333333334
user 28, loss nan, acc 0.125
user 31, loss nan, acc 0.16666666666666666
user 99, loss nan, acc 0.0625
user 68, loss nan, acc 0.041666666666666664
user 67, loss nan, acc 0.0625
user 34, loss nan, acc 0.0625
user 13, loss nan, acc 0.0625
user 84, loss nan, acc 0.0625
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 97 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 98 |

user 58, loss nan, acc 0.041666666666666664
Malcious user 49 is selected!
user 49, loss 3159434.8318204395, acc 0.10416666666666667, mal loss 108.32344269752502, mal acc 0.13333333333333333
user 79, loss nan, acc 0.0625
user 43, loss nan, acc 0.16666666666666666
user 23, loss nan, acc 0.0625
user 97, loss nan, acc 0.10416666666666667
user 77, loss nan, acc 0.0625
user 83, loss nan, acc 0.125
user 19, loss nan, acc 0.10416666666666667
user 34, loss nan, acc 0.0625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 98 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 99 |

user 21, loss nan, acc 0.0625
user 51, loss nan, acc 0.14583333333333334
user 6, loss nan, acc 0.08333333333333333
user 14, loss nan, acc 0.10416666666666667
user 61, loss nan, acc 0.10416666666666667
user 80, loss nan, acc 0.041666666666666664
user 59, loss nan, acc 0.041666666666666664
user 1, loss nan, acc 0.08333333333333333
user 54, loss nan, acc 0.0625
user 42, loss nan, acc 0.20833333333333334
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 99 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 100 |

user 36, loss nan, acc 0.08333333333333333
user 18, loss nan, acc 0.1875
user 38, loss nan, acc 0.16666666666666666
user 53, loss nan, acc 0.10416666666666667
user 4, loss nan, acc 0.10416666666666667
user 27, loss nan, acc 0.10416666666666667
user 82, loss nan, acc 0.125
user 43, loss nan, acc 0.16666666666666666
user 21, loss nan, acc 0.0625
user 33, loss nan, acc 0.10416666666666667
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 100 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 12.03% 

Global model Malicious Accuracy: 13.33%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])

 
 Results after 100 global rounds of training:
|---- Test Accuracy: 12.03%

 Total Run Time: 1098.2089
Running fedavg.py with --dataset=cifar --label_tampering=none --weight_tampering=none

Experimental details:
    Model     : cnn
    Optimizer : sgd
    Learning  : 0.01
    Global Rounds   : 100

    Federated parameters:
    IID
    Fraction of users  : 0.1
    Local Batch size   : 10
    Local Epochs       : 10

  0%|          | 0.00/170M [00:00<?, ?B/s]  0%|          | 229k/170M [00:00<01:31, 1.85MB/s]  2%|▏         | 2.65M/170M [00:00<00:12, 13.8MB/s]  6%|▋         | 10.9M/170M [00:00<00:03, 43.7MB/s] 12%|█▏        | 20.3M/170M [00:00<00:02, 62.4MB/s] 17%|█▋        | 29.7M/170M [00:00<00:01, 73.3MB/s] 23%|██▎       | 39.1M/170M [00:00<00:01, 80.0MB/s] 28%|██▊       | 48.4M/170M [00:00<00:01, 84.2MB/s] 34%|███▎      | 57.4M/170M [00:00<00:01, 85.7MB/s] 39%|███▉      | 66.9M/170M [00:00<00:01, 88.4MB/s] 45%|████▍     | 76.2M/170M [00:01<00:01, 89.7MB/s] 50%|████▉     | 85.2M/170M [00:01<00:00, 89.5MB/s] 55%|█████▌    | 94.1M/170M [00:01<00:00, 89.4MB/s] 60%|██████    | 103M/170M [00:01<00:00, 89.5MB/s]  66%|██████▌   | 112M/170M [00:01<00:00, 90.2MB/s] 71%|███████   | 121M/170M [00:01<00:00, 89.0MB/s] 77%|███████▋  | 131M/170M [00:01<00:00, 90.9MB/s] 82%|████████▏ | 140M/170M [00:01<00:00, 89.9MB/s] 87%|████████▋ | 149M/170M [00:01<00:00, 88.0MB/s] 93%|█████████▎| 159M/170M [00:01<00:00, 90.8MB/s] 99%|█████████▊| 168M/170M [00:02<00:00, 91.2MB/s]100%|██████████| 170M/170M [00:02<00:00, 82.3MB/s]
CNNCifar(
  (conv1): Conv2d(3, 6, kernel_size=(5, 5), stride=(1, 1))
  (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (conv2): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))
  (fc1): Linear(in_features=400, out_features=120, bias=True)
  (fc2): Linear(in_features=120, out_features=84, bias=True)
  (fc3): Linear(in_features=84, out_features=10, bias=True)
)
[7956 7679 5752  627 4354 9636 4916  704 2160  365 4692 7131 1702 7326
 6900 3894 4739 1204 7662 6603 7591 5181 2520 6113 7333 9014 4710 1880
 7655 3590  390 9156 7601  344 4866 3419 1922 5319  601 9427  359 3442
 6710 6138 3382 6686 4105 6093 7886 2131 3574 6175  296 7643 3643  918
  459 9186 8365 3278 8803 1212 9218 8229 7494 3244 7442 8091 1379 2636
  880 8871 7727 8764  313 7053 7862 4812 1262 4731 7987 1659 3651 7873
 5246 8108 4961 4681 5648 9550 8189 6437 3741 8959 4100 3194 6020 1873
 8827 5318 6110 7600 4445 8329 1087 9901 4725 4927 8714 5554 7328 7953
 2283 2803 1612 8845  638 2375 5366 5800 1415 1791 8173   20 3009 6936
 7161 6588 3922 6183  999 7306 3488 8853  512 5089 5925  921 3781 5380
 6078  855 8721   22 9727 3689 5453 6444 6964 1754 2765 6364 6827 4350
 2819 6155 6792 9177 6661 7864 5523 8117 7208 2411 5618   91 5413  508
 1115 8854 6075 6727 3567 2207  630 5840 1777 1576 7224 2175 2750 1146
 6395 8536 1668 2658 8693 3426 4797 7756 4011 2199 4137 9575 1917 9214
 4431 3478 4863 2322 7273 9115 4477 4072 8982 4213 5092 8504 4512 6816
 2965 7064 9251 6889 8842 7015 5411 1804 7622 3505 8100 4259  940 3707
 7285 5262 3911 9337 1973  755 2337 2211 7795 7351 2570 4763 3300 6847
  449 8917 7856 7136  467 7522 6737 6176  761 2514 6101 5608 4801 8425
 6154 5073 4497  862 2964 6425 9218 8667 5700 5659 3322 3383 6100 4293
 8102 6779  503 5220 1686 9028 6467 3684 5512 4125 9387 7864  986 9361
 6315 8163 2345 3052 8785 7611 9585 8922 7354 2442 5014 5456 6082 5135
 2925 8413 3687 4944 8183 4754 7553 6755 9769 2147 1981 5429  145 8005
 5299 1266 7898 1584 1282 5920  821 8667 3081 6625 3076 6613 9951 2815
 4303 9507 1504 8043 6958 8873 1400 2711  648 6316 1293 6752 1021 9280
 2625 9275 8622 1923 1463 3647 5995 2913 1769 2049 2808 8609 8840 2359
 8967 7609 2965 6882 7883 4404 3143 7292 4826 1013  993 9301 1356   63
 8551 8472 7162 1761 7308 7943 2967 9134 8591  596 3460 2072 4523 6459
 2898 8146 7367 1416 1167 5868 8371 9586 3680 9950 7865 6705 1155 8439
 8651  524 9435 9373 4849 7979 9087 4475 2185 3497 9648  991 3051 3038
 9508 2686 2092 3730  335  817 9367 9072 9395 2897 8428 6670 3411 1103
 7478 3525 2596 1354 3608 6134 4917 2244 4746 6384  797 8550 8631 6827
 3349 4969 5923 2826 8535 8895 7368 8345 6631 9118 9266 3493 5590 8638
 3473 3138 8919 1782 3485 6247 2476 5905 1147 9414 8439 3128 4853 5613
   93 1308 3327 3050 9418 3504 6372  779 5899 6509 7448  691   18 4920
 4083 9390  846 8120]
malcious dataset true labels: [4, 6, 3, 4, 7, 6, 6, 7, 0, 4, 8, 6, 9, 4, 3, 7, 6, 6, 5, 9, 6, 1, 1, 2, 6, 7, 3, 1, 8, 7, 1, 6, 8, 8, 9, 4, 5, 7, 5, 1, 0, 6, 3, 3, 2, 9, 7, 2, 7, 7, 5, 3, 6, 8, 8, 8, 6, 7, 6, 0, 3, 1, 3, 8, 2, 7, 7, 7, 7, 1, 8, 9, 6, 1, 0, 1, 1, 8, 8, 4, 0, 8, 0, 1, 7, 5, 8, 9, 8, 6, 8, 0, 2, 1, 7, 3, 6, 6, 2, 1, 9, 8, 9, 8, 6, 3, 9, 1, 4, 9, 4, 1, 4, 5, 3, 2, 0, 0, 1, 2, 7, 4, 5, 7, 7, 9, 5, 0, 2, 5, 8, 4, 1, 2, 6, 6, 3, 9, 2, 1, 2, 7, 6, 4, 6, 7, 2, 3, 5, 7, 9, 3, 3, 4, 1, 8, 3, 9, 4, 1, 6, 8, 1, 0, 0, 3, 3, 9, 1, 4, 3, 6, 6, 3, 2, 2, 4, 7, 3, 3, 5, 2, 8, 1, 9, 7, 9, 0, 5, 5, 7, 2, 4, 5, 8, 9, 1, 4, 1, 0, 4, 8, 6, 5, 2, 4, 9, 1, 8, 1, 7, 5, 6, 5, 4, 3, 2, 5, 9, 4, 6, 5, 9, 6, 1, 4, 9, 5, 0, 2, 7, 7, 5, 2, 0, 0, 4, 8, 2, 0, 6, 1, 3, 9, 8, 9, 6, 9, 9, 9, 2, 6, 4, 8, 8, 3, 0, 2, 3, 4, 3, 2, 2, 8, 1, 9, 3, 8, 4, 0, 0, 8, 3, 9, 9, 8, 1, 1, 3, 8, 6, 0, 1, 3, 8, 7, 4, 9, 0, 4, 7, 1, 0, 1, 4, 9, 9, 8, 3, 3, 9, 9, 8, 7, 3, 6, 7, 1, 7, 0, 1, 7, 9, 8, 2, 4, 9, 4, 2, 8, 0, 3, 5, 0, 1, 0, 7, 5, 5, 5, 4, 7, 4, 9, 1, 9, 2, 8, 4, 1, 0, 1, 0, 0, 1, 3, 2, 6, 2, 2, 2, 0, 7, 9, 9, 3, 3, 5, 3, 1, 4, 7, 2, 3, 8, 2, 5, 1, 4, 1, 7, 5, 6, 7, 1, 6, 4, 6, 8, 8, 3, 3, 4, 9, 2, 5, 0, 3, 3, 3, 9, 8, 4, 0, 2, 1, 5, 3, 3, 1, 0, 0, 3, 5, 8, 3, 8, 7, 1, 1, 9, 5, 9, 9, 7, 3, 5, 3, 5, 0, 7, 2, 9, 1, 0, 3, 5, 9, 6, 7, 4, 1, 2, 3, 6, 1, 0, 4, 7, 0, 5, 9, 7, 4, 8, 0, 4, 0, 2, 8, 7, 3, 1, 0, 8, 1, 6, 5, 8, 9, 7, 5, 6, 5, 7, 0, 8, 9, 1, 5, 1, 9, 9, 2, 8, 7, 8, 7, 2, 8], malicious labels: [4, 6, 3, 4, 7, 6, 6, 7, 0, 4, 8, 6, 9, 4, 3, 7, 6, 6, 5, 9, 6, 1, 1, 2, 6, 7, 3, 1, 8, 7, 1, 6, 8, 8, 9, 4, 5, 7, 5, 1, 0, 6, 3, 3, 2, 9, 7, 2, 7, 7, 5, 3, 6, 8, 8, 8, 6, 7, 6, 0, 3, 1, 3, 8, 2, 7, 7, 7, 7, 1, 8, 9, 6, 1, 0, 1, 1, 8, 8, 4, 0, 8, 0, 1, 7, 5, 8, 9, 8, 6, 8, 0, 2, 1, 7, 3, 6, 6, 2, 1, 9, 8, 9, 8, 6, 3, 9, 1, 4, 9, 4, 1, 4, 5, 3, 2, 0, 0, 1, 2, 7, 4, 5, 7, 7, 9, 5, 0, 2, 5, 8, 4, 1, 2, 6, 6, 3, 9, 2, 1, 2, 7, 6, 4, 6, 7, 2, 3, 5, 7, 9, 3, 3, 4, 1, 8, 3, 9, 4, 1, 6, 8, 1, 0, 0, 3, 3, 9, 1, 4, 3, 6, 6, 3, 2, 2, 4, 7, 3, 3, 5, 2, 8, 1, 9, 7, 9, 0, 5, 5, 7, 2, 4, 5, 8, 9, 1, 4, 1, 0, 4, 8, 6, 5, 2, 4, 9, 1, 8, 1, 7, 5, 6, 5, 4, 3, 2, 5, 9, 4, 6, 5, 9, 6, 1, 4, 9, 5, 0, 2, 7, 7, 5, 2, 0, 0, 4, 8, 2, 0, 6, 1, 3, 9, 8, 9, 6, 9, 9, 9, 2, 6, 4, 8, 8, 3, 0, 2, 3, 4, 3, 2, 2, 8, 1, 9, 3, 8, 4, 0, 0, 8, 3, 9, 9, 8, 1, 1, 3, 8, 6, 0, 1, 3, 8, 7, 4, 9, 0, 4, 7, 1, 0, 1, 4, 9, 9, 8, 3, 3, 9, 9, 8, 7, 3, 6, 7, 1, 7, 0, 1, 7, 9, 8, 2, 4, 9, 4, 2, 8, 0, 3, 5, 0, 1, 0, 7, 5, 5, 5, 4, 7, 4, 9, 1, 9, 2, 8, 4, 1, 0, 1, 0, 0, 1, 3, 2, 6, 2, 2, 2, 0, 7, 9, 9, 3, 3, 5, 3, 1, 4, 7, 2, 3, 8, 2, 5, 1, 4, 1, 7, 5, 6, 7, 1, 6, 4, 6, 8, 8, 3, 3, 4, 9, 2, 5, 0, 3, 3, 3, 9, 8, 4, 0, 2, 1, 5, 3, 3, 1, 0, 0, 3, 5, 8, 3, 8, 7, 1, 1, 9, 5, 9, 9, 7, 3, 5, 3, 5, 0, 7, 2, 9, 1, 0, 3, 5, 9, 6, 7, 4, 1, 2, 3, 6, 1, 0, 4, 7, 0, 5, 9, 7, 4, 8, 0, 4, 0, 2, 8, 7, 3, 1, 0, 8, 1, 6, 5, 8, 9, 7, 5, 6, 5, 7, 0, 8, 9, 1, 5, 1, 9, 9, 2, 8, 7, 8, 7, 2, 8]
  0%|          | 0/100 [00:00<?, ?it/s]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  1%|          | 1/100 [00:12<21:26, 12.99s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  2%|▏         | 2/100 [00:26<21:19, 13.06s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  3%|▎         | 3/100 [00:39<21:05, 13.05s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  4%|▍         | 4/100 [00:51<20:31, 12.83s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  5%|▌         | 5/100 [01:04<20:32, 12.97s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  6%|▌         | 6/100 [01:17<20:11, 12.89s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  7%|▋         | 7/100 [01:30<20:04, 12.95s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  8%|▊         | 8/100 [01:43<19:52, 12.96s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  9%|▉         | 9/100 [01:57<20:01, 13.21s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 10%|█         | 10/100 [02:08<18:54, 12.61s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 11%|█         | 11/100 [02:21<18:58, 12.79s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 12%|█▏        | 12/100 [02:34<18:40, 12.74s/it]
 | Global Training Round : 1 |

user 31, loss 2.289158720970154, acc 0.08
user 53, loss 2.279264235496521, acc 0.14
user 80, loss 2.290380800366402, acc 0.2
user 86, loss 2.2906135940551757, acc 0.16
user 9, loss 2.290573735833168, acc 0.16
user 7, loss 2.2851667004823684, acc 0.26
user 77, loss 2.2908347821235657, acc 0.22
user 49, loss 2.2931082582473756, acc 0.18
user 90, loss 2.2894998949766157, acc 0.14
user 79, loss 2.288360035419464, acc 0.28
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 1 global rounds:
Training Loss : 2.2886960757970813
Global model Benign Test Accuracy: 17.65% 

Global model Malicious Accuracy: 20.21%, Malicious Loss: 10880.81 , Outputs: tensor([0.1005, 0.1006, 0.1007, 0.1004, 0.1003, 0.1013, 0.1004, 0.1000, 0.1004,
        0.1008])


 | Global Training Round : 2 |

user 30, loss 2.034014320075512, acc 0.26
user 20, loss 2.078242594599724, acc 0.26
user 19, loss 2.0779920268058776, acc 0.18
user 39, loss 2.0489383438229565, acc 0.3
user 48, loss 2.1018981221318245, acc 0.38
user 78, loss 2.0660006707906726, acc 0.34
user 11, loss 2.0781192576885226, acc 0.22
user 24, loss 2.123626254796982, acc 0.28
Malcious user 59 is selected!
user 59, loss 2.0438721321523188, acc 0.3, mal loss 87.74013710021973, mal acc 0.325
user 33, loss 2.057667854130268, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 2 global rounds:
Training Loss : 2.1798666167482734
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 3 |

Malcious user 65 is selected!
user 65, loss nan, acc 0.14, mal loss nan, mal acc 0.09166666666666666
user 63, loss nan, acc 0.12
user 19, loss nan, acc 0.04
user 2, loss nan, acc 0.12
user 85, loss nan, acc 0.1
user 79, loss nan, acc 0.04
user 83, loss nan, acc 0.16
user 56, loss nan, acc 0.1
user 69, loss nan, acc 0.12
user 26, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 3 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 4 |

Malcious user 57 is selected!
user 57, loss nan, acc 0.1, mal loss nan, mal acc 0.09166666666666666
user 96, loss nan, acc 0.1
user 60, loss nan, acc 0.08
user 72, loss nan, acc 0.1
user 25, loss nan, acc 0.12
user 97, loss nan, acc 0.08
user 78, loss nan, acc 0.12
user 53, loss nan, acc 0.08
user 32, loss nan, acc 0.04
user 42, loss nan, acc 0.04
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 4 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 5 |

user 41, loss nan, acc 0.12
user 10, loss nan, acc 0.08
user 49, loss nan, acc 0.04
user 58, loss nan, acc 0.16
user 46, loss nan, acc 0.08
user 91, loss nan, acc 0.06
user 34, loss nan, acc 0.06
user 45, loss nan, acc 0.14
user 50, loss nan, acc 0.18
user 38, loss nan, acc 0.18
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 5 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 6 |

user 46, loss nan, acc 0.08
user 91, loss nan, acc 0.06
user 86, loss nan, acc 0.06
user 6, loss nan, acc 0.14
user 42, loss nan, acc 0.04
user 37, loss nan, acc 0.28
user 9, loss nan, acc 0.1
user 71, loss nan, acc 0.16
user 5, loss nan, acc 0.08
user 1, loss nan, acc 0.08
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 6 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 7 |

user 19, loss nan, acc 0.04
user 10, loss nan, acc 0.08
user 44, loss nan, acc 0.06
user 6, loss nan, acc 0.14
user 46, loss nan, acc 0.08
user 22, loss nan, acc 0.06
user 79, loss nan, acc 0.04
Malcious user 59 is selected!
user 59, loss nan, acc 0.04, mal loss nan, mal acc 0.09166666666666666
user 13, loss nan, acc 0.04
user 74, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 7 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 8 |

user 11, loss nan, acc 0.14
user 77, loss nan, acc 0.1
user 25, loss nan, acc 0.12
Malcious user 64 is selected!
user 64, loss nan, acc 0.16, mal loss nan, mal acc 0.09166666666666666
user 89, loss nan, acc 0.12
user 1, loss nan, acc 0.08
user 40, loss nan, acc 0.08
Malcious user 55 is selected!
user 55, loss nan, acc 0.1, mal loss nan, mal acc 0.09166666666666666
user 72, loss nan, acc 0.1
user 50, loss nan, acc 0.18
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 8 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 9 |

user 32, loss nan, acc 0.04
user 27, loss nan, acc 0.06
user 2, loss nan, acc 0.12
user 20, loss nan, acc 0.04
user 28, loss nan, acc 0.08
user 49, loss nan, acc 0.04
user 9, loss nan, acc 0.1
user 92, loss nan, acc 0.12
user 56, loss nan, acc 0.1
user 54, loss nan, acc 0.08
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 9 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 10 |

user 45, loss nan, acc 0.14
user 18, loss nan, acc 0.1
user 28, loss nan, acc 0.08
Malcious user 8 is selected!
user 8, loss nan, acc 0.12, mal loss nan, mal acc 0.09166666666666666
user 96, loss nan, acc 0.1
Malcious user 15 is selected!
user 15, loss nan, acc 0.08, mal loss nan, mal acc 0.09166666666666666
user 58, loss nan, acc 0.16
user 6, loss nan, acc 0.14
user 43, loss nan, acc 0.18
user 21, loss nan, acc 0.02
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 10 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 11 |

user 0, loss nan, acc 0.08
user 97, loss nan, acc 0.08
Malcious user 8 is selected!
user 8, loss nan, acc 0.12, mal loss nan, mal acc 0.09166666666666666
user 33, loss nan, acc 0.06
user 67, loss nan, acc 0.12
user 18, loss nan, acc 0.1
user 43, loss nan, acc 0.18
user 69, loss nan, acc 0.12
user 2, loss nan, acc 0.12
user 32, loss nan, acc 0.04
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 11 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 12 |

user 0, loss nan, acc 0.08
user 79, loss nan, acc 0.04
user 37, loss nan, acc 0.28
user 53, loss nan, acc 0.08
user 10, loss nan, acc 0.08
user 13, loss nan, acc 0.04
user 42, loss nan, acc 0.04
user 60, loss nan, acc 0.08
user 29, loss nan, acc 0.18
user 87, loss nan, acc 0.08
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 12 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 13 |

user 3, loss nan, acc 0.08
user 45, loss nan, acc 0.14
user 39, loss nan, acc 0.2
user 10, loss nan, acc 0.08
user 52, loss nan, acc 0.12
user 49, loss nan, acc 0.04
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 13%|█▎        | 13/100 [02:47<18:48, 12.97s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 14%|█▍        | 14/100 [03:01<18:50, 13.15s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 15%|█▌        | 15/100 [03:14<18:22, 12.97s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 16%|█▌        | 16/100 [03:27<18:26, 13.17s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 17%|█▋        | 17/100 [03:40<18:03, 13.05s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 18%|█▊        | 18/100 [03:53<18:01, 13.19s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 19%|█▉        | 19/100 [04:07<17:48, 13.20s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 20%|██        | 20/100 [04:19<17:05, 12.82s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 21%|██        | 21/100 [04:32<17:12, 13.07s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 22%|██▏       | 22/100 [04:45<16:53, 13.00s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 23%|██▎       | 23/100 [04:59<16:54, 13.18s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 24%|██▍       | 24/100 [05:11<16:20, 12.90s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 25%|██▌       | 25/100 [05:24<16:04, 12.85s/it]user 23, loss nan, acc 0.1
user 14, loss nan, acc 0.16
user 87, loss nan, acc 0.08
user 18, loss nan, acc 0.1
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 13 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 14 |

user 86, loss nan, acc 0.06
user 82, loss nan, acc 0.18
user 17, loss nan, acc 0.14
user 54, loss nan, acc 0.08
user 83, loss nan, acc 0.16
user 70, loss nan, acc 0.14
user 20, loss nan, acc 0.04
user 22, loss nan, acc 0.06
user 85, loss nan, acc 0.1
user 79, loss nan, acc 0.04
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 14 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 15 |

user 11, loss nan, acc 0.14
user 56, loss nan, acc 0.1
user 46, loss nan, acc 0.08
user 19, loss nan, acc 0.04
user 31, loss nan, acc 0.1
user 62, loss nan, acc 0.18
user 70, loss nan, acc 0.14
user 53, loss nan, acc 0.08
user 21, loss nan, acc 0.02
user 43, loss nan, acc 0.18
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 15 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 16 |

user 16, loss nan, acc 0.12
user 51, loss nan, acc 0.1
user 53, loss nan, acc 0.08
user 23, loss nan, acc 0.1
user 78, loss nan, acc 0.12
user 12, loss nan, acc 0.12
user 91, loss nan, acc 0.06
user 69, loss nan, acc 0.12
user 83, loss nan, acc 0.16
user 49, loss nan, acc 0.04
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 16 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 17 |

user 44, loss nan, acc 0.06
user 18, loss nan, acc 0.1
user 92, loss nan, acc 0.12
user 90, loss nan, acc 0.08
user 49, loss nan, acc 0.04
user 78, loss nan, acc 0.12
user 0, loss nan, acc 0.08
user 38, loss nan, acc 0.18
user 16, loss nan, acc 0.12
user 95, loss nan, acc 0.06
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 17 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 18 |

user 5, loss nan, acc 0.08
user 63, loss nan, acc 0.12
user 30, loss nan, acc 0.1
Malcious user 8 is selected!
user 8, loss nan, acc 0.12, mal loss nan, mal acc 0.09166666666666666
user 14, loss nan, acc 0.16
user 96, loss nan, acc 0.1
user 16, loss nan, acc 0.12
user 68, loss nan, acc 0.08
user 77, loss nan, acc 0.1
user 10, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 18 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 19 |

user 31, loss nan, acc 0.1
user 16, loss nan, acc 0.12
user 45, loss nan, acc 0.14
user 81, loss nan, acc 0.04
user 68, loss nan, acc 0.08
user 49, loss nan, acc 0.04
user 17, loss nan, acc 0.14
user 82, loss nan, acc 0.18
Malcious user 65 is selected!
user 65, loss nan, acc 0.14, mal loss nan, mal acc 0.09166666666666666
user 30, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 19 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 20 |

user 2, loss nan, acc 0.12
user 82, loss nan, acc 0.18
user 44, loss nan, acc 0.06
user 71, loss nan, acc 0.16
user 78, loss nan, acc 0.12
Malcious user 64 is selected!
user 64, loss nan, acc 0.16, mal loss nan, mal acc 0.09166666666666666
user 95, loss nan, acc 0.06
user 66, loss nan, acc 0.14
user 11, loss nan, acc 0.14
Malcious user 55 is selected!
user 55, loss nan, acc 0.1, mal loss nan, mal acc 0.09166666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 20 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 21 |

user 7, loss nan, acc 0.04
user 70, loss nan, acc 0.14
user 12, loss nan, acc 0.12
user 42, loss nan, acc 0.04
user 76, loss nan, acc 0.16
user 28, loss nan, acc 0.08
user 43, loss nan, acc 0.18
user 18, loss nan, acc 0.1
user 82, loss nan, acc 0.18
user 27, loss nan, acc 0.06
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 21 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 22 |

user 88, loss nan, acc 0.08
Malcious user 8 is selected!
user 8, loss nan, acc 0.12, mal loss nan, mal acc 0.09166666666666666
user 41, loss nan, acc 0.12
user 40, loss nan, acc 0.08
user 50, loss nan, acc 0.18
user 42, loss nan, acc 0.04
user 31, loss nan, acc 0.1
user 60, loss nan, acc 0.08
user 83, loss nan, acc 0.16
user 1, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 22 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 23 |

user 5, loss nan, acc 0.08
user 49, loss nan, acc 0.04
user 97, loss nan, acc 0.08
user 3, loss nan, acc 0.08
user 41, loss nan, acc 0.12
user 56, loss nan, acc 0.1
user 54, loss nan, acc 0.08
user 44, loss nan, acc 0.06
user 21, loss nan, acc 0.02
user 24, loss nan, acc 0.12
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 23 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 24 |

user 28, loss nan, acc 0.08
user 50, loss nan, acc 0.18
user 49, loss nan, acc 0.04
user 20, loss nan, acc 0.04
user 56, loss nan, acc 0.1
user 40, loss nan, acc 0.08
Malcious user 57 is selected!
user 57, loss nan, acc 0.1, mal loss nan, mal acc 0.09166666666666666
user 96, loss nan, acc 0.1
user 61, loss nan, acc 0.08
Malcious user 59 is selected!
user 59, loss nan, acc 0.04, mal loss nan, mal acc 0.09166666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 24 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 25 |

Malcious user 65 is selected!
user 65, loss nan, acc 0.14, mal loss nan, mal acc 0.09166666666666666
user 76, loss nan, acc 0.16
user 44, loss nan, acc 0.06
user 17, loss nan, acc 0.14
user 80, loss nan, acc 0.2
user 23, loss nan, acc 0.1
user 78, loss nan, acc 0.12
user 22, loss nan, acc 0.06
user 70, loss nan, acc 0.14
user 45, loss nan, acc 0.14
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 25 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 26 |

user 79, loss nan, acc 0.04
user 22, loss nan, acc 0.06
user 48, loss nan, acc 0.1
user 9, loss nan, acc 0.1
user 29, loss nan, acc 0.18
user 2, loss nan, acc 0.12
user 72, loss nan, acc 0.1
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 26%|██▌       | 26/100 [05:37<16:00, 12.98s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 27%|██▋       | 27/100 [05:50<15:38, 12.85s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 28%|██▊       | 28/100 [06:02<15:25, 12.85s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 29%|██▉       | 29/100 [06:14<14:55, 12.62s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 30%|███       | 30/100 [06:28<15:04, 12.93s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 31%|███       | 31/100 [06:41<14:59, 13.04s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 32%|███▏      | 32/100 [06:54<14:40, 12.95s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 33%|███▎      | 33/100 [07:07<14:31, 13.01s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 34%|███▍      | 34/100 [07:19<13:56, 12.68s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 35%|███▌      | 35/100 [07:33<14:00, 12.92s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 36%|███▌      | 36/100 [07:46<13:55, 13.05s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 37%|███▋      | 37/100 [07:59<13:32, 12.89s/it]user 50, loss nan, acc 0.18
user 70, loss nan, acc 0.14
user 37, loss nan, acc 0.28
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 26 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 27 |

user 72, loss nan, acc 0.1
user 61, loss nan, acc 0.08
user 94, loss nan, acc 0.1
user 76, loss nan, acc 0.16
user 53, loss nan, acc 0.08
user 48, loss nan, acc 0.1
user 97, loss nan, acc 0.08
user 80, loss nan, acc 0.2
user 30, loss nan, acc 0.1
user 32, loss nan, acc 0.04
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 27 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 28 |

user 1, loss nan, acc 0.08
user 21, loss nan, acc 0.02
user 35, loss nan, acc 0.12
user 45, loss nan, acc 0.14
user 94, loss nan, acc 0.1
Malcious user 93 is selected!
user 93, loss nan, acc 0.16, mal loss nan, mal acc 0.09166666666666666
user 78, loss nan, acc 0.12
user 90, loss nan, acc 0.08
user 53, loss nan, acc 0.08
Malcious user 15 is selected!
user 15, loss nan, acc 0.08, mal loss nan, mal acc 0.09166666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 28 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 29 |

Malcious user 65 is selected!
user 65, loss nan, acc 0.14, mal loss nan, mal acc 0.09166666666666666
user 21, loss nan, acc 0.02
user 76, loss nan, acc 0.16
Malcious user 15 is selected!
user 15, loss nan, acc 0.08, mal loss nan, mal acc 0.09166666666666666
user 3, loss nan, acc 0.08
Malcious user 55 is selected!
user 55, loss nan, acc 0.1, mal loss nan, mal acc 0.09166666666666666
user 17, loss nan, acc 0.14
user 2, loss nan, acc 0.12
user 71, loss nan, acc 0.16
user 29, loss nan, acc 0.18
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 29 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 30 |

user 70, loss nan, acc 0.14
user 68, loss nan, acc 0.08
user 32, loss nan, acc 0.04
user 0, loss nan, acc 0.08
user 85, loss nan, acc 0.1
user 84, loss nan, acc 0.1
user 33, loss nan, acc 0.06
user 24, loss nan, acc 0.12
user 92, loss nan, acc 0.12
user 54, loss nan, acc 0.08
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 30 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 31 |

user 39, loss nan, acc 0.2
user 66, loss nan, acc 0.14
user 7, loss nan, acc 0.04
user 94, loss nan, acc 0.1
user 12, loss nan, acc 0.12
user 76, loss nan, acc 0.16
user 34, loss nan, acc 0.06
Malcious user 93 is selected!
user 93, loss nan, acc 0.16, mal loss nan, mal acc 0.09166666666666666
user 58, loss nan, acc 0.16
user 4, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 31 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 32 |

user 11, loss nan, acc 0.14
user 29, loss nan, acc 0.18
user 44, loss nan, acc 0.06
user 51, loss nan, acc 0.1
user 88, loss nan, acc 0.08
user 60, loss nan, acc 0.08
user 36, loss nan, acc 0.12
user 13, loss nan, acc 0.04
user 52, loss nan, acc 0.12
user 83, loss nan, acc 0.16
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 32 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 33 |

user 71, loss nan, acc 0.16
user 9, loss nan, acc 0.1
user 92, loss nan, acc 0.12
user 32, loss nan, acc 0.04
user 68, loss nan, acc 0.08
user 25, loss nan, acc 0.12
user 87, loss nan, acc 0.08
user 17, loss nan, acc 0.14
Malcious user 15 is selected!
user 15, loss nan, acc 0.08, mal loss nan, mal acc 0.09166666666666666
user 77, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 33 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 34 |

user 19, loss nan, acc 0.04
user 87, loss nan, acc 0.08
Malcious user 55 is selected!
user 55, loss nan, acc 0.1, mal loss nan, mal acc 0.09166666666666666
Malcious user 93 is selected!
user 93, loss nan, acc 0.16, mal loss nan, mal acc 0.09166666666666666
user 85, loss nan, acc 0.1
user 63, loss nan, acc 0.12
user 86, loss nan, acc 0.06
user 9, loss nan, acc 0.1
user 47, loss nan, acc 0.04
user 44, loss nan, acc 0.06
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 34 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 35 |

user 31, loss nan, acc 0.1
user 2, loss nan, acc 0.12
user 6, loss nan, acc 0.14
user 39, loss nan, acc 0.2
user 51, loss nan, acc 0.1
user 38, loss nan, acc 0.18
user 18, loss nan, acc 0.1
Malcious user 93 is selected!
user 93, loss nan, acc 0.16, mal loss nan, mal acc 0.09166666666666666
user 68, loss nan, acc 0.08
user 35, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 35 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 36 |

user 61, loss nan, acc 0.08
user 42, loss nan, acc 0.04
user 7, loss nan, acc 0.04
user 77, loss nan, acc 0.1
user 79, loss nan, acc 0.04
user 32, loss nan, acc 0.04
Malcious user 15 is selected!
user 15, loss nan, acc 0.08, mal loss nan, mal acc 0.09166666666666666
user 46, loss nan, acc 0.08
user 3, loss nan, acc 0.08
user 78, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 36 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 37 |

user 78, loss nan, acc 0.12
user 30, loss nan, acc 0.1
user 23, loss nan, acc 0.1
user 99, loss nan, acc 0.12
user 83, loss nan, acc 0.16
Malcious user 15 is selected!
user 15, loss nan, acc 0.08, mal loss nan, mal acc 0.09166666666666666
user 0, loss nan, acc 0.08
user 89, loss nan, acc 0.12
user 2, loss nan, acc 0.12
user 54, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 37 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 38 |

user 24, loss nan, acc 0.12
user 31, loss nan, acc 0.1
user 0, loss nan, acc 0.08
Malcious user 98 is selected!
user 98, loss nan, acc 0.1, mal loss nan, mal acc 0.09166666666666666
user 27, loss nan, acc 0.06
Malcious user 55 is selected!
user 55, loss nan, acc 0.1, mal loss nan, mal acc 0.09166666666666666
user 52, loss nan, acc 0.12
user 76, loss nan, acc 0.16
user 34, loss nan, acc 0.06
Malcious user 65 is selected!
user 65, loss nan, acc 0.14, mal loss nan, mal acc 0.09166666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 38%|███▊      | 38/100 [08:12<13:20, 12.92s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 39%|███▉      | 39/100 [08:23<12:49, 12.61s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 40%|████      | 40/100 [08:37<12:47, 12.79s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 41%|████      | 41/100 [08:49<12:26, 12.66s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 42%|████▏     | 42/100 [09:02<12:20, 12.77s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 43%|████▎     | 43/100 [09:15<12:10, 12.82s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 44%|████▍     | 44/100 [09:28<11:56, 12.79s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 45%|████▌     | 45/100 [09:41<11:58, 13.06s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 46%|████▌     | 46/100 [09:54<11:32, 12.82s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 47%|████▋     | 47/100 [10:07<11:29, 13.01s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 48%|████▊     | 48/100 [10:20<11:18, 13.06s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 49%|████▉     | 49/100 [10:33<11:00, 12.96s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 50%|█████     | 50/100 [10:46<10:47, 12.95s/it] 
Avg Training Stats after 38 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 39 |

user 35, loss nan, acc 0.12
user 97, loss nan, acc 0.08
Malcious user 8 is selected!
user 8, loss nan, acc 0.12, mal loss nan, mal acc 0.09166666666666666
user 16, loss nan, acc 0.12
user 88, loss nan, acc 0.08
user 79, loss nan, acc 0.04
Malcious user 15 is selected!
user 15, loss nan, acc 0.08, mal loss nan, mal acc 0.09166666666666666
user 9, loss nan, acc 0.1
user 41, loss nan, acc 0.12
user 95, loss nan, acc 0.06
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 39 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 40 |

user 97, loss nan, acc 0.08
user 70, loss nan, acc 0.14
user 11, loss nan, acc 0.14
Malcious user 93 is selected!
user 93, loss nan, acc 0.16, mal loss nan, mal acc 0.09166666666666666
user 44, loss nan, acc 0.06
user 78, loss nan, acc 0.12
Malcious user 8 is selected!
user 8, loss nan, acc 0.12, mal loss nan, mal acc 0.09166666666666666
user 41, loss nan, acc 0.12
user 94, loss nan, acc 0.1
user 80, loss nan, acc 0.2
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 40 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 41 |

user 18, loss nan, acc 0.1
user 52, loss nan, acc 0.12
user 88, loss nan, acc 0.08
user 45, loss nan, acc 0.14
user 1, loss nan, acc 0.08
user 69, loss nan, acc 0.12
user 78, loss nan, acc 0.12
Malcious user 75 is selected!
user 75, loss nan, acc 0.12, mal loss nan, mal acc 0.09166666666666666
user 81, loss nan, acc 0.04
user 66, loss nan, acc 0.14
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 41 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 42 |

user 52, loss nan, acc 0.12
user 17, loss nan, acc 0.14
user 61, loss nan, acc 0.08
user 81, loss nan, acc 0.04
user 7, loss nan, acc 0.04
user 90, loss nan, acc 0.08
user 1, loss nan, acc 0.08
user 36, loss nan, acc 0.12
user 48, loss nan, acc 0.1
user 84, loss nan, acc 0.1
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 42 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 43 |

user 52, loss nan, acc 0.12
user 41, loss nan, acc 0.12
user 51, loss nan, acc 0.1
user 89, loss nan, acc 0.12
user 68, loss nan, acc 0.08
user 1, loss nan, acc 0.08
user 71, loss nan, acc 0.16
user 32, loss nan, acc 0.04
user 85, loss nan, acc 0.1
Malcious user 15 is selected!
user 15, loss nan, acc 0.08, mal loss nan, mal acc 0.09166666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 43 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 44 |

user 96, loss nan, acc 0.1
user 12, loss nan, acc 0.12
user 77, loss nan, acc 0.1
user 53, loss nan, acc 0.08
user 51, loss nan, acc 0.1
user 34, loss nan, acc 0.06
user 38, loss nan, acc 0.18
user 73, loss nan, acc 0.06
user 99, loss nan, acc 0.12
user 35, loss nan, acc 0.12
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 44 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 45 |

user 60, loss nan, acc 0.08
user 21, loss nan, acc 0.02
user 89, loss nan, acc 0.12
user 33, loss nan, acc 0.06
user 62, loss nan, acc 0.18
user 50, loss nan, acc 0.18
user 30, loss nan, acc 0.1
user 85, loss nan, acc 0.1
user 99, loss nan, acc 0.12
user 72, loss nan, acc 0.1
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 45 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 46 |

user 78, loss nan, acc 0.12
user 26, loss nan, acc 0.1
user 34, loss nan, acc 0.06
user 66, loss nan, acc 0.14
user 49, loss nan, acc 0.04
user 63, loss nan, acc 0.12
user 2, loss nan, acc 0.12
user 87, loss nan, acc 0.08
Malcious user 65 is selected!
user 65, loss nan, acc 0.14, mal loss nan, mal acc 0.09166666666666666
user 77, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 46 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 47 |

user 46, loss nan, acc 0.08
user 72, loss nan, acc 0.1
user 77, loss nan, acc 0.1
user 7, loss nan, acc 0.04
user 25, loss nan, acc 0.12
user 92, loss nan, acc 0.12
user 2, loss nan, acc 0.12
user 9, loss nan, acc 0.1
user 24, loss nan, acc 0.12
user 84, loss nan, acc 0.1
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 47 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 48 |

user 92, loss nan, acc 0.12
user 6, loss nan, acc 0.14
user 56, loss nan, acc 0.1
Malcious user 64 is selected!
user 64, loss nan, acc 0.16, mal loss nan, mal acc 0.09166666666666666
user 35, loss nan, acc 0.12
user 85, loss nan, acc 0.1
user 3, loss nan, acc 0.08
user 1, loss nan, acc 0.08
user 27, loss nan, acc 0.06
Malcious user 8 is selected!
user 8, loss nan, acc 0.12, mal loss nan, mal acc 0.09166666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 48 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 49 |

user 36, loss nan, acc 0.12
user 21, loss nan, acc 0.02
user 39, loss nan, acc 0.2
user 53, loss nan, acc 0.08
user 19, loss nan, acc 0.04
Malcious user 8 is selected!
user 8, loss nan, acc 0.12, mal loss nan, mal acc 0.09166666666666666
user 40, loss nan, acc 0.08
user 80, loss nan, acc 0.2
user 77, loss nan, acc 0.1
user 9, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 49 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 50 |

Malcious user 8 is selected!
user 8, loss nan, acc 0.12, mal loss nan, mal acc 0.09166666666666666
user 22, loss nan, acc 0.06
user 39, loss nan, acc 0.2
user 44, loss nan, acc 0.06
user 29, loss nan, acc 0.18
user 10, loss nan, acc 0.08
user 20, loss nan, acc 0.04
user 26, loss nan, acc 0.1
user 47, loss nan, acc 0.04
user 1, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 50 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 51 |

user 48, loss nan, acc 0.1
user 51, loss nan, acc 0.1
user 17, loss nan, acc 0.14
user 80, loss nan, acc 0.2
user 26, loss nan, acc 0.1
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 51%|█████     | 51/100 [10:59<10:33, 12.93s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 52%|█████▏    | 52/100 [11:12<10:28, 13.09s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 53%|█████▎    | 53/100 [11:25<10:14, 13.07s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 54%|█████▍    | 54/100 [11:37<09:49, 12.81s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 55%|█████▌    | 55/100 [11:51<09:42, 12.94s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 56%|█████▌    | 56/100 [12:03<09:26, 12.88s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 57%|█████▋    | 57/100 [12:16<09:14, 12.89s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 58%|█████▊    | 58/100 [12:29<09:03, 12.93s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 59%|█████▉    | 59/100 [12:43<08:58, 13.14s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 60%|██████    | 60/100 [12:56<08:47, 13.20s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 61%|██████    | 61/100 [13:08<08:19, 12.81s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 62%|██████▏   | 62/100 [13:22<08:19, 13.14s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
user 6, loss nan, acc 0.14
user 11, loss nan, acc 0.14
user 16, loss nan, acc 0.12
user 28, loss nan, acc 0.08
user 33, loss nan, acc 0.06
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 51 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 52 |

user 71, loss nan, acc 0.16
user 96, loss nan, acc 0.1
user 10, loss nan, acc 0.08
user 7, loss nan, acc 0.04
user 21, loss nan, acc 0.02
user 32, loss nan, acc 0.04
user 78, loss nan, acc 0.12
user 2, loss nan, acc 0.12
user 19, loss nan, acc 0.04
user 90, loss nan, acc 0.08
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 52 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 53 |

user 35, loss nan, acc 0.12
user 39, loss nan, acc 0.2
user 11, loss nan, acc 0.14
Malcious user 98 is selected!
user 98, loss nan, acc 0.1, mal loss nan, mal acc 0.09166666666666666
user 97, loss nan, acc 0.08
user 69, loss nan, acc 0.12
user 10, loss nan, acc 0.08
user 34, loss nan, acc 0.06
user 85, loss nan, acc 0.1
user 38, loss nan, acc 0.18
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 53 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 54 |

user 67, loss nan, acc 0.12
user 39, loss nan, acc 0.2
user 78, loss nan, acc 0.12
Malcious user 8 is selected!
user 8, loss nan, acc 0.12, mal loss nan, mal acc 0.09166666666666666
user 26, loss nan, acc 0.1
user 44, loss nan, acc 0.06
user 86, loss nan, acc 0.06
Malcious user 65 is selected!
user 65, loss nan, acc 0.14, mal loss nan, mal acc 0.09166666666666666
user 41, loss nan, acc 0.12
user 17, loss nan, acc 0.14
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 54 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 55 |

user 82, loss nan, acc 0.18
user 34, loss nan, acc 0.06
user 48, loss nan, acc 0.1
user 89, loss nan, acc 0.12
Malcious user 59 is selected!
user 59, loss nan, acc 0.04, mal loss nan, mal acc 0.09166666666666666
user 51, loss nan, acc 0.1
user 81, loss nan, acc 0.04
user 7, loss nan, acc 0.04
user 87, loss nan, acc 0.08
user 36, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 55 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 56 |

user 81, loss nan, acc 0.04
user 89, loss nan, acc 0.12
user 62, loss nan, acc 0.18
user 35, loss nan, acc 0.12
user 47, loss nan, acc 0.04
user 48, loss nan, acc 0.1
user 82, loss nan, acc 0.18
user 21, loss nan, acc 0.02
user 28, loss nan, acc 0.08
user 22, loss nan, acc 0.06
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 56 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 57 |

user 58, loss nan, acc 0.16
user 96, loss nan, acc 0.1
user 10, loss nan, acc 0.08
user 61, loss nan, acc 0.08
Malcious user 64 is selected!
user 64, loss nan, acc 0.16, mal loss nan, mal acc 0.09166666666666666
Malcious user 93 is selected!
user 93, loss nan, acc 0.16, mal loss nan, mal acc 0.09166666666666666
user 24, loss nan, acc 0.12
user 52, loss nan, acc 0.12
user 47, loss nan, acc 0.04
user 97, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 57 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 58 |

user 34, loss nan, acc 0.06
user 33, loss nan, acc 0.06
user 17, loss nan, acc 0.14
user 79, loss nan, acc 0.04
user 23, loss nan, acc 0.1
user 88, loss nan, acc 0.08
user 60, loss nan, acc 0.08
user 56, loss nan, acc 0.1
user 9, loss nan, acc 0.1
user 99, loss nan, acc 0.12
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 58 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 59 |

user 68, loss nan, acc 0.08
user 51, loss nan, acc 0.1
user 17, loss nan, acc 0.14
user 49, loss nan, acc 0.04
user 47, loss nan, acc 0.04
user 25, loss nan, acc 0.12
user 14, loss nan, acc 0.16
user 67, loss nan, acc 0.12
user 9, loss nan, acc 0.1
user 91, loss nan, acc 0.06
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 59 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 60 |

user 69, loss nan, acc 0.12
user 35, loss nan, acc 0.12
user 14, loss nan, acc 0.16
Malcious user 93 is selected!
user 93, loss nan, acc 0.16, mal loss nan, mal acc 0.09166666666666666
Malcious user 55 is selected!
user 55, loss nan, acc 0.1, mal loss nan, mal acc 0.09166666666666666
user 4, loss nan, acc 0.12
user 32, loss nan, acc 0.04
user 47, loss nan, acc 0.04
user 52, loss nan, acc 0.12
Malcious user 15 is selected!
user 15, loss nan, acc 0.08, mal loss nan, mal acc 0.09166666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 60 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 61 |

user 77, loss nan, acc 0.1
user 34, loss nan, acc 0.06
user 38, loss nan, acc 0.18
Malcious user 15 is selected!
user 15, loss nan, acc 0.08, mal loss nan, mal acc 0.09166666666666666
user 31, loss nan, acc 0.1
user 49, loss nan, acc 0.04
user 83, loss nan, acc 0.16
Malcious user 98 is selected!
user 98, loss nan, acc 0.1, mal loss nan, mal acc 0.09166666666666666
user 52, loss nan, acc 0.12
user 1, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 61 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 62 |

user 24, loss nan, acc 0.12
user 44, loss nan, acc 0.06
user 41, loss nan, acc 0.12
user 95, loss nan, acc 0.06
user 63, loss nan, acc 0.12
user 71, loss nan, acc 0.16
user 94, loss nan, acc 0.1
user 76, loss nan, acc 0.16
user 47, loss nan, acc 0.04
user 60, loss nan, acc 0.08
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 62 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 63 |

user 85, loss nan, acc 0.1
user 21, loss nan, acc 0.02
user 66, loss nan, acc 0.14
user 35, loss nan, acc 0.12
user 82, loss nan, acc 0.18
user 76, loss nan, acc 0.16
user 99, loss nan, acc 0.12
user 1, loss nan, acc 0.08
Malcious user 93 is selected!
user 93, loss nan, acc 0.16, mal loss nan, mal acc 0.09166666666666666
user 60, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 63 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

 63%|██████▎   | 63/100 [13:35<07:57, 12.91s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 64%|██████▍   | 64/100 [13:48<07:46, 12.95s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 65%|██████▌   | 65/100 [14:01<07:35, 13.00s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 66%|██████▌   | 66/100 [14:12<07:05, 12.51s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 67%|██████▋   | 67/100 [14:25<06:58, 12.67s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 68%|██████▊   | 68/100 [14:36<06:30, 12.21s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 69%|██████▉   | 69/100 [14:49<06:20, 12.27s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 70%|███████   | 70/100 [15:01<06:10, 12.33s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 71%|███████   | 71/100 [15:13<05:56, 12.29s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 72%|███████▏  | 72/100 [15:27<05:52, 12.57s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 73%|███████▎  | 73/100 [15:39<05:34, 12.40s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 74%|███████▍  | 74/100 [15:51<05:20, 12.32s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 64 |

user 45, loss nan, acc 0.14
user 56, loss nan, acc 0.1
user 70, loss nan, acc 0.14
user 73, loss nan, acc 0.06
user 25, loss nan, acc 0.12
user 32, loss nan, acc 0.04
Malcious user 65 is selected!
user 65, loss nan, acc 0.14, mal loss nan, mal acc 0.09166666666666666
Malcious user 55 is selected!
user 55, loss nan, acc 0.1, mal loss nan, mal acc 0.09166666666666666
user 23, loss nan, acc 0.1
user 7, loss nan, acc 0.04
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 64 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 65 |

user 62, loss nan, acc 0.18
user 18, loss nan, acc 0.1
user 52, loss nan, acc 0.12
user 73, loss nan, acc 0.06
user 82, loss nan, acc 0.18
user 54, loss nan, acc 0.08
user 41, loss nan, acc 0.12
user 71, loss nan, acc 0.16
user 16, loss nan, acc 0.12
user 4, loss nan, acc 0.12
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 65 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 66 |

user 96, loss nan, acc 0.1
user 24, loss nan, acc 0.12
user 43, loss nan, acc 0.18
user 26, loss nan, acc 0.1
user 91, loss nan, acc 0.06
Malcious user 65 is selected!
user 65, loss nan, acc 0.14, mal loss nan, mal acc 0.09166666666666666
user 20, loss nan, acc 0.04
user 21, loss nan, acc 0.02
Malcious user 75 is selected!
user 75, loss nan, acc 0.12, mal loss nan, mal acc 0.09166666666666666
user 69, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 66 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 67 |

user 76, loss nan, acc 0.16
user 34, loss nan, acc 0.06
user 71, loss nan, acc 0.16
user 13, loss nan, acc 0.04
user 90, loss nan, acc 0.08
Malcious user 15 is selected!
user 15, loss nan, acc 0.08, mal loss nan, mal acc 0.09166666666666666
user 35, loss nan, acc 0.12
user 94, loss nan, acc 0.1
user 32, loss nan, acc 0.04
user 37, loss nan, acc 0.28
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 67 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 68 |

Malcious user 93 is selected!
user 93, loss nan, acc 0.16, mal loss nan, mal acc 0.09166666666666666
Malcious user 8 is selected!
user 8, loss nan, acc 0.12, mal loss nan, mal acc 0.09166666666666666
user 80, loss nan, acc 0.2
user 21, loss nan, acc 0.02
user 0, loss nan, acc 0.08
user 2, loss nan, acc 0.12
user 48, loss nan, acc 0.1
user 85, loss nan, acc 0.1
user 42, loss nan, acc 0.04
user 9, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 68 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 69 |

Malcious user 98 is selected!
user 98, loss nan, acc 0.1, mal loss nan, mal acc 0.09166666666666666
user 60, loss nan, acc 0.08
user 80, loss nan, acc 0.2
user 79, loss nan, acc 0.04
user 96, loss nan, acc 0.1
user 95, loss nan, acc 0.06
user 28, loss nan, acc 0.08
user 5, loss nan, acc 0.08
user 76, loss nan, acc 0.16
user 6, loss nan, acc 0.14
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 69 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 70 |

user 72, loss nan, acc 0.1
Malcious user 15 is selected!
user 15, loss nan, acc 0.08, mal loss nan, mal acc 0.09166666666666666
user 81, loss nan, acc 0.04
user 23, loss nan, acc 0.1
user 37, loss nan, acc 0.28
user 34, loss nan, acc 0.06
user 67, loss nan, acc 0.12
user 2, loss nan, acc 0.12
user 0, loss nan, acc 0.08
user 74, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 70 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 71 |

user 72, loss nan, acc 0.1
user 36, loss nan, acc 0.12
user 0, loss nan, acc 0.08
Malcious user 59 is selected!
user 59, loss nan, acc 0.04, mal loss nan, mal acc 0.09166666666666666
user 50, loss nan, acc 0.18
user 6, loss nan, acc 0.14
user 3, loss nan, acc 0.08
user 24, loss nan, acc 0.12
user 23, loss nan, acc 0.1
user 45, loss nan, acc 0.14
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 71 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 72 |

user 96, loss nan, acc 0.1
user 23, loss nan, acc 0.1
user 99, loss nan, acc 0.12
user 68, loss nan, acc 0.08
user 72, loss nan, acc 0.1
user 44, loss nan, acc 0.06
user 89, loss nan, acc 0.12
user 91, loss nan, acc 0.06
user 85, loss nan, acc 0.1
user 90, loss nan, acc 0.08
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 72 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 73 |

user 51, loss nan, acc 0.1
user 26, loss nan, acc 0.1
user 23, loss nan, acc 0.1
user 21, loss nan, acc 0.02
Malcious user 64 is selected!
user 64, loss nan, acc 0.16, mal loss nan, mal acc 0.09166666666666666
user 10, loss nan, acc 0.08
user 39, loss nan, acc 0.2
user 61, loss nan, acc 0.08
user 3, loss nan, acc 0.08
Malcious user 8 is selected!
user 8, loss nan, acc 0.12, mal loss nan, mal acc 0.09166666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 73 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 74 |

Malcious user 59 is selected!
user 59, loss nan, acc 0.04, mal loss nan, mal acc 0.09166666666666666
Malcious user 8 is selected!
user 8, loss nan, acc 0.12, mal loss nan, mal acc 0.09166666666666666
user 51, loss nan, acc 0.1
Malcious user 75 is selected!
user 75, loss nan, acc 0.12, mal loss nan, mal acc 0.09166666666666666
user 80, loss nan, acc 0.2
user 90, loss nan, acc 0.08
user 73, loss nan, acc 0.06
user 7, loss nan, acc 0.04
user 24, loss nan, acc 0.12
user 78, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 74 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 75 |

Malcious user 65 is selected!
user 65, loss nan, acc 0.14, mal loss nan, mal acc 0.09166666666666666
user 54, loss nan, acc 0.08
user 84, loss nan, acc 0.1
user 49, loss nan, acc 0.04
user 44, loss nan, acc 0.06
user 42, loss nan, acc 0.04
user 96, loss nan, acc 0.1
user 0, loss nan, acc 0.08
user 29, loss nan, acc 0.18
user 47, loss nan, acc 0.04
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 75 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

 75%|███████▌  | 75/100 [16:04<05:12, 12.50s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 76%|███████▌  | 76/100 [16:16<04:56, 12.36s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 77%|███████▋  | 77/100 [16:29<04:49, 12.59s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 78%|███████▊  | 78/100 [16:41<04:36, 12.57s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 79%|███████▉  | 79/100 [16:55<04:28, 12.78s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 80%|████████  | 80/100 [17:07<04:14, 12.74s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 81%|████████  | 81/100 [17:19<03:54, 12.36s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 82%|████████▏ | 82/100 [17:31<03:40, 12.28s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 83%|████████▎ | 83/100 [17:44<03:32, 12.49s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 84%|████████▍ | 84/100 [17:55<03:15, 12.25s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 85%|████████▌ | 85/100 [18:09<03:07, 12.51s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 86%|████████▌ | 86/100 [18:21<02:53, 12.43s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 87%|████████▋ | 87/100 [18:34<02:45, 12.75s/it]Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 76 |

user 14, loss nan, acc 0.16
user 83, loss nan, acc 0.16
user 33, loss nan, acc 0.06
user 11, loss nan, acc 0.14
user 16, loss nan, acc 0.12
user 79, loss nan, acc 0.04
Malcious user 65 is selected!
user 65, loss nan, acc 0.14, mal loss nan, mal acc 0.09166666666666666
user 51, loss nan, acc 0.1
user 36, loss nan, acc 0.12
user 54, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 76 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 77 |

user 56, loss nan, acc 0.1
user 76, loss nan, acc 0.16
user 0, loss nan, acc 0.08
user 42, loss nan, acc 0.04
user 86, loss nan, acc 0.06
user 18, loss nan, acc 0.1
user 50, loss nan, acc 0.18
user 32, loss nan, acc 0.04
user 80, loss nan, acc 0.2
user 52, loss nan, acc 0.12
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 77 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 78 |

user 47, loss nan, acc 0.04
user 83, loss nan, acc 0.16
user 69, loss nan, acc 0.12
user 71, loss nan, acc 0.16
user 66, loss nan, acc 0.14
Malcious user 64 is selected!
user 64, loss nan, acc 0.16, mal loss nan, mal acc 0.09166666666666666
user 14, loss nan, acc 0.16
user 11, loss nan, acc 0.14
user 54, loss nan, acc 0.08
user 40, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 78 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 79 |

user 48, loss nan, acc 0.1
user 0, loss nan, acc 0.08
user 69, loss nan, acc 0.12
user 95, loss nan, acc 0.06
user 16, loss nan, acc 0.12
user 56, loss nan, acc 0.1
user 45, loss nan, acc 0.14
user 80, loss nan, acc 0.2
user 81, loss nan, acc 0.04
user 50, loss nan, acc 0.18
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 79 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 80 |

Malcious user 15 is selected!
user 15, loss nan, acc 0.08, mal loss nan, mal acc 0.09166666666666666
user 44, loss nan, acc 0.06
user 9, loss nan, acc 0.1
user 81, loss nan, acc 0.04
user 18, loss nan, acc 0.1
user 61, loss nan, acc 0.08
user 51, loss nan, acc 0.1
user 24, loss nan, acc 0.12
user 82, loss nan, acc 0.18
user 72, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 80 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 81 |

user 44, loss nan, acc 0.06
Malcious user 59 is selected!
user 59, loss nan, acc 0.04, mal loss nan, mal acc 0.09166666666666666
Malcious user 98 is selected!
user 98, loss nan, acc 0.1, mal loss nan, mal acc 0.09166666666666666
user 70, loss nan, acc 0.14
user 29, loss nan, acc 0.18
user 20, loss nan, acc 0.04
user 30, loss nan, acc 0.1
user 42, loss nan, acc 0.04
user 26, loss nan, acc 0.1
user 31, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 81 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 82 |

user 18, loss nan, acc 0.1
Malcious user 55 is selected!
user 55, loss nan, acc 0.1, mal loss nan, mal acc 0.09166666666666666
user 77, loss nan, acc 0.1
Malcious user 64 is selected!
user 64, loss nan, acc 0.16, mal loss nan, mal acc 0.09166666666666666
user 25, loss nan, acc 0.12
user 21, loss nan, acc 0.02
Malcious user 98 is selected!
user 98, loss nan, acc 0.1, mal loss nan, mal acc 0.09166666666666666
user 41, loss nan, acc 0.12
user 88, loss nan, acc 0.08
user 56, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 82 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 83 |

user 19, loss nan, acc 0.04
user 10, loss nan, acc 0.08
user 79, loss nan, acc 0.04
user 69, loss nan, acc 0.12
user 85, loss nan, acc 0.1
user 6, loss nan, acc 0.14
user 63, loss nan, acc 0.12
user 0, loss nan, acc 0.08
user 53, loss nan, acc 0.08
user 51, loss nan, acc 0.1
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 83 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 84 |

Malcious user 59 is selected!
user 59, loss nan, acc 0.04, mal loss nan, mal acc 0.09166666666666666
user 72, loss nan, acc 0.1
user 6, loss nan, acc 0.14
user 19, loss nan, acc 0.04
user 81, loss nan, acc 0.04
Malcious user 65 is selected!
user 65, loss nan, acc 0.14, mal loss nan, mal acc 0.09166666666666666
user 16, loss nan, acc 0.12
user 28, loss nan, acc 0.08
user 51, loss nan, acc 0.1
user 91, loss nan, acc 0.06
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 84 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 85 |

user 54, loss nan, acc 0.08
user 45, loss nan, acc 0.14
user 24, loss nan, acc 0.12
user 76, loss nan, acc 0.16
user 74, loss nan, acc 0.08
user 21, loss nan, acc 0.02
user 5, loss nan, acc 0.08
user 9, loss nan, acc 0.1
user 47, loss nan, acc 0.04
user 62, loss nan, acc 0.18
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 85 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 86 |

user 97, loss nan, acc 0.08
user 63, loss nan, acc 0.12
user 85, loss nan, acc 0.1
Malcious user 98 is selected!
user 98, loss nan, acc 0.1, mal loss nan, mal acc 0.09166666666666666
user 83, loss nan, acc 0.16
user 14, loss nan, acc 0.16
user 79, loss nan, acc 0.04
user 18, loss nan, acc 0.1
user 84, loss nan, acc 0.1
user 25, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 86 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 87 |

user 70, loss nan, acc 0.14
user 58, loss nan, acc 0.16
user 2, loss nan, acc 0.12
user 76, loss nan, acc 0.16
user 73, loss nan, acc 0.06
user 22, loss nan, acc 0.06
user 23, loss nan, acc 0.1
user 17, loss nan, acc 0.14
user 20, loss nan, acc 0.04
user 34, loss nan, acc 0.06
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 87 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 88 |

user 72, loss nan, acc 0.1
user 79, loss nan, acc 0.04
user 73, loss nan, acc 0.06
user 26, loss nan, acc 0.1
user 53, loss nan, acc 0.08
user 31, loss nan, acc 0.1
user 21, loss nan, acc 0.02
user 78, loss nan, acc 0.12
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 88%|████████▊ | 88/100 [18:46<02:30, 12.57s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 89%|████████▉ | 89/100 [18:58<02:15, 12.36s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 90%|█████████ | 90/100 [19:10<02:02, 12.29s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 91%|█████████ | 91/100 [19:23<01:50, 12.32s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 92%|█████████▏| 92/100 [19:35<01:38, 12.34s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 93%|█████████▎| 93/100 [19:48<01:27, 12.56s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 94%|█████████▍| 94/100 [20:00<01:14, 12.41s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 95%|█████████▌| 95/100 [20:14<01:03, 12.65s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 96%|█████████▌| 96/100 [20:27<00:51, 12.76s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 97%|█████████▋| 97/100 [20:38<00:36, 12.27s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 98%|█████████▊| 98/100 [20:50<00:24, 12.14s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 99%|█████████▉| 99/100 [21:02<00:12, 12.27s/it]user 94, loss nan, acc 0.1
user 77, loss nan, acc 0.1
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 88 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 89 |

Malcious user 57 is selected!
user 57, loss nan, acc 0.1, mal loss nan, mal acc 0.09166666666666666
user 66, loss nan, acc 0.14
Malcious user 75 is selected!
user 75, loss nan, acc 0.12, mal loss nan, mal acc 0.09166666666666666
user 42, loss nan, acc 0.04
user 0, loss nan, acc 0.08
user 89, loss nan, acc 0.12
user 74, loss nan, acc 0.08
user 92, loss nan, acc 0.12
user 33, loss nan, acc 0.06
user 22, loss nan, acc 0.06
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 89 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 90 |

Malcious user 64 is selected!
user 64, loss nan, acc 0.16, mal loss nan, mal acc 0.09166666666666666
Malcious user 65 is selected!
user 65, loss nan, acc 0.14, mal loss nan, mal acc 0.09166666666666666
user 37, loss nan, acc 0.28
user 13, loss nan, acc 0.04
user 63, loss nan, acc 0.12
user 88, loss nan, acc 0.08
user 78, loss nan, acc 0.12
user 66, loss nan, acc 0.14
user 29, loss nan, acc 0.18
Malcious user 93 is selected!
user 93, loss nan, acc 0.16, mal loss nan, mal acc 0.09166666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 90 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 91 |

user 52, loss nan, acc 0.12
user 80, loss nan, acc 0.2
user 60, loss nan, acc 0.08
user 0, loss nan, acc 0.08
user 73, loss nan, acc 0.06
user 91, loss nan, acc 0.06
user 81, loss nan, acc 0.04
user 68, loss nan, acc 0.08
user 41, loss nan, acc 0.12
user 23, loss nan, acc 0.1
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 91 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 92 |

Malcious user 55 is selected!
user 55, loss nan, acc 0.1, mal loss nan, mal acc 0.09166666666666666
user 92, loss nan, acc 0.12
user 21, loss nan, acc 0.02
Malcious user 57 is selected!
user 57, loss nan, acc 0.1, mal loss nan, mal acc 0.09166666666666666
user 31, loss nan, acc 0.1
user 87, loss nan, acc 0.08
user 62, loss nan, acc 0.18
user 48, loss nan, acc 0.1
user 95, loss nan, acc 0.06
user 14, loss nan, acc 0.16
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 92 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 93 |

user 33, loss nan, acc 0.06
user 53, loss nan, acc 0.08
user 82, loss nan, acc 0.18
user 47, loss nan, acc 0.04
user 22, loss nan, acc 0.06
user 86, loss nan, acc 0.06
user 73, loss nan, acc 0.06
Malcious user 55 is selected!
user 55, loss nan, acc 0.1, mal loss nan, mal acc 0.09166666666666666
user 66, loss nan, acc 0.14
user 34, loss nan, acc 0.06
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 93 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 94 |

user 19, loss nan, acc 0.04
user 6, loss nan, acc 0.14
user 91, loss nan, acc 0.06
user 82, loss nan, acc 0.18
user 22, loss nan, acc 0.06
Malcious user 8 is selected!
user 8, loss nan, acc 0.12, mal loss nan, mal acc 0.09166666666666666
user 1, loss nan, acc 0.08
user 83, loss nan, acc 0.16
user 43, loss nan, acc 0.18
Malcious user 98 is selected!
user 98, loss nan, acc 0.1, mal loss nan, mal acc 0.09166666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 94 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 95 |

user 37, loss nan, acc 0.28
user 40, loss nan, acc 0.08
user 85, loss nan, acc 0.1
user 14, loss nan, acc 0.16
Malcious user 59 is selected!
user 59, loss nan, acc 0.04, mal loss nan, mal acc 0.09166666666666666
user 95, loss nan, acc 0.06
user 47, loss nan, acc 0.04
user 56, loss nan, acc 0.1
user 80, loss nan, acc 0.2
user 89, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 95 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 96 |

user 99, loss nan, acc 0.12
user 17, loss nan, acc 0.14
user 58, loss nan, acc 0.16
user 95, loss nan, acc 0.06
user 79, loss nan, acc 0.04
user 21, loss nan, acc 0.02
user 63, loss nan, acc 0.12
user 35, loss nan, acc 0.12
user 84, loss nan, acc 0.1
user 38, loss nan, acc 0.18
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 96 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 97 |

user 41, loss nan, acc 0.12
Malcious user 15 is selected!
user 15, loss nan, acc 0.08, mal loss nan, mal acc 0.09166666666666666
user 62, loss nan, acc 0.18
user 69, loss nan, acc 0.12
Malcious user 93 is selected!
user 93, loss nan, acc 0.16, mal loss nan, mal acc 0.09166666666666666
user 84, loss nan, acc 0.1
user 91, loss nan, acc 0.06
user 22, loss nan, acc 0.06
user 70, loss nan, acc 0.14
user 85, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 97 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 98 |

user 79, loss nan, acc 0.04
user 84, loss nan, acc 0.1
user 25, loss nan, acc 0.12
user 66, loss nan, acc 0.14
user 73, loss nan, acc 0.06
user 62, loss nan, acc 0.18
Malcious user 98 is selected!
user 98, loss nan, acc 0.1, mal loss nan, mal acc 0.09166666666666666
Malcious user 57 is selected!
user 57, loss nan, acc 0.1, mal loss nan, mal acc 0.09166666666666666
Malcious user 15 is selected!
user 15, loss nan, acc 0.08, mal loss nan, mal acc 0.09166666666666666
Malcious user 55 is selected!
user 55, loss nan, acc 0.1, mal loss nan, mal acc 0.09166666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 98 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 99 |

user 80, loss nan, acc 0.2
Malcious user 57 is selected!
user 57, loss nan, acc 0.1, mal loss nan, mal acc 0.09166666666666666
user 79, loss nan, acc 0.04
user 14, loss nan, acc 0.16
Malcious user 98 is selected!
user 98, loss nan, acc 0.1, mal loss nan, mal acc 0.09166666666666666
user 97, loss nan, acc 0.08
user 19, loss nan, acc 0.04
user 77, loss nan, acc 0.1
user 43, loss nan, acc 0.18
user 51, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 99 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 100 |

user 69, loss nan, acc 0.12
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
100%|██████████| 100/100 [21:14<00:00, 12.18s/it]100%|██████████| 100/100 [21:14<00:00, 12.75s/it]
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
user 48, loss nan, acc 0.1
user 73, loss nan, acc 0.06
user 66, loss nan, acc 0.14
user 6, loss nan, acc 0.14
user 29, loss nan, acc 0.18
user 78, loss nan, acc 0.12
user 41, loss nan, acc 0.12
user 51, loss nan, acc 0.1
user 40, loss nan, acc 0.08
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 100 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])

 
 Results after 100 global rounds of training:
|---- Test Accuracy: 10.00%

 Total Run Time: 1279.8334
Running fedavg.py with --dataset=cifar --label_tampering=none --weight_tampering=large_neg

Experimental details:
    Model     : cnn
    Optimizer : sgd
    Learning  : 0.01
    Global Rounds   : 100

    Federated parameters:
    IID
    Fraction of users  : 0.1
    Local Batch size   : 10
    Local Epochs       : 10

CNNCifar(
  (conv1): Conv2d(3, 6, kernel_size=(5, 5), stride=(1, 1))
  (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (conv2): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))
  (fc1): Linear(in_features=400, out_features=120, bias=True)
  (fc2): Linear(in_features=120, out_features=84, bias=True)
  (fc3): Linear(in_features=84, out_features=10, bias=True)
)
[7956 7679 5752  627 4354 9636 4916  704 2160  365 4692 7131 1702 7326
 6900 3894 4739 1204 7662 6603 7591 5181 2520 6113 7333 9014 4710 1880
 7655 3590  390 9156 7601  344 4866 3419 1922 5319  601 9427  359 3442
 6710 6138 3382 6686 4105 6093 7886 2131 3574 6175  296 7643 3643  918
  459 9186 8365 3278 8803 1212 9218 8229 7494 3244 7442 8091 1379 2636
  880 8871 7727 8764  313 7053 7862 4812 1262 4731 7987 1659 3651 7873
 5246 8108 4961 4681 5648 9550 8189 6437 3741 8959 4100 3194 6020 1873
 8827 5318 6110 7600 4445 8329 1087 9901 4725 4927 8714 5554 7328 7953
 2283 2803 1612 8845  638 2375 5366 5800 1415 1791 8173   20 3009 6936
 7161 6588 3922 6183  999 7306 3488 8853  512 5089 5925  921 3781 5380
 6078  855 8721   22 9727 3689 5453 6444 6964 1754 2765 6364 6827 4350
 2819 6155 6792 9177 6661 7864 5523 8117 7208 2411 5618   91 5413  508
 1115 8854 6075 6727 3567 2207  630 5840 1777 1576 7224 2175 2750 1146
 6395 8536 1668 2658 8693 3426 4797 7756 4011 2199 4137 9575 1917 9214
 4431 3478 4863 2322 7273 9115 4477 4072 8982 4213 5092 8504 4512 6816
 2965 7064 9251 6889 8842 7015 5411 1804 7622 3505 8100 4259  940 3707
 7285 5262 3911 9337 1973  755 2337 2211 7795 7351 2570 4763 3300 6847
  449 8917 7856 7136  467 7522 6737 6176  761 2514 6101 5608 4801 8425
 6154 5073 4497  862 2964 6425 9218 8667 5700 5659 3322 3383 6100 4293
 8102 6779  503 5220 1686 9028 6467 3684 5512 4125 9387 7864  986 9361
 6315 8163 2345 3052 8785 7611 9585 8922 7354 2442 5014 5456 6082 5135
 2925 8413 3687 4944 8183 4754 7553 6755 9769 2147 1981 5429  145 8005
 5299 1266 7898 1584 1282 5920  821 8667 3081 6625 3076 6613 9951 2815
 4303 9507 1504 8043 6958 8873 1400 2711  648 6316 1293 6752 1021 9280
 2625 9275 8622 1923 1463 3647 5995 2913 1769 2049 2808 8609 8840 2359
 8967 7609 2965 6882 7883 4404 3143 7292 4826 1013  993 9301 1356   63
 8551 8472 7162 1761 7308 7943 2967 9134 8591  596 3460 2072 4523 6459
 2898 8146 7367 1416 1167 5868 8371 9586 3680 9950 7865 6705 1155 8439
 8651  524 9435 9373 4849 7979 9087 4475 2185 3497 9648  991 3051 3038
 9508 2686 2092 3730  335  817 9367 9072 9395 2897 8428 6670 3411 1103
 7478 3525 2596 1354 3608 6134 4917 2244 4746 6384  797 8550 8631 6827
 3349 4969 5923 2826 8535 8895 7368 8345 6631 9118 9266 3493 5590 8638
 3473 3138 8919 1782 3485 6247 2476 5905 1147 9414 8439 3128 4853 5613
   93 1308 3327 3050 9418 3504 6372  779 5899 6509 7448  691   18 4920
 4083 9390  846 8120]
malcious dataset true labels: [4, 6, 3, 4, 7, 6, 6, 7, 0, 4, 8, 6, 9, 4, 3, 7, 6, 6, 5, 9, 6, 1, 1, 2, 6, 7, 3, 1, 8, 7, 1, 6, 8, 8, 9, 4, 5, 7, 5, 1, 0, 6, 3, 3, 2, 9, 7, 2, 7, 7, 5, 3, 6, 8, 8, 8, 6, 7, 6, 0, 3, 1, 3, 8, 2, 7, 7, 7, 7, 1, 8, 9, 6, 1, 0, 1, 1, 8, 8, 4, 0, 8, 0, 1, 7, 5, 8, 9, 8, 6, 8, 0, 2, 1, 7, 3, 6, 6, 2, 1, 9, 8, 9, 8, 6, 3, 9, 1, 4, 9, 4, 1, 4, 5, 3, 2, 0, 0, 1, 2, 7, 4, 5, 7, 7, 9, 5, 0, 2, 5, 8, 4, 1, 2, 6, 6, 3, 9, 2, 1, 2, 7, 6, 4, 6, 7, 2, 3, 5, 7, 9, 3, 3, 4, 1, 8, 3, 9, 4, 1, 6, 8, 1, 0, 0, 3, 3, 9, 1, 4, 3, 6, 6, 3, 2, 2, 4, 7, 3, 3, 5, 2, 8, 1, 9, 7, 9, 0, 5, 5, 7, 2, 4, 5, 8, 9, 1, 4, 1, 0, 4, 8, 6, 5, 2, 4, 9, 1, 8, 1, 7, 5, 6, 5, 4, 3, 2, 5, 9, 4, 6, 5, 9, 6, 1, 4, 9, 5, 0, 2, 7, 7, 5, 2, 0, 0, 4, 8, 2, 0, 6, 1, 3, 9, 8, 9, 6, 9, 9, 9, 2, 6, 4, 8, 8, 3, 0, 2, 3, 4, 3, 2, 2, 8, 1, 9, 3, 8, 4, 0, 0, 8, 3, 9, 9, 8, 1, 1, 3, 8, 6, 0, 1, 3, 8, 7, 4, 9, 0, 4, 7, 1, 0, 1, 4, 9, 9, 8, 3, 3, 9, 9, 8, 7, 3, 6, 7, 1, 7, 0, 1, 7, 9, 8, 2, 4, 9, 4, 2, 8, 0, 3, 5, 0, 1, 0, 7, 5, 5, 5, 4, 7, 4, 9, 1, 9, 2, 8, 4, 1, 0, 1, 0, 0, 1, 3, 2, 6, 2, 2, 2, 0, 7, 9, 9, 3, 3, 5, 3, 1, 4, 7, 2, 3, 8, 2, 5, 1, 4, 1, 7, 5, 6, 7, 1, 6, 4, 6, 8, 8, 3, 3, 4, 9, 2, 5, 0, 3, 3, 3, 9, 8, 4, 0, 2, 1, 5, 3, 3, 1, 0, 0, 3, 5, 8, 3, 8, 7, 1, 1, 9, 5, 9, 9, 7, 3, 5, 3, 5, 0, 7, 2, 9, 1, 0, 3, 5, 9, 6, 7, 4, 1, 2, 3, 6, 1, 0, 4, 7, 0, 5, 9, 7, 4, 8, 0, 4, 0, 2, 8, 7, 3, 1, 0, 8, 1, 6, 5, 8, 9, 7, 5, 6, 5, 7, 0, 8, 9, 1, 5, 1, 9, 9, 2, 8, 7, 8, 7, 2, 8], malicious labels: [4, 6, 3, 4, 7, 6, 6, 7, 0, 4, 8, 6, 9, 4, 3, 7, 6, 6, 5, 9, 6, 1, 1, 2, 6, 7, 3, 1, 8, 7, 1, 6, 8, 8, 9, 4, 5, 7, 5, 1, 0, 6, 3, 3, 2, 9, 7, 2, 7, 7, 5, 3, 6, 8, 8, 8, 6, 7, 6, 0, 3, 1, 3, 8, 2, 7, 7, 7, 7, 1, 8, 9, 6, 1, 0, 1, 1, 8, 8, 4, 0, 8, 0, 1, 7, 5, 8, 9, 8, 6, 8, 0, 2, 1, 7, 3, 6, 6, 2, 1, 9, 8, 9, 8, 6, 3, 9, 1, 4, 9, 4, 1, 4, 5, 3, 2, 0, 0, 1, 2, 7, 4, 5, 7, 7, 9, 5, 0, 2, 5, 8, 4, 1, 2, 6, 6, 3, 9, 2, 1, 2, 7, 6, 4, 6, 7, 2, 3, 5, 7, 9, 3, 3, 4, 1, 8, 3, 9, 4, 1, 6, 8, 1, 0, 0, 3, 3, 9, 1, 4, 3, 6, 6, 3, 2, 2, 4, 7, 3, 3, 5, 2, 8, 1, 9, 7, 9, 0, 5, 5, 7, 2, 4, 5, 8, 9, 1, 4, 1, 0, 4, 8, 6, 5, 2, 4, 9, 1, 8, 1, 7, 5, 6, 5, 4, 3, 2, 5, 9, 4, 6, 5, 9, 6, 1, 4, 9, 5, 0, 2, 7, 7, 5, 2, 0, 0, 4, 8, 2, 0, 6, 1, 3, 9, 8, 9, 6, 9, 9, 9, 2, 6, 4, 8, 8, 3, 0, 2, 3, 4, 3, 2, 2, 8, 1, 9, 3, 8, 4, 0, 0, 8, 3, 9, 9, 8, 1, 1, 3, 8, 6, 0, 1, 3, 8, 7, 4, 9, 0, 4, 7, 1, 0, 1, 4, 9, 9, 8, 3, 3, 9, 9, 8, 7, 3, 6, 7, 1, 7, 0, 1, 7, 9, 8, 2, 4, 9, 4, 2, 8, 0, 3, 5, 0, 1, 0, 7, 5, 5, 5, 4, 7, 4, 9, 1, 9, 2, 8, 4, 1, 0, 1, 0, 0, 1, 3, 2, 6, 2, 2, 2, 0, 7, 9, 9, 3, 3, 5, 3, 1, 4, 7, 2, 3, 8, 2, 5, 1, 4, 1, 7, 5, 6, 7, 1, 6, 4, 6, 8, 8, 3, 3, 4, 9, 2, 5, 0, 3, 3, 3, 9, 8, 4, 0, 2, 1, 5, 3, 3, 1, 0, 0, 3, 5, 8, 3, 8, 7, 1, 1, 9, 5, 9, 9, 7, 3, 5, 3, 5, 0, 7, 2, 9, 1, 0, 3, 5, 9, 6, 7, 4, 1, 2, 3, 6, 1, 0, 4, 7, 0, 5, 9, 7, 4, 8, 0, 4, 0, 2, 8, 7, 3, 1, 0, 8, 1, 6, 5, 8, 9, 7, 5, 6, 5, 7, 0, 8, 9, 1, 5, 1, 9, 9, 2, 8, 7, 8, 7, 2, 8]
  0%|          | 0/100 [00:00<?, ?it/s]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  1%|          | 1/100 [00:13<21:48, 13.21s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  2%|▏         | 2/100 [00:26<21:21, 13.07s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  3%|▎         | 3/100 [00:39<21:35, 13.36s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  4%|▍         | 4/100 [00:52<20:57, 13.10s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  5%|▌         | 5/100 [01:07<21:49, 13.78s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  6%|▌         | 6/100 [01:20<21:21, 13.63s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  7%|▋         | 7/100 [01:33<20:20, 13.13s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  8%|▊         | 8/100 [01:46<20:22, 13.28s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  9%|▉         | 9/100 [01:59<19:43, 13.00s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 10%|█         | 10/100 [02:12<19:30, 13.01s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 11%|█         | 11/100 [02:25<19:35, 13.21s/it]
 | Global Training Round : 1 |

user 31, loss 2.289158720970154, acc 0.08
user 53, loss 2.279264235496521, acc 0.14
user 80, loss 2.290380800366402, acc 0.2
user 86, loss 2.2906135940551757, acc 0.16
user 9, loss 2.290573735833168, acc 0.16
user 7, loss 2.2851667004823684, acc 0.26
user 77, loss 2.2908347821235657, acc 0.22
user 49, loss 2.2931082582473756, acc 0.18
user 90, loss 2.2894998949766157, acc 0.14
user 79, loss 2.288360035419464, acc 0.28
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 1 global rounds:
Training Loss : 2.2886960757970813
Global model Benign Test Accuracy: 17.65% 

Global model Malicious Accuracy: 20.21%, Malicious Loss: 10880.81 , Outputs: tensor([0.1005, 0.1006, 0.1007, 0.1004, 0.1003, 0.1013, 0.1004, 0.1000, 0.1004,
        0.1008])


 | Global Training Round : 2 |

user 30, loss 2.034014320075512, acc 0.26
Malcious user 20 is selected!
user 20, loss 2.2993167087435724, acc 0.04, mal loss 110.21824097633362, mal acc 0.11875
user 19, loss 2.0790431743860247, acc 0.24
Malcious user 39 is selected!
user 39, loss 2.2993070006370546, acc 0.2, mal loss 110.21861147880554, mal acc 0.11875
user 48, loss 2.1036820712685587, acc 0.36
user 78, loss 2.0657689729332924, acc 0.36
user 11, loss 2.078765193223953, acc 0.24
user 24, loss 2.1205716571211815, acc 0.2
user 59, loss 2.0973059615492824, acc 0.22
user 33, loss 2.058816630542278, acc 0.2
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 2 global rounds:
Training Loss : 2.206177622422576
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 3 |

user 45, loss nan, acc 0.14
user 73, loss nan, acc 0.06
user 98, loss nan, acc 0.1
user 90, loss nan, acc 0.08
Malcious user 28 is selected!
user 28, loss 2.2993030791481335, acc 0.04, mal loss 110.2188549041748, mal acc 0.11875
user 94, loss nan, acc 0.1
user 9, loss nan, acc 0.1
user 38, loss nan, acc 0.18
user 25, loss nan, acc 0.12
user 72, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 3 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 4 |

user 98, loss nan, acc 0.1
user 49, loss nan, acc 0.04
user 2, loss nan, acc 0.12
user 15, loss nan, acc 0.08
user 51, loss nan, acc 0.1
user 40, loss nan, acc 0.08
user 34, loss nan, acc 0.06
user 84, loss nan, acc 0.1
user 92, loss nan, acc 0.12
Malcious user 20 is selected!
user 20, loss 2.299262337386608, acc 0.04, mal loss 110.21767497062683, mal acc 0.11875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 4 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 5 |

user 38, loss nan, acc 0.18
user 21, loss nan, acc 0.02
user 3, loss nan, acc 0.08
user 30, loss nan, acc 0.1
user 35, loss nan, acc 0.12
user 98, loss nan, acc 0.1
user 91, loss nan, acc 0.06
user 11, loss nan, acc 0.14
user 52, loss nan, acc 0.12
Malcious user 43 is selected!
user 43, loss 2.2992956688006716, acc 0.06, mal loss 110.21728515625, mal acc 0.11875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 5 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 6 |

user 87, loss nan, acc 0.08
user 8, loss nan, acc 0.12
Malcious user 20 is selected!
user 20, loss 2.2992384672164916, acc 0.04, mal loss 110.21823787689209, mal acc 0.11875
user 22, loss nan, acc 0.06
user 92, loss nan, acc 0.12
user 73, loss nan, acc 0.06
user 7, loss nan, acc 0.04
Malcious user 42 is selected!
user 42, loss 2.2992978170514107, acc 0.06, mal loss 110.21893739700317, mal acc 0.11875
user 61, loss nan, acc 0.08
user 2, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 6 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 7 |

user 91, loss nan, acc 0.06
user 12, loss nan, acc 0.12
user 17, loss nan, acc 0.14
Malcious user 29 is selected!
user 29, loss 2.299319534997145, acc 0.06, mal loss 110.21917700767517, mal acc 0.11875
user 88, loss nan, acc 0.08
user 26, loss nan, acc 0.1
Malcious user 42 is selected!
user 42, loss 2.2993344272176426, acc 0.06, mal loss 110.21954464912415, mal acc 0.11875
user 49, loss nan, acc 0.04
user 30, loss nan, acc 0.1
user 62, loss nan, acc 0.18
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 7 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 8 |

user 84, loss nan, acc 0.1
user 78, loss nan, acc 0.12
user 96, loss nan, acc 0.1
user 0, loss nan, acc 0.08
user 36, loss nan, acc 0.12
user 49, loss nan, acc 0.04
user 67, loss nan, acc 0.12
user 99, loss nan, acc 0.12
user 81, loss nan, acc 0.04
user 47, loss nan, acc 0.04
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 8 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 9 |

user 76, loss nan, acc 0.16
user 95, loss nan, acc 0.06
user 56, loss nan, acc 0.1
user 13, loss nan, acc 0.04
Malcious user 20 is selected!
user 20, loss 2.2992775465051336, acc 0.04, mal loss 110.21857070922852, mal acc 0.11875
user 5, loss nan, acc 0.08
Malcious user 43 is selected!
user 43, loss 2.299288772046566, acc 0.06, mal loss 110.21966481208801, mal acc 0.11875
user 36, loss nan, acc 0.12
user 49, loss nan, acc 0.04
user 6, loss nan, acc 0.14
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 9 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 10 |

user 98, loss nan, acc 0.1
user 40, loss nan, acc 0.08
user 44, loss nan, acc 0.06
Malcious user 23 is selected!
user 23, loss 2.2992544298370676, acc 0.06, mal loss 110.218186378479, mal acc 0.11875
user 84, loss nan, acc 0.1
user 95, loss nan, acc 0.06
user 7, loss nan, acc 0.04
user 68, loss nan, acc 0.08
user 19, loss nan, acc 0.04
user 49, loss nan, acc 0.04
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 10 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 11 |

user 93, loss nan, acc 0.16
user 38, loss nan, acc 0.18
user 84, loss nan, acc 0.1
user 0, loss nan, acc 0.08
user 79, loss nan, acc 0.04
user 30, loss nan, acc 0.1
user 49, loss nan, acc 0.04
user 3, loss nan, acc 0.08
user 2, loss nan, acc 0.12
user 33, loss nan, acc 0.06
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 11 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 12 |

user 56, loss nan, acc 0.1
Malcious user 43 is selected!
user 43, loss 2.2993474428852396, acc 0.06, mal loss 110.21924042701721, mal acc 0.11875
user 21, loss nan, acc 0.02
user 8, loss nan, acc 0.12
user 45, loss nan, acc 0.14
user 10, loss nan, acc 0.08
user 64, loss nan, acc 0.16
user 46, loss nan, acc 0.08
Malcious user 42 is selected!
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 12%|█▏        | 12/100 [02:38<19:16, 13.14s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 13%|█▎        | 13/100 [02:50<18:19, 12.64s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 14%|█▍        | 14/100 [03:03<18:28, 12.89s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 15%|█▌        | 15/100 [03:16<18:07, 12.79s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 16%|█▌        | 16/100 [03:29<18:17, 13.07s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 17%|█▋        | 17/100 [03:43<18:15, 13.19s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 18%|█▊        | 18/100 [03:55<17:32, 12.83s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 19%|█▉        | 19/100 [04:08<17:23, 12.88s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 20%|██        | 20/100 [04:19<16:32, 12.40s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 21%|██        | 21/100 [04:31<16:14, 12.34s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 22%|██▏       | 22/100 [04:45<16:22, 12.60s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 23%|██▎       | 23/100 [04:57<15:55, 12.41s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
user 42, loss 2.2993194684386253, acc 0.06, mal loss 110.21700930595398, mal acc 0.11875
user 30, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 12 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 13 |

user 2, loss nan, acc 0.12
user 4, loss nan, acc 0.12
Malcious user 39 is selected!
user 39, loss 2.2992637460430463, acc 0.2, mal loss 110.21858406066895, mal acc 0.11875
user 78, loss nan, acc 0.12
user 46, loss nan, acc 0.08
user 79, loss nan, acc 0.04
user 25, loss nan, acc 0.12
user 22, loss nan, acc 0.06
user 97, loss nan, acc 0.08
user 64, loss nan, acc 0.16
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 13 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 14 |

user 87, loss nan, acc 0.08
user 77, loss nan, acc 0.1
user 68, loss nan, acc 0.08
user 82, loss nan, acc 0.18
user 13, loss nan, acc 0.04
user 57, loss nan, acc 0.1
Malcious user 20 is selected!
user 20, loss 2.299252037703991, acc 0.04, mal loss 110.21963429450989, mal acc 0.11875
user 53, loss nan, acc 0.08
user 78, loss nan, acc 0.12
user 64, loss nan, acc 0.16
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 14 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 15 |

user 0, loss nan, acc 0.08
user 66, loss nan, acc 0.14
user 85, loss nan, acc 0.1
user 82, loss nan, acc 0.18
user 76, loss nan, acc 0.16
user 74, loss nan, acc 0.08
user 73, loss nan, acc 0.06
Malcious user 27 is selected!
user 27, loss 2.299299655854702, acc 0.14, mal loss 110.21944046020508, mal acc 0.11875
user 94, loss nan, acc 0.1
user 21, loss nan, acc 0.02
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 15 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 16 |

user 67, loss nan, acc 0.12
user 68, loss nan, acc 0.08
user 10, loss nan, acc 0.08
user 95, loss nan, acc 0.06
user 5, loss nan, acc 0.08
user 92, loss nan, acc 0.12
user 93, loss nan, acc 0.16
user 3, loss nan, acc 0.08
user 47, loss nan, acc 0.04
user 4, loss nan, acc 0.12
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 16 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 17 |

user 17, loss nan, acc 0.14
user 1, loss nan, acc 0.08
user 45, loss nan, acc 0.14
user 19, loss nan, acc 0.04
user 68, loss nan, acc 0.08
user 5, loss nan, acc 0.08
user 78, loss nan, acc 0.12
user 38, loss nan, acc 0.18
user 10, loss nan, acc 0.08
user 90, loss nan, acc 0.08
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 17 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 18 |

user 16, loss nan, acc 0.12
user 92, loss nan, acc 0.12
Malcious user 29 is selected!
user 29, loss 2.299245336651802, acc 0.06, mal loss 110.21720957756042, mal acc 0.11875
user 82, loss nan, acc 0.18
user 48, loss nan, acc 0.1
user 70, loss nan, acc 0.14
user 26, loss nan, acc 0.1
user 96, loss nan, acc 0.1
user 84, loss nan, acc 0.1
user 52, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 18 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 19 |

user 19, loss nan, acc 0.04
Malcious user 37 is selected!
user 37, loss 2.299305792649587, acc 0.14, mal loss 110.2188401222229, mal acc 0.11875
user 76, loss nan, acc 0.16
user 63, loss nan, acc 0.12
user 45, loss nan, acc 0.14
user 54, loss nan, acc 0.08
user 5, loss nan, acc 0.08
user 74, loss nan, acc 0.08
user 79, loss nan, acc 0.04
user 1, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 19 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 20 |

user 44, loss nan, acc 0.06
user 9, loss nan, acc 0.1
user 14, loss nan, acc 0.16
user 1, loss nan, acc 0.08
user 5, loss nan, acc 0.08
user 97, loss nan, acc 0.08
Malcious user 37 is selected!
user 37, loss 2.299292176961899, acc 0.14, mal loss 110.22006392478943, mal acc 0.11875
user 6, loss nan, acc 0.14
user 93, loss nan, acc 0.16
user 36, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 20 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 21 |

user 22, loss nan, acc 0.06
user 54, loss nan, acc 0.08
user 8, loss nan, acc 0.12
user 6, loss nan, acc 0.14
user 79, loss nan, acc 0.04
user 68, loss nan, acc 0.08
user 47, loss nan, acc 0.04
user 32, loss nan, acc 0.04
Malcious user 29 is selected!
user 29, loss 2.2992533475160597, acc 0.06, mal loss 110.21769404411316, mal acc 0.11875
user 11, loss nan, acc 0.14
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 21 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 22 |

user 35, loss nan, acc 0.12
user 80, loss nan, acc 0.2
user 78, loss nan, acc 0.12
user 57, loss nan, acc 0.1
user 3, loss nan, acc 0.08
user 66, loss nan, acc 0.14
user 12, loss nan, acc 0.12
user 31, loss nan, acc 0.1
user 96, loss nan, acc 0.1
user 81, loss nan, acc 0.04
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 22 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 23 |

Malcious user 37 is selected!
user 37, loss 2.2992559269070627, acc 0.14, mal loss 110.21880269050598, mal acc 0.11875
user 62, loss nan, acc 0.18
user 48, loss nan, acc 0.1
user 31, loss nan, acc 0.1
user 72, loss nan, acc 0.1
user 87, loss nan, acc 0.08
user 83, loss nan, acc 0.16
Malcious user 43 is selected!
user 43, loss 2.299276337524255, acc 0.06, mal loss 110.21733856201172, mal acc 0.11875
user 36, loss nan, acc 0.12
user 80, loss nan, acc 0.2
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 23 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 24 |

user 74, loss nan, acc 0.08
user 97, loss nan, acc 0.08
Malcious user 42 is selected!
user 42, loss 2.2992375259598097, acc 0.06, mal loss 110.21738791465759, mal acc 0.11875
user 46, loss nan, acc 0.08
user 84, loss nan, acc 0.1
Malcious user 43 is selected!
user 43, loss 2.2992692927519482, acc 0.06, mal loss 110.21676278114319, mal acc 0.11875
user 26, loss nan, acc 0.1
user 69, loss nan, acc 0.12
user 80, loss nan, acc 0.2
user 51, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 24 global rounds:
Training Loss : nan
 24%|██▍       | 24/100 [05:09<15:48, 12.48s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 25%|██▌       | 25/100 [05:21<15:17, 12.23s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 26%|██▌       | 26/100 [05:33<15:12, 12.34s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 27%|██▋       | 27/100 [05:46<15:06, 12.42s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 28%|██▊       | 28/100 [05:58<14:39, 12.22s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 29%|██▉       | 29/100 [06:11<14:39, 12.38s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 30%|███       | 30/100 [06:22<14:01, 12.03s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 31%|███       | 31/100 [06:35<14:13, 12.36s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 32%|███▏      | 32/100 [06:47<13:56, 12.31s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 33%|███▎      | 33/100 [07:00<13:51, 12.41s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 34%|███▍      | 34/100 [07:12<13:45, 12.51s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 35%|███▌      | 35/100 [07:24<13:23, 12.37s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 25 |

user 57, loss nan, acc 0.1
user 79, loss nan, acc 0.04
user 2, loss nan, acc 0.12
user 12, loss nan, acc 0.12
user 95, loss nan, acc 0.06
user 52, loss nan, acc 0.12
user 70, loss nan, acc 0.14
user 5, loss nan, acc 0.08
user 56, loss nan, acc 0.1
Malcious user 23 is selected!
user 23, loss 2.2993242338299753, acc 0.06, mal loss 110.21817588806152, mal acc 0.11875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 25 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 26 |

Malcious user 29 is selected!
user 29, loss 2.299299802879492, acc 0.06, mal loss 110.21722912788391, mal acc 0.11875
user 91, loss nan, acc 0.06
user 60, loss nan, acc 0.08
user 95, loss nan, acc 0.06
user 48, loss nan, acc 0.1
user 62, loss nan, acc 0.18
user 64, loss nan, acc 0.16
user 59, loss nan, acc 0.04
user 82, loss nan, acc 0.18
user 85, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 26 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 27 |

user 69, loss nan, acc 0.12
Malcious user 28 is selected!
user 28, loss 2.299300148089727, acc 0.04, mal loss 110.21746802330017, mal acc 0.11875
user 99, loss nan, acc 0.12
user 81, loss nan, acc 0.04
user 24, loss nan, acc 0.12
user 19, loss nan, acc 0.04
user 66, loss nan, acc 0.14
user 10, loss nan, acc 0.08
user 33, loss nan, acc 0.06
user 1, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 27 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 28 |

user 53, loss nan, acc 0.08
user 98, loss nan, acc 0.1
user 64, loss nan, acc 0.16
user 82, loss nan, acc 0.18
user 9, loss nan, acc 0.1
user 22, loss nan, acc 0.06
user 25, loss nan, acc 0.12
user 70, loss nan, acc 0.14
user 6, loss nan, acc 0.14
user 78, loss nan, acc 0.12
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 28 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 29 |

user 79, loss nan, acc 0.04
user 1, loss nan, acc 0.08
user 78, loss nan, acc 0.12
user 18, loss nan, acc 0.1
user 48, loss nan, acc 0.1
user 19, loss nan, acc 0.04
user 67, loss nan, acc 0.12
user 55, loss nan, acc 0.1
Malcious user 29 is selected!
user 29, loss 2.299328179160754, acc 0.06, mal loss 110.21930885314941, mal acc 0.11875
user 69, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 29 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 30 |

user 88, loss nan, acc 0.08
user 69, loss nan, acc 0.12
Malcious user 39 is selected!
user 39, loss 2.299278934796651, acc 0.2, mal loss 110.21814727783203, mal acc 0.11875
user 90, loss nan, acc 0.08
user 77, loss nan, acc 0.1
Malcious user 23 is selected!
user 23, loss 2.2992718507846197, acc 0.06, mal loss 110.22023558616638, mal acc 0.11875
user 78, loss nan, acc 0.12
user 54, loss nan, acc 0.08
user 31, loss nan, acc 0.1
user 97, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 30 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 31 |

user 40, loss nan, acc 0.08
user 68, loss nan, acc 0.08
user 4, loss nan, acc 0.12
user 54, loss nan, acc 0.08
user 55, loss nan, acc 0.1
user 31, loss nan, acc 0.1
user 11, loss nan, acc 0.14
user 51, loss nan, acc 0.1
user 95, loss nan, acc 0.06
Malcious user 28 is selected!
user 28, loss 2.2992628191908198, acc 0.04, mal loss 110.21804022789001, mal acc 0.11875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 31 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 32 |

user 78, loss nan, acc 0.12
Malcious user 23 is selected!
user 23, loss 2.2993046765526133, acc 0.06, mal loss 110.21998763084412, mal acc 0.11875
Malcious user 42 is selected!
user 42, loss 2.2992747247219087, acc 0.06, mal loss 110.2181556224823, mal acc 0.11875
user 84, loss nan, acc 0.1
user 71, loss nan, acc 0.16
user 49, loss nan, acc 0.04
user 66, loss nan, acc 0.14
user 64, loss nan, acc 0.16
user 68, loss nan, acc 0.08
user 89, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 32 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 33 |

user 40, loss nan, acc 0.08
user 92, loss nan, acc 0.12
user 57, loss nan, acc 0.1
user 73, loss nan, acc 0.06
user 97, loss nan, acc 0.08
user 48, loss nan, acc 0.1
user 31, loss nan, acc 0.1
user 54, loss nan, acc 0.08
user 77, loss nan, acc 0.1
user 62, loss nan, acc 0.18
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 33 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 34 |

user 54, loss nan, acc 0.08
user 45, loss nan, acc 0.14
user 82, loss nan, acc 0.18
Malcious user 29 is selected!
user 29, loss 2.2992538924018544, acc 0.06, mal loss 110.21697998046875, mal acc 0.11875
user 56, loss nan, acc 0.1
Malcious user 28 is selected!
user 28, loss 2.2992806166410444, acc 0.04, mal loss 110.21826124191284, mal acc 0.11875
user 40, loss nan, acc 0.08
user 83, loss nan, acc 0.16
user 2, loss nan, acc 0.12
user 7, loss nan, acc 0.04
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 34 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 35 |

user 82, loss nan, acc 0.18
user 46, loss nan, acc 0.08
user 61, loss nan, acc 0.08
user 38, loss nan, acc 0.18
user 48, loss nan, acc 0.1
user 10, loss nan, acc 0.08
user 26, loss nan, acc 0.1
user 21, loss nan, acc 0.02
user 86, loss nan, acc 0.06
user 6, loss nan, acc 0.14
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 35 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 36 |

user 91, loss nan, acc 0.06
user 6, loss nan, acc 0.14
user 99, loss nan, acc 0.12
user 74, loss nan, acc 0.08
user 10, loss nan, acc 0.08
user 33, loss nan, acc 0.06
user 87, loss nan, acc 0.08
user 94, loss nan, acc 0.1
user 81, loss nan, acc 0.04
Malcious user 39 is selected!
user 39, loss 2.2993355721235273, acc 0.2, mal loss 110.21752834320068, mal acc 0.11875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 36 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

 36%|███▌      | 36/100 [07:37<13:21, 12.53s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 37%|███▋      | 37/100 [07:50<13:14, 12.62s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 38%|███▊      | 38/100 [08:02<12:46, 12.36s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 39%|███▉      | 39/100 [08:15<12:42, 12.49s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 40%|████      | 40/100 [08:27<12:27, 12.46s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 41%|████      | 41/100 [08:39<12:06, 12.31s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 42%|████▏     | 42/100 [08:52<11:56, 12.35s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 43%|████▎     | 43/100 [09:04<11:40, 12.29s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 44%|████▍     | 44/100 [09:16<11:32, 12.36s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 45%|████▌     | 45/100 [09:29<11:25, 12.46s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 46%|████▌     | 46/100 [09:41<10:59, 12.21s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 47%|████▋     | 47/100 [09:54<11:02, 12.50s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 48%|████▊     | 48/100 [10:05<10:36, 12.24s/it]Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 37 |

user 6, loss nan, acc 0.14
user 93, loss nan, acc 0.16
user 35, loss nan, acc 0.12
Malcious user 20 is selected!
user 20, loss 2.299292878806591, acc 0.04, mal loss 110.2179024219513, mal acc 0.11875
user 57, loss nan, acc 0.1
user 8, loss nan, acc 0.12
user 91, loss nan, acc 0.06
user 82, loss nan, acc 0.18
user 40, loss nan, acc 0.08
user 56, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 37 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 38 |

user 34, loss nan, acc 0.06
user 1, loss nan, acc 0.08
user 18, loss nan, acc 0.1
user 92, loss nan, acc 0.12
user 3, loss nan, acc 0.08
user 13, loss nan, acc 0.04
user 11, loss nan, acc 0.14
user 7, loss nan, acc 0.04
user 48, loss nan, acc 0.1
user 87, loss nan, acc 0.08
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 38 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 39 |

user 49, loss nan, acc 0.04
user 6, loss nan, acc 0.14
Malcious user 28 is selected!
user 28, loss 2.2993047083417575, acc 0.04, mal loss 110.21764206886292, mal acc 0.11875
user 8, loss nan, acc 0.12
user 33, loss nan, acc 0.06
user 14, loss nan, acc 0.16
user 81, loss nan, acc 0.04
user 46, loss nan, acc 0.08
user 48, loss nan, acc 0.1
user 94, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 39 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 40 |

Malcious user 27 is selected!
user 27, loss 2.2993029231826467, acc 0.14, mal loss 110.21741437911987, mal acc 0.11875
user 81, loss nan, acc 0.04
user 6, loss nan, acc 0.14
user 79, loss nan, acc 0.04
user 77, loss nan, acc 0.1
Malcious user 37 is selected!
user 37, loss 2.29926621367534, acc 0.14, mal loss 110.21877765655518, mal acc 0.11875
user 70, loss nan, acc 0.14
user 51, loss nan, acc 0.1
user 67, loss nan, acc 0.12
user 38, loss nan, acc 0.18
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 40 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 41 |

user 34, loss nan, acc 0.06
user 69, loss nan, acc 0.12
user 60, loss nan, acc 0.08
user 62, loss nan, acc 0.18
user 83, loss nan, acc 0.16
user 94, loss nan, acc 0.1
user 64, loss nan, acc 0.16
user 86, loss nan, acc 0.06
user 21, loss nan, acc 0.02
user 22, loss nan, acc 0.06
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 41 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 42 |

user 22, loss nan, acc 0.06
Malcious user 29 is selected!
user 29, loss 2.299279147883256, acc 0.06, mal loss 110.21897077560425, mal acc 0.11875
user 56, loss nan, acc 0.1
user 45, loss nan, acc 0.14
user 10, loss nan, acc 0.08
user 72, loss nan, acc 0.1
user 17, loss nan, acc 0.14
user 71, loss nan, acc 0.16
user 13, loss nan, acc 0.04
user 67, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 42 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 43 |

user 56, loss nan, acc 0.1
user 10, loss nan, acc 0.08
user 77, loss nan, acc 0.1
user 45, loss nan, acc 0.14
user 11, loss nan, acc 0.14
user 57, loss nan, acc 0.1
user 21, loss nan, acc 0.02
user 31, loss nan, acc 0.1
user 49, loss nan, acc 0.04
user 65, loss nan, acc 0.14
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 43 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 44 |

user 32, loss nan, acc 0.04
user 22, loss nan, acc 0.06
user 4, loss nan, acc 0.12
user 57, loss nan, acc 0.1
Malcious user 75 is selected!
user 75, loss 2.2993209163347883, acc 0.12, mal loss 110.21938753128052, mal acc 0.11875
user 63, loss nan, acc 0.12
user 84, loss nan, acc 0.1
user 79, loss nan, acc 0.04
user 46, loss nan, acc 0.08
user 51, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 44 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 45 |

user 14, loss nan, acc 0.16
user 19, loss nan, acc 0.04
user 25, loss nan, acc 0.12
user 98, loss nan, acc 0.1
user 62, loss nan, acc 0.18
user 67, loss nan, acc 0.12
user 78, loss nan, acc 0.12
Malcious user 20 is selected!
user 20, loss 2.299289792776108, acc 0.04, mal loss 110.2185378074646, mal acc 0.11875
user 33, loss nan, acc 0.06
Malcious user 29 is selected!
user 29, loss 2.299274476369222, acc 0.06, mal loss 110.21770668029785, mal acc 0.11875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 45 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 46 |

user 53, loss nan, acc 0.08
user 71, loss nan, acc 0.16
user 5, loss nan, acc 0.08
user 25, loss nan, acc 0.12
user 45, loss nan, acc 0.14
user 22, loss nan, acc 0.06
user 63, loss nan, acc 0.12
Malcious user 42 is selected!
user 42, loss 2.299280441304048, acc 0.06, mal loss 110.219233751297, mal acc 0.11875
user 86, loss nan, acc 0.06
user 14, loss nan, acc 0.16
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 46 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 47 |

user 44, loss nan, acc 0.06
user 11, loss nan, acc 0.14
user 95, loss nan, acc 0.06
user 46, loss nan, acc 0.08
user 72, loss nan, acc 0.1
user 71, loss nan, acc 0.16
user 13, loss nan, acc 0.04
user 47, loss nan, acc 0.04
user 30, loss nan, acc 0.1
user 90, loss nan, acc 0.08
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 47 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 48 |

user 14, loss nan, acc 0.16
user 62, loss nan, acc 0.18
user 35, loss nan, acc 0.12
user 90, loss nan, acc 0.08
user 74, loss nan, acc 0.08
user 13, loss nan, acc 0.04
user 36, loss nan, acc 0.12
user 38, loss nan, acc 0.18
user 86, loss nan, acc 0.06
user 34, loss nan, acc 0.06
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 48 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 49 |

user 59, loss nan, acc 0.04
user 41, loss nan, acc 0.12
user 55, loss nan, acc 0.1
user 3, loss nan, acc 0.08
user 40, loss nan, acc 0.08
user 25, loss nan, acc 0.12
user 52, loss nan, acc 0.12
user 90, loss nan, acc 0.08
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 49%|████▉     | 49/100 [10:19<10:38, 12.52s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 50%|█████     | 50/100 [10:32<10:34, 12.69s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 51%|█████     | 51/100 [10:43<10:09, 12.44s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 52%|█████▏    | 52/100 [10:56<09:53, 12.37s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 53%|█████▎    | 53/100 [11:08<09:34, 12.23s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 54%|█████▍    | 54/100 [11:20<09:30, 12.41s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 55%|█████▌    | 55/100 [11:33<09:24, 12.54s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 56%|█████▌    | 56/100 [11:45<09:03, 12.35s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 57%|█████▋    | 57/100 [11:57<08:50, 12.34s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 58%|█████▊    | 58/100 [12:09<08:34, 12.24s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 59%|█████▉    | 59/100 [12:22<08:24, 12.30s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 60%|██████    | 60/100 [12:34<08:12, 12.31s/it]user 64, loss nan, acc 0.16
user 94, loss nan, acc 0.1
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 49 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 50 |

user 87, loss nan, acc 0.08
Malcious user 75 is selected!
user 75, loss 2.299294998248418, acc 0.12, mal loss 110.21685719490051, mal acc 0.11875
user 92, loss nan, acc 0.12
user 46, loss nan, acc 0.08
user 1, loss nan, acc 0.08
user 53, loss nan, acc 0.08
user 84, loss nan, acc 0.1
user 61, loss nan, acc 0.08
user 55, loss nan, acc 0.1
user 17, loss nan, acc 0.14
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 50 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 51 |

user 11, loss nan, acc 0.14
user 94, loss nan, acc 0.1
user 33, loss nan, acc 0.06
user 0, loss nan, acc 0.08
user 14, loss nan, acc 0.16
user 40, loss nan, acc 0.08
user 41, loss nan, acc 0.12
user 63, loss nan, acc 0.12
user 56, loss nan, acc 0.1
user 12, loss nan, acc 0.12
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 51 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 52 |

user 8, loss nan, acc 0.12
user 5, loss nan, acc 0.08
user 76, loss nan, acc 0.16
user 74, loss nan, acc 0.08
user 35, loss nan, acc 0.12
user 18, loss nan, acc 0.1
user 36, loss nan, acc 0.12
user 61, loss nan, acc 0.08
user 95, loss nan, acc 0.06
user 72, loss nan, acc 0.1
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 52 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 53 |

user 59, loss nan, acc 0.04
Malcious user 42 is selected!
user 42, loss 2.2992679844299952, acc 0.06, mal loss 110.21673369407654, mal acc 0.11875
user 94, loss nan, acc 0.1
user 0, loss nan, acc 0.08
user 16, loss nan, acc 0.12
user 52, loss nan, acc 0.12
user 95, loss nan, acc 0.06
user 3, loss nan, acc 0.08
user 68, loss nan, acc 0.08
user 70, loss nan, acc 0.14
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 53 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 54 |

user 6, loss nan, acc 0.14
user 36, loss nan, acc 0.12
user 51, loss nan, acc 0.1
user 67, loss nan, acc 0.12
user 71, loss nan, acc 0.16
user 40, loss nan, acc 0.08
user 5, loss nan, acc 0.08
user 64, loss nan, acc 0.16
Malcious user 37 is selected!
user 37, loss 2.2993085121115047, acc 0.14, mal loss 110.21922779083252, mal acc 0.11875
user 26, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 54 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 55 |

user 3, loss nan, acc 0.08
user 44, loss nan, acc 0.06
user 70, loss nan, acc 0.14
user 82, loss nan, acc 0.18
user 0, loss nan, acc 0.08
user 95, loss nan, acc 0.06
user 74, loss nan, acc 0.08
user 87, loss nan, acc 0.08
user 78, loss nan, acc 0.12
user 50, loss nan, acc 0.18
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 55 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 56 |

Malcious user 42 is selected!
user 42, loss 2.299296021958192, acc 0.06, mal loss 110.21784400939941, mal acc 0.11875
user 76, loss nan, acc 0.16
user 51, loss nan, acc 0.1
user 69, loss nan, acc 0.12
user 73, loss nan, acc 0.06
user 82, loss nan, acc 0.18
user 1, loss nan, acc 0.08
user 32, loss nan, acc 0.04
user 12, loss nan, acc 0.12
user 45, loss nan, acc 0.14
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 56 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 57 |

Malcious user 27 is selected!
user 27, loss 2.299329375227292, acc 0.14, mal loss 110.21790266036987, mal acc 0.11875
user 66, loss nan, acc 0.14
user 13, loss nan, acc 0.04
user 55, loss nan, acc 0.1
Malcious user 28 is selected!
user 28, loss 2.299278891583284, acc 0.04, mal loss 110.21896815299988, mal acc 0.11875
user 58, loss nan, acc 0.16
user 81, loss nan, acc 0.04
user 15, loss nan, acc 0.08
user 24, loss nan, acc 0.12
user 74, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 57 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 58 |

user 69, loss nan, acc 0.12
Malcious user 39 is selected!
user 39, loss 2.2993247245748836, acc 0.2, mal loss 110.21756839752197, mal acc 0.11875
user 61, loss nan, acc 0.08
user 49, loss nan, acc 0.04
user 24, loss nan, acc 0.12
user 62, loss nan, acc 0.18
user 6, loss nan, acc 0.14
user 74, loss nan, acc 0.08
user 81, loss nan, acc 0.04
user 90, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 58 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 59 |

user 98, loss nan, acc 0.1
user 97, loss nan, acc 0.08
Malcious user 37 is selected!
user 37, loss 2.2993016451597215, acc 0.14, mal loss 110.21682548522949, mal acc 0.11875
user 96, loss nan, acc 0.1
Malcious user 23 is selected!
user 23, loss 2.299278639256954, acc 0.06, mal loss 110.21805310249329, mal acc 0.11875
Malcious user 75 is selected!
user 75, loss 2.2992919703324635, acc 0.12, mal loss 110.21795678138733, mal acc 0.11875
Malcious user 28 is selected!
user 28, loss 2.2992712557315826, acc 0.04, mal loss 110.21755528450012, mal acc 0.11875
user 40, loss nan, acc 0.08
user 34, loss nan, acc 0.06
user 22, loss nan, acc 0.06
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 59 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 60 |

user 40, loss nan, acc 0.08
user 86, loss nan, acc 0.06
user 5, loss nan, acc 0.08
user 10, loss nan, acc 0.08
user 3, loss nan, acc 0.08
user 83, loss nan, acc 0.16
user 85, loss nan, acc 0.1
user 16, loss nan, acc 0.12
user 90, loss nan, acc 0.08
Malcious user 37 is selected!
user 37, loss 2.2992747753858565, acc 0.14, mal loss 110.21786165237427, mal acc 0.11875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 60 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 61 |

user 5, loss nan, acc 0.08
user 47, loss nan, acc 0.04
user 36, loss nan, acc 0.12
user 48, loss nan, acc 0.1
user 15, loss nan, acc 0.08
user 67, loss nan, acc 0.12
user 11, loss nan, acc 0.14
user 96, loss nan, acc 0.1
user 14, loss nan, acc 0.16
user 64, loss nan, acc 0.16
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 61%|██████    | 61/100 [12:46<07:56, 12.21s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 62%|██████▏   | 62/100 [12:59<07:47, 12.29s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 63%|██████▎   | 63/100 [13:10<07:25, 12.05s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 64%|██████▍   | 64/100 [13:23<07:17, 12.14s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 65%|██████▌   | 65/100 [13:35<07:10, 12.29s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 66%|██████▌   | 66/100 [13:47<06:52, 12.13s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 67%|██████▋   | 67/100 [13:59<06:40, 12.13s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 68%|██████▊   | 68/100 [14:12<06:35, 12.37s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 69%|██████▉   | 69/100 [14:23<06:12, 12.02s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 70%|███████   | 70/100 [14:36<06:04, 12.15s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 71%|███████   | 71/100 [14:48<05:52, 12.15s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 72%|███████▏  | 72/100 [15:00<05:42, 12.25s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 
Avg Training Stats after 61 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 62 |

user 19, loss nan, acc 0.04
user 60, loss nan, acc 0.08
user 4, loss nan, acc 0.12
Malcious user 27 is selected!
user 27, loss 2.2992639164129893, acc 0.14, mal loss 110.22036361694336, mal acc 0.11875
user 14, loss nan, acc 0.16
user 18, loss nan, acc 0.1
user 54, loss nan, acc 0.08
user 76, loss nan, acc 0.16
user 77, loss nan, acc 0.1
user 95, loss nan, acc 0.06
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 62 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 63 |

user 25, loss nan, acc 0.12
user 48, loss nan, acc 0.1
user 98, loss nan, acc 0.1
user 57, loss nan, acc 0.1
user 60, loss nan, acc 0.08
user 56, loss nan, acc 0.1
user 88, loss nan, acc 0.08
user 13, loss nan, acc 0.04
user 97, loss nan, acc 0.08
Malcious user 23 is selected!
user 23, loss 2.2992972433567047, acc 0.06, mal loss 110.21748518943787, mal acc 0.11875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 63 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 64 |

Malcious user 28 is selected!
user 28, loss 2.2993105684717494, acc 0.04, mal loss 110.21826887130737, mal acc 0.11875
user 95, loss nan, acc 0.06
user 0, loss nan, acc 0.08
user 2, loss nan, acc 0.12
user 41, loss nan, acc 0.12
Malcious user 39 is selected!
user 39, loss 2.299234572549661, acc 0.2, mal loss 110.21889662742615, mal acc 0.11875
user 58, loss nan, acc 0.16
user 72, loss nan, acc 0.1
user 24, loss nan, acc 0.12
user 99, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 64 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 65 |

user 76, loss nan, acc 0.16
user 78, loss nan, acc 0.12
user 38, loss nan, acc 0.18
user 52, loss nan, acc 0.12
user 55, loss nan, acc 0.1
user 92, loss nan, acc 0.12
user 63, loss nan, acc 0.12
user 14, loss nan, acc 0.16
user 32, loss nan, acc 0.04
user 46, loss nan, acc 0.08
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 65 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 66 |

user 50, loss nan, acc 0.18
user 60, loss nan, acc 0.08
user 78, loss nan, acc 0.12
user 32, loss nan, acc 0.04
user 25, loss nan, acc 0.12
user 47, loss nan, acc 0.04
user 52, loss nan, acc 0.12
user 15, loss nan, acc 0.08
user 97, loss nan, acc 0.08
Malcious user 43 is selected!
user 43, loss 2.2992796008785565, acc 0.06, mal loss 110.21807885169983, mal acc 0.11875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 66 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 67 |

user 18, loss nan, acc 0.1
user 34, loss nan, acc 0.06
user 80, loss nan, acc 0.2
user 1, loss nan, acc 0.08
Malcious user 28 is selected!
user 28, loss 2.2992880662282307, acc 0.04, mal loss 110.21749186515808, mal acc 0.11875
user 25, loss nan, acc 0.12
user 85, loss nan, acc 0.1
Malcious user 39 is selected!
user 39, loss 2.2993029788136483, acc 0.2, mal loss 110.2185001373291, mal acc 0.11875
user 35, loss nan, acc 0.12
user 11, loss nan, acc 0.14
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 67 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 68 |

user 21, loss nan, acc 0.02
user 78, loss nan, acc 0.12
user 38, loss nan, acc 0.18
user 41, loss nan, acc 0.12
user 40, loss nan, acc 0.08
user 56, loss nan, acc 0.1
user 81, loss nan, acc 0.04
user 72, loss nan, acc 0.1
user 13, loss nan, acc 0.04
user 30, loss nan, acc 0.1
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 68 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 69 |

Malcious user 75 is selected!
user 75, loss 2.299242768685023, acc 0.12, mal loss 110.21847939491272, mal acc 0.11875
user 80, loss nan, acc 0.2
user 2, loss nan, acc 0.12
user 41, loss nan, acc 0.12
Malcious user 28 is selected!
user 28, loss 2.2993010466297465, acc 0.04, mal loss 110.21754741668701, mal acc 0.11875
Malcious user 43 is selected!
user 43, loss 2.2992660706241925, acc 0.06, mal loss 110.21735978126526, mal acc 0.11875
user 54, loss nan, acc 0.08
user 85, loss nan, acc 0.1
user 31, loss nan, acc 0.1
user 10, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 69 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 70 |

user 41, loss nan, acc 0.12
user 4, loss nan, acc 0.12
user 12, loss nan, acc 0.12
user 85, loss nan, acc 0.1
user 33, loss nan, acc 0.06
Malcious user 42 is selected!
user 42, loss 2.299274055659771, acc 0.06, mal loss 110.21865200996399, mal acc 0.11875
user 97, loss nan, acc 0.08
user 57, loss nan, acc 0.1
user 49, loss nan, acc 0.04
user 18, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 70 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 71 |

user 86, loss nan, acc 0.06
user 84, loss nan, acc 0.1
user 72, loss nan, acc 0.1
user 44, loss nan, acc 0.06
user 80, loss nan, acc 0.2
user 83, loss nan, acc 0.16
user 34, loss nan, acc 0.06
user 3, loss nan, acc 0.08
user 54, loss nan, acc 0.08
user 18, loss nan, acc 0.1
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 71 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 72 |

user 58, loss nan, acc 0.16
user 13, loss nan, acc 0.04
user 99, loss nan, acc 0.12
user 54, loss nan, acc 0.08
user 65, loss nan, acc 0.14
user 83, loss nan, acc 0.16
user 63, loss nan, acc 0.12
user 45, loss nan, acc 0.14
user 85, loss nan, acc 0.1
user 98, loss nan, acc 0.1
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 72 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 73 |

user 72, loss nan, acc 0.1
user 78, loss nan, acc 0.12
user 7, loss nan, acc 0.04
user 14, loss nan, acc 0.16
user 44, loss nan, acc 0.06
user 16, loss nan, acc 0.12
user 30, loss nan, acc 0.1
user 35, loss nan, acc 0.12
user 57, loss nan, acc 0.1
user 41, loss nan, acc 0.12
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 73 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

 73%|███████▎  | 73/100 [15:13<05:35, 12.43s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 74%|███████▍  | 74/100 [15:25<05:20, 12.31s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 75%|███████▌  | 75/100 [15:38<05:11, 12.47s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 76%|███████▌  | 76/100 [15:50<04:52, 12.18s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 77%|███████▋  | 77/100 [16:03<04:45, 12.43s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 78%|███████▊  | 78/100 [16:15<04:32, 12.39s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 79%|███████▉  | 79/100 [16:27<04:16, 12.22s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 80%|████████  | 80/100 [16:40<04:08, 12.41s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 81%|████████  | 81/100 [16:51<03:51, 12.21s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 82%|████████▏ | 82/100 [17:04<03:40, 12.25s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 83%|████████▎ | 83/100 [17:16<03:29, 12.30s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 84%|████████▍ | 84/100 [17:28<03:15, 12.24s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 85%|████████▌ | 85/100 [17:39<02:58, 11.88s/it]Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 74 |

user 17, loss nan, acc 0.14
user 78, loss nan, acc 0.12
user 18, loss nan, acc 0.1
user 67, loss nan, acc 0.12
user 92, loss nan, acc 0.12
user 47, loss nan, acc 0.04
user 9, loss nan, acc 0.1
user 61, loss nan, acc 0.08
user 98, loss nan, acc 0.1
Malcious user 39 is selected!
user 39, loss 2.299297405779362, acc 0.2, mal loss 110.21749472618103, mal acc 0.11875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 74 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 75 |

user 8, loss nan, acc 0.12
user 5, loss nan, acc 0.08
user 22, loss nan, acc 0.06
user 76, loss nan, acc 0.16
user 93, loss nan, acc 0.16
user 83, loss nan, acc 0.16
user 1, loss nan, acc 0.08
Malcious user 28 is selected!
user 28, loss 2.299277789394061, acc 0.04, mal loss 110.21843147277832, mal acc 0.11875
user 92, loss nan, acc 0.12
user 26, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 75 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 76 |

user 10, loss nan, acc 0.08
user 53, loss nan, acc 0.08
user 97, loss nan, acc 0.08
user 50, loss nan, acc 0.18
user 98, loss nan, acc 0.1
Malcious user 28 is selected!
user 28, loss 2.2992545515298843, acc 0.04, mal loss 110.21882128715515, mal acc 0.11875
user 90, loss nan, acc 0.08
user 36, loss nan, acc 0.12
user 65, loss nan, acc 0.14
user 17, loss nan, acc 0.14
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 76 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 77 |

user 24, loss nan, acc 0.12
user 64, loss nan, acc 0.16
user 9, loss nan, acc 0.1
user 96, loss nan, acc 0.1
user 44, loss nan, acc 0.06
user 35, loss nan, acc 0.12
user 82, loss nan, acc 0.18
user 97, loss nan, acc 0.08
user 87, loss nan, acc 0.08
user 65, loss nan, acc 0.14
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 77 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 78 |

user 80, loss nan, acc 0.2
user 34, loss nan, acc 0.06
user 74, loss nan, acc 0.08
user 52, loss nan, acc 0.12
user 53, loss nan, acc 0.08
user 3, loss nan, acc 0.08
user 59, loss nan, acc 0.04
user 22, loss nan, acc 0.06
user 96, loss nan, acc 0.1
Malcious user 28 is selected!
user 28, loss 2.2992804552117985, acc 0.04, mal loss 110.2186176776886, mal acc 0.11875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 78 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 79 |

user 50, loss nan, acc 0.18
user 34, loss nan, acc 0.06
user 52, loss nan, acc 0.12
user 14, loss nan, acc 0.16
Malcious user 28 is selected!
user 28, loss 2.299307556450367, acc 0.04, mal loss 110.21831369400024, mal acc 0.11875
user 78, loss nan, acc 0.12
user 92, loss nan, acc 0.12
user 9, loss nan, acc 0.1
user 24, loss nan, acc 0.12
user 81, loss nan, acc 0.04
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 79 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 80 |

user 79, loss nan, acc 0.04
user 56, loss nan, acc 0.1
user 64, loss nan, acc 0.16
user 34, loss nan, acc 0.06
user 66, loss nan, acc 0.14
user 97, loss nan, acc 0.08
user 11, loss nan, acc 0.14
user 91, loss nan, acc 0.06
user 44, loss nan, acc 0.06
user 45, loss nan, acc 0.14
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 80 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 81 |

user 46, loss nan, acc 0.08
user 99, loss nan, acc 0.12
user 78, loss nan, acc 0.12
user 22, loss nan, acc 0.06
user 86, loss nan, acc 0.06
user 31, loss nan, acc 0.1
user 30, loss nan, acc 0.1
user 83, loss nan, acc 0.16
user 13, loss nan, acc 0.04
user 71, loss nan, acc 0.16
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 81 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 82 |

user 7, loss nan, acc 0.04
user 46, loss nan, acc 0.08
user 95, loss nan, acc 0.06
user 15, loss nan, acc 0.08
user 5, loss nan, acc 0.08
user 45, loss nan, acc 0.14
user 57, loss nan, acc 0.1
user 67, loss nan, acc 0.12
user 3, loss nan, acc 0.08
user 59, loss nan, acc 0.04
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 82 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 83 |

user 65, loss nan, acc 0.14
user 22, loss nan, acc 0.06
user 52, loss nan, acc 0.12
user 30, loss nan, acc 0.1
user 8, loss nan, acc 0.12
user 0, loss nan, acc 0.08
user 31, loss nan, acc 0.1
user 21, loss nan, acc 0.02
user 84, loss nan, acc 0.1
user 94, loss nan, acc 0.1
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 83 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 84 |

user 34, loss nan, acc 0.06
user 32, loss nan, acc 0.04
user 61, loss nan, acc 0.08
Malcious user 39 is selected!
user 39, loss 2.29931400368611, acc 0.2, mal loss 110.21737694740295, mal acc 0.11875
user 58, loss nan, acc 0.16
user 25, loss nan, acc 0.12
user 83, loss nan, acc 0.16
user 80, loss nan, acc 0.2
user 76, loss nan, acc 0.16
Malcious user 23 is selected!
user 23, loss 2.299298856655757, acc 0.06, mal loss 110.21792221069336, mal acc 0.11875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 84 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 85 |

user 65, loss nan, acc 0.14
user 57, loss nan, acc 0.1
user 66, loss nan, acc 0.14
user 92, loss nan, acc 0.12
user 16, loss nan, acc 0.12
user 52, loss nan, acc 0.12
user 81, loss nan, acc 0.04
user 32, loss nan, acc 0.04
Malcious user 20 is selected!
user 20, loss 2.2992995421091718, acc 0.04, mal loss 110.2196877002716, mal acc 0.11875
Malcious user 28 is selected!
user 28, loss 2.2992857063810033, acc 0.04, mal loss 110.21890163421631, mal acc 0.11875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 85 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 86 |

user 14, loss nan, acc 0.16
user 3, loss nan, acc 0.08
user 12, loss nan, acc 0.12
user 52, loss nan, acc 0.12
user 56, loss nan, acc 0.1
user 15, loss nan, acc 0.08
user 53, loss nan, acc 0.08
Malcious user 39 is selected!
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 86%|████████▌ | 86/100 [17:52<02:49, 12.13s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 87%|████████▋ | 87/100 [18:05<02:40, 12.33s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 88%|████████▊ | 88/100 [18:17<02:27, 12.28s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 89%|████████▉ | 89/100 [18:30<02:16, 12.41s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 90%|█████████ | 90/100 [18:41<02:02, 12.24s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 91%|█████████ | 91/100 [18:54<01:51, 12.38s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 92%|█████████▏| 92/100 [19:07<01:40, 12.53s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 93%|█████████▎| 93/100 [19:19<01:25, 12.26s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 94%|█████████▍| 94/100 [19:32<01:14, 12.50s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 95%|█████████▌| 95/100 [19:44<01:02, 12.48s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 96%|█████████▌| 96/100 [19:57<00:49, 12.48s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 97%|█████████▋| 97/100 [20:09<00:37, 12.47s/it]user 39, loss 2.299295465648174, acc 0.2, mal loss 110.21928763389587, mal acc 0.11875
user 98, loss nan, acc 0.1
user 87, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 86 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 87 |

Malcious user 28 is selected!
user 28, loss 2.299300863842169, acc 0.04, mal loss 110.21908593177795, mal acc 0.11875
user 7, loss nan, acc 0.04
user 38, loss nan, acc 0.18
user 25, loss nan, acc 0.12
user 62, loss nan, acc 0.18
user 13, loss nan, acc 0.04
user 47, loss nan, acc 0.04
user 54, loss nan, acc 0.08
user 34, loss nan, acc 0.06
user 18, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 87 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 88 |

user 81, loss nan, acc 0.04
user 31, loss nan, acc 0.1
user 40, loss nan, acc 0.08
user 52, loss nan, acc 0.12
user 73, loss nan, acc 0.06
user 96, loss nan, acc 0.1
user 12, loss nan, acc 0.12
user 55, loss nan, acc 0.1
user 4, loss nan, acc 0.12
user 60, loss nan, acc 0.08
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 88 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 89 |

Malcious user 23 is selected!
user 23, loss 2.299245155354341, acc 0.06, mal loss 110.21925210952759, mal acc 0.11875
user 44, loss nan, acc 0.06
user 45, loss nan, acc 0.14
user 31, loss nan, acc 0.1
user 59, loss nan, acc 0.04
Malcious user 43 is selected!
user 43, loss 2.299285539984703, acc 0.06, mal loss 110.21932363510132, mal acc 0.11875
user 36, loss nan, acc 0.12
user 56, loss nan, acc 0.1
user 47, loss nan, acc 0.04
user 11, loss nan, acc 0.14
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 89 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 90 |

user 76, loss nan, acc 0.16
user 96, loss nan, acc 0.1
user 63, loss nan, acc 0.12
user 32, loss nan, acc 0.04
user 90, loss nan, acc 0.08
user 80, loss nan, acc 0.2
user 49, loss nan, acc 0.04
user 87, loss nan, acc 0.08
user 97, loss nan, acc 0.08
Malcious user 23 is selected!
user 23, loss 2.2992911448081332, acc 0.06, mal loss 110.22001504898071, mal acc 0.11875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 90 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 91 |

user 6, loss nan, acc 0.14
user 16, loss nan, acc 0.12
user 87, loss nan, acc 0.08
user 47, loss nan, acc 0.04
Malcious user 27 is selected!
user 27, loss 2.2992875213424364, acc 0.14, mal loss 110.21933579444885, mal acc 0.11875
user 41, loss nan, acc 0.12
Malcious user 28 is selected!
user 28, loss 2.299324497083823, acc 0.04, mal loss 110.21738004684448, mal acc 0.11875
user 88, loss nan, acc 0.08
user 50, loss nan, acc 0.18
user 33, loss nan, acc 0.06
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 91 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 92 |

user 94, loss nan, acc 0.1
user 56, loss nan, acc 0.1
user 54, loss nan, acc 0.08
user 35, loss nan, acc 0.12
user 48, loss nan, acc 0.1
user 17, loss nan, acc 0.14
user 6, loss nan, acc 0.14
Malcious user 42 is selected!
user 42, loss 2.2992537339528405, acc 0.06, mal loss 110.21804642677307, mal acc 0.11875
user 34, loss nan, acc 0.06
user 19, loss nan, acc 0.04
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 92 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 93 |

user 97, loss nan, acc 0.08
user 98, loss nan, acc 0.1
user 96, loss nan, acc 0.1
user 34, loss nan, acc 0.06
user 89, loss nan, acc 0.12
user 59, loss nan, acc 0.04
user 24, loss nan, acc 0.12
user 8, loss nan, acc 0.12
user 55, loss nan, acc 0.1
Malcious user 23 is selected!
user 23, loss 2.299294051527977, acc 0.06, mal loss 110.21873331069946, mal acc 0.11875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 93 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 94 |

user 59, loss nan, acc 0.04
user 54, loss nan, acc 0.08
user 50, loss nan, acc 0.18
user 78, loss nan, acc 0.12
user 19, loss nan, acc 0.04
user 25, loss nan, acc 0.12
user 94, loss nan, acc 0.1
user 7, loss nan, acc 0.04
user 3, loss nan, acc 0.08
user 95, loss nan, acc 0.06
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 94 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 95 |

user 6, loss nan, acc 0.14
user 94, loss nan, acc 0.1
user 48, loss nan, acc 0.1
user 99, loss nan, acc 0.12
user 87, loss nan, acc 0.08
user 9, loss nan, acc 0.1
user 58, loss nan, acc 0.16
user 65, loss nan, acc 0.14
user 97, loss nan, acc 0.08
user 79, loss nan, acc 0.04
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 95 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 96 |

user 38, loss nan, acc 0.18
user 53, loss nan, acc 0.08
user 16, loss nan, acc 0.12
user 99, loss nan, acc 0.12
user 91, loss nan, acc 0.06
user 84, loss nan, acc 0.1
Malcious user 20 is selected!
user 20, loss 2.299318432311217, acc 0.04, mal loss 110.21840500831604, mal acc 0.11875
user 50, loss nan, acc 0.18
user 21, loss nan, acc 0.02
user 49, loss nan, acc 0.04
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 96 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 97 |

user 57, loss nan, acc 0.1
user 59, loss nan, acc 0.04
Malcious user 23 is selected!
user 23, loss 2.29930354009072, acc 0.06, mal loss 110.21879291534424, mal acc 0.11875
user 12, loss nan, acc 0.12
Malcious user 39 is selected!
user 39, loss 2.2992812603712083, acc 0.2, mal loss 110.21860814094543, mal acc 0.11875
user 7, loss nan, acc 0.04
user 44, loss nan, acc 0.06
user 50, loss nan, acc 0.18
user 34, loss nan, acc 0.06
user 22, loss nan, acc 0.06
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 97 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 98 |

user 82, loss nan, acc 0.18
Malcious user 37 is selected!
user 37, loss 2.299245230356852, acc 0.14, mal loss 110.21680760383606, mal acc 0.11875
user 11, loss nan, acc 0.14
user 97, loss nan, acc 0.08
user 31, loss nan, acc 0.1
user 99, loss nan, acc 0.12
user 13, loss nan, acc 0.04
Malcious user 42 is selected!
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 98%|█████████▊| 98/100 [20:21<00:24, 12.24s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 99%|█████████▉| 99/100 [20:34<00:12, 12.41s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
100%|██████████| 100/100 [20:45<00:00, 12.16s/it]100%|██████████| 100/100 [20:45<00:00, 12.46s/it]
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
user 42, loss 2.299272684752941, acc 0.06, mal loss 110.21899509429932, mal acc 0.11875
user 68, loss nan, acc 0.08
user 88, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 98 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 99 |

user 90, loss nan, acc 0.08
user 80, loss nan, acc 0.2
user 15, loss nan, acc 0.08
user 77, loss nan, acc 0.1
user 35, loss nan, acc 0.12
user 34, loss nan, acc 0.06
Malcious user 28 is selected!
user 28, loss 2.299318778018157, acc 0.04, mal loss 110.2175121307373, mal acc 0.11875
user 21, loss nan, acc 0.02
user 31, loss nan, acc 0.1
user 54, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 99 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 100 |

user 81, loss nan, acc 0.04
user 18, loss nan, acc 0.1
user 87, loss nan, acc 0.08
user 57, loss nan, acc 0.1
user 6, loss nan, acc 0.14
user 99, loss nan, acc 0.12
user 13, loss nan, acc 0.04
user 31, loss nan, acc 0.1
user 70, loss nan, acc 0.14
Malcious user 37 is selected!
user 37, loss 2.2993136435747146, acc 0.14, mal loss 110.21962475776672, mal acc 0.11875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 100 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])

 
 Results after 100 global rounds of training:
|---- Test Accuracy: 10.00%

 Total Run Time: 1247.4767
Running fedavg.py with --dataset=cifar --label_tampering=none --weight_tampering=reverse

Experimental details:
    Model     : cnn
    Optimizer : sgd
    Learning  : 0.01
    Global Rounds   : 100

    Federated parameters:
    IID
    Fraction of users  : 0.1
    Local Batch size   : 10
    Local Epochs       : 10

CNNCifar(
  (conv1): Conv2d(3, 6, kernel_size=(5, 5), stride=(1, 1))
  (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (conv2): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))
  (fc1): Linear(in_features=400, out_features=120, bias=True)
  (fc2): Linear(in_features=120, out_features=84, bias=True)
  (fc3): Linear(in_features=84, out_features=10, bias=True)
)
[7956 7679 5752  627 4354 9636 4916  704 2160  365 4692 7131 1702 7326
 6900 3894 4739 1204 7662 6603 7591 5181 2520 6113 7333 9014 4710 1880
 7655 3590  390 9156 7601  344 4866 3419 1922 5319  601 9427  359 3442
 6710 6138 3382 6686 4105 6093 7886 2131 3574 6175  296 7643 3643  918
  459 9186 8365 3278 8803 1212 9218 8229 7494 3244 7442 8091 1379 2636
  880 8871 7727 8764  313 7053 7862 4812 1262 4731 7987 1659 3651 7873
 5246 8108 4961 4681 5648 9550 8189 6437 3741 8959 4100 3194 6020 1873
 8827 5318 6110 7600 4445 8329 1087 9901 4725 4927 8714 5554 7328 7953
 2283 2803 1612 8845  638 2375 5366 5800 1415 1791 8173   20 3009 6936
 7161 6588 3922 6183  999 7306 3488 8853  512 5089 5925  921 3781 5380
 6078  855 8721   22 9727 3689 5453 6444 6964 1754 2765 6364 6827 4350
 2819 6155 6792 9177 6661 7864 5523 8117 7208 2411 5618   91 5413  508
 1115 8854 6075 6727 3567 2207  630 5840 1777 1576 7224 2175 2750 1146
 6395 8536 1668 2658 8693 3426 4797 7756 4011 2199 4137 9575 1917 9214
 4431 3478 4863 2322 7273 9115 4477 4072 8982 4213 5092 8504 4512 6816
 2965 7064 9251 6889 8842 7015 5411 1804 7622 3505 8100 4259  940 3707
 7285 5262 3911 9337 1973  755 2337 2211 7795 7351 2570 4763 3300 6847
  449 8917 7856 7136  467 7522 6737 6176  761 2514 6101 5608 4801 8425
 6154 5073 4497  862 2964 6425 9218 8667 5700 5659 3322 3383 6100 4293
 8102 6779  503 5220 1686 9028 6467 3684 5512 4125 9387 7864  986 9361
 6315 8163 2345 3052 8785 7611 9585 8922 7354 2442 5014 5456 6082 5135
 2925 8413 3687 4944 8183 4754 7553 6755 9769 2147 1981 5429  145 8005
 5299 1266 7898 1584 1282 5920  821 8667 3081 6625 3076 6613 9951 2815
 4303 9507 1504 8043 6958 8873 1400 2711  648 6316 1293 6752 1021 9280
 2625 9275 8622 1923 1463 3647 5995 2913 1769 2049 2808 8609 8840 2359
 8967 7609 2965 6882 7883 4404 3143 7292 4826 1013  993 9301 1356   63
 8551 8472 7162 1761 7308 7943 2967 9134 8591  596 3460 2072 4523 6459
 2898 8146 7367 1416 1167 5868 8371 9586 3680 9950 7865 6705 1155 8439
 8651  524 9435 9373 4849 7979 9087 4475 2185 3497 9648  991 3051 3038
 9508 2686 2092 3730  335  817 9367 9072 9395 2897 8428 6670 3411 1103
 7478 3525 2596 1354 3608 6134 4917 2244 4746 6384  797 8550 8631 6827
 3349 4969 5923 2826 8535 8895 7368 8345 6631 9118 9266 3493 5590 8638
 3473 3138 8919 1782 3485 6247 2476 5905 1147 9414 8439 3128 4853 5613
   93 1308 3327 3050 9418 3504 6372  779 5899 6509 7448  691   18 4920
 4083 9390  846 8120]
malcious dataset true labels: [4, 6, 3, 4, 7, 6, 6, 7, 0, 4, 8, 6, 9, 4, 3, 7, 6, 6, 5, 9, 6, 1, 1, 2, 6, 7, 3, 1, 8, 7, 1, 6, 8, 8, 9, 4, 5, 7, 5, 1, 0, 6, 3, 3, 2, 9, 7, 2, 7, 7, 5, 3, 6, 8, 8, 8, 6, 7, 6, 0, 3, 1, 3, 8, 2, 7, 7, 7, 7, 1, 8, 9, 6, 1, 0, 1, 1, 8, 8, 4, 0, 8, 0, 1, 7, 5, 8, 9, 8, 6, 8, 0, 2, 1, 7, 3, 6, 6, 2, 1, 9, 8, 9, 8, 6, 3, 9, 1, 4, 9, 4, 1, 4, 5, 3, 2, 0, 0, 1, 2, 7, 4, 5, 7, 7, 9, 5, 0, 2, 5, 8, 4, 1, 2, 6, 6, 3, 9, 2, 1, 2, 7, 6, 4, 6, 7, 2, 3, 5, 7, 9, 3, 3, 4, 1, 8, 3, 9, 4, 1, 6, 8, 1, 0, 0, 3, 3, 9, 1, 4, 3, 6, 6, 3, 2, 2, 4, 7, 3, 3, 5, 2, 8, 1, 9, 7, 9, 0, 5, 5, 7, 2, 4, 5, 8, 9, 1, 4, 1, 0, 4, 8, 6, 5, 2, 4, 9, 1, 8, 1, 7, 5, 6, 5, 4, 3, 2, 5, 9, 4, 6, 5, 9, 6, 1, 4, 9, 5, 0, 2, 7, 7, 5, 2, 0, 0, 4, 8, 2, 0, 6, 1, 3, 9, 8, 9, 6, 9, 9, 9, 2, 6, 4, 8, 8, 3, 0, 2, 3, 4, 3, 2, 2, 8, 1, 9, 3, 8, 4, 0, 0, 8, 3, 9, 9, 8, 1, 1, 3, 8, 6, 0, 1, 3, 8, 7, 4, 9, 0, 4, 7, 1, 0, 1, 4, 9, 9, 8, 3, 3, 9, 9, 8, 7, 3, 6, 7, 1, 7, 0, 1, 7, 9, 8, 2, 4, 9, 4, 2, 8, 0, 3, 5, 0, 1, 0, 7, 5, 5, 5, 4, 7, 4, 9, 1, 9, 2, 8, 4, 1, 0, 1, 0, 0, 1, 3, 2, 6, 2, 2, 2, 0, 7, 9, 9, 3, 3, 5, 3, 1, 4, 7, 2, 3, 8, 2, 5, 1, 4, 1, 7, 5, 6, 7, 1, 6, 4, 6, 8, 8, 3, 3, 4, 9, 2, 5, 0, 3, 3, 3, 9, 8, 4, 0, 2, 1, 5, 3, 3, 1, 0, 0, 3, 5, 8, 3, 8, 7, 1, 1, 9, 5, 9, 9, 7, 3, 5, 3, 5, 0, 7, 2, 9, 1, 0, 3, 5, 9, 6, 7, 4, 1, 2, 3, 6, 1, 0, 4, 7, 0, 5, 9, 7, 4, 8, 0, 4, 0, 2, 8, 7, 3, 1, 0, 8, 1, 6, 5, 8, 9, 7, 5, 6, 5, 7, 0, 8, 9, 1, 5, 1, 9, 9, 2, 8, 7, 8, 7, 2, 8], malicious labels: [4, 6, 3, 4, 7, 6, 6, 7, 0, 4, 8, 6, 9, 4, 3, 7, 6, 6, 5, 9, 6, 1, 1, 2, 6, 7, 3, 1, 8, 7, 1, 6, 8, 8, 9, 4, 5, 7, 5, 1, 0, 6, 3, 3, 2, 9, 7, 2, 7, 7, 5, 3, 6, 8, 8, 8, 6, 7, 6, 0, 3, 1, 3, 8, 2, 7, 7, 7, 7, 1, 8, 9, 6, 1, 0, 1, 1, 8, 8, 4, 0, 8, 0, 1, 7, 5, 8, 9, 8, 6, 8, 0, 2, 1, 7, 3, 6, 6, 2, 1, 9, 8, 9, 8, 6, 3, 9, 1, 4, 9, 4, 1, 4, 5, 3, 2, 0, 0, 1, 2, 7, 4, 5, 7, 7, 9, 5, 0, 2, 5, 8, 4, 1, 2, 6, 6, 3, 9, 2, 1, 2, 7, 6, 4, 6, 7, 2, 3, 5, 7, 9, 3, 3, 4, 1, 8, 3, 9, 4, 1, 6, 8, 1, 0, 0, 3, 3, 9, 1, 4, 3, 6, 6, 3, 2, 2, 4, 7, 3, 3, 5, 2, 8, 1, 9, 7, 9, 0, 5, 5, 7, 2, 4, 5, 8, 9, 1, 4, 1, 0, 4, 8, 6, 5, 2, 4, 9, 1, 8, 1, 7, 5, 6, 5, 4, 3, 2, 5, 9, 4, 6, 5, 9, 6, 1, 4, 9, 5, 0, 2, 7, 7, 5, 2, 0, 0, 4, 8, 2, 0, 6, 1, 3, 9, 8, 9, 6, 9, 9, 9, 2, 6, 4, 8, 8, 3, 0, 2, 3, 4, 3, 2, 2, 8, 1, 9, 3, 8, 4, 0, 0, 8, 3, 9, 9, 8, 1, 1, 3, 8, 6, 0, 1, 3, 8, 7, 4, 9, 0, 4, 7, 1, 0, 1, 4, 9, 9, 8, 3, 3, 9, 9, 8, 7, 3, 6, 7, 1, 7, 0, 1, 7, 9, 8, 2, 4, 9, 4, 2, 8, 0, 3, 5, 0, 1, 0, 7, 5, 5, 5, 4, 7, 4, 9, 1, 9, 2, 8, 4, 1, 0, 1, 0, 0, 1, 3, 2, 6, 2, 2, 2, 0, 7, 9, 9, 3, 3, 5, 3, 1, 4, 7, 2, 3, 8, 2, 5, 1, 4, 1, 7, 5, 6, 7, 1, 6, 4, 6, 8, 8, 3, 3, 4, 9, 2, 5, 0, 3, 3, 3, 9, 8, 4, 0, 2, 1, 5, 3, 3, 1, 0, 0, 3, 5, 8, 3, 8, 7, 1, 1, 9, 5, 9, 9, 7, 3, 5, 3, 5, 0, 7, 2, 9, 1, 0, 3, 5, 9, 6, 7, 4, 1, 2, 3, 6, 1, 0, 4, 7, 0, 5, 9, 7, 4, 8, 0, 4, 0, 2, 8, 7, 3, 1, 0, 8, 1, 6, 5, 8, 9, 7, 5, 6, 5, 7, 0, 8, 9, 1, 5, 1, 9, 9, 2, 8, 7, 8, 7, 2, 8]
  0%|          | 0/100 [00:00<?, ?it/s]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  1%|          | 1/100 [00:13<22:47, 13.82s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  2%|▏         | 2/100 [00:26<21:02, 12.88s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  3%|▎         | 3/100 [00:37<19:49, 12.27s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  4%|▍         | 4/100 [00:50<20:02, 12.52s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  5%|▌         | 5/100 [01:02<19:36, 12.38s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  6%|▌         | 6/100 [01:14<19:21, 12.36s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  7%|▋         | 7/100 [01:27<19:16, 12.43s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  8%|▊         | 8/100 [01:39<18:57, 12.36s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  9%|▉         | 9/100 [01:52<18:43, 12.35s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 10%|█         | 10/100 [02:04<18:34, 12.38s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 11%|█         | 11/100 [02:17<18:31, 12.49s/it]
 | Global Training Round : 1 |

user 31, loss 2.289158720970154, acc 0.08
user 53, loss 2.279264235496521, acc 0.14
user 80, loss 2.290380800366402, acc 0.2
user 86, loss 2.2906135940551757, acc 0.16
user 9, loss 2.290573735833168, acc 0.16
user 7, loss 2.2851667004823684, acc 0.26
user 77, loss 2.2908347821235657, acc 0.22
user 49, loss 2.2931082582473756, acc 0.18
user 90, loss 2.2894998949766157, acc 0.14
user 79, loss 2.288360035419464, acc 0.28
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 1 global rounds:
Training Loss : 2.2886960757970813
Global model Benign Test Accuracy: 17.65% 

Global model Malicious Accuracy: 20.21%, Malicious Loss: 10880.81 , Outputs: tensor([0.1005, 0.1006, 0.1007, 0.1004, 0.1003, 0.1013, 0.1004, 0.1000, 0.1004,
        0.1008])


 | Global Training Round : 2 |

user 30, loss 2.034014320075512, acc 0.26
user 20, loss 2.078242594599724, acc 0.26
user 19, loss 2.0779920268058776, acc 0.18
Malcious user 39 is selected!
user 39, loss 2.299282822012901, acc 0.2, mal loss 110.21777081489563, mal acc 0.11875
user 48, loss 2.1034897965192796, acc 0.26
user 78, loss 2.0653112888336183, acc 0.34
user 11, loss 2.0771707665920256, acc 0.24
Malcious user 24 is selected!
user 24, loss 2.2992603649695713, acc 0.06, mal loss 110.21899032592773, mal acc 0.11875
Malcious user 59 is selected!
user 59, loss 2.2993024597565332, acc 0.06, mal loss 110.21914386749268, mal acc 0.11875
user 33, loss 2.058773292899132, acc 0.22
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 2 global rounds:
Training Loss : 2.2139900245517494
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 3 |

user 92, loss nan, acc 0.12
user 34, loss nan, acc 0.06
user 14, loss nan, acc 0.16
user 10, loss nan, acc 0.08
user 68, loss nan, acc 0.08
user 50, loss nan, acc 0.18
user 49, loss nan, acc 0.04
user 37, loss nan, acc 0.28
user 83, loss nan, acc 0.16
Malcious user 24 is selected!
user 24, loss 2.2992929756641387, acc 0.06, mal loss 110.21783876419067, mal acc 0.11875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 3 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 4 |

user 19, loss nan, acc 0.04
user 22, loss nan, acc 0.06
user 53, loss nan, acc 0.08
user 72, loss nan, acc 0.1
user 41, loss nan, acc 0.12
user 10, loss nan, acc 0.08
user 77, loss nan, acc 0.1
user 69, loss nan, acc 0.12
user 40, loss nan, acc 0.08
user 70, loss nan, acc 0.14
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 4 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 5 |

user 35, loss nan, acc 0.12
user 0, loss nan, acc 0.08
user 86, loss nan, acc 0.06
user 31, loss nan, acc 0.1
user 65, loss nan, acc 0.14
user 1, loss nan, acc 0.08
user 93, loss nan, acc 0.16
user 73, loss nan, acc 0.06
Malcious user 60 is selected!
user 60, loss 2.299276104569435, acc 0.06, mal loss 110.2187237739563, mal acc 0.11875
user 38, loss nan, acc 0.18
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 5 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 6 |

Malcious user 88 is selected!
user 88, loss 2.299256872634093, acc 0.16, mal loss 110.21894884109497, mal acc 0.11875
Malcious user 39 is selected!
user 39, loss 2.299259466926257, acc 0.2, mal loss 110.21831679344177, mal acc 0.11875
user 20, loss nan, acc 0.04
user 85, loss nan, acc 0.1
user 27, loss nan, acc 0.06
user 48, loss nan, acc 0.1
user 86, loss nan, acc 0.06
user 73, loss nan, acc 0.06
user 38, loss nan, acc 0.18
user 69, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 6 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 7 |

Malcious user 56 is selected!
user 56, loss 2.299311860402425, acc 0.06, mal loss 110.21816921234131, mal acc 0.11875
Malcious user 88 is selected!
user 88, loss 2.299272473156452, acc 0.16, mal loss 110.21842527389526, mal acc 0.11875
user 49, loss nan, acc 0.04
user 12, loss nan, acc 0.12
user 22, loss nan, acc 0.06
user 65, loss nan, acc 0.14
user 55, loss nan, acc 0.1
user 41, loss nan, acc 0.12
user 54, loss nan, acc 0.08
user 26, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 7 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 8 |

user 31, loss nan, acc 0.1
user 72, loss nan, acc 0.1
user 10, loss nan, acc 0.08
Malcious user 39 is selected!
user 39, loss 2.299253411591053, acc 0.2, mal loss 110.21917366981506, mal acc 0.11875
user 45, loss nan, acc 0.14
user 81, loss nan, acc 0.04
user 70, loss nan, acc 0.14
user 95, loss nan, acc 0.06
user 91, loss nan, acc 0.06
user 29, loss nan, acc 0.18
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 8 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 9 |

user 35, loss nan, acc 0.12
Malcious user 39 is selected!
user 39, loss 2.299326066176097, acc 0.2, mal loss 110.21808171272278, mal acc 0.11875
Malcious user 89 is selected!
user 89, loss 2.299268535276254, acc 0.12, mal loss 110.21821618080139, mal acc 0.11875
user 77, loss nan, acc 0.1
user 9, loss nan, acc 0.1
user 53, loss nan, acc 0.08
user 42, loss nan, acc 0.04
user 95, loss nan, acc 0.06
Malcious user 60 is selected!
user 60, loss 2.2992613916595777, acc 0.06, mal loss 110.21705150604248, mal acc 0.11875
user 3, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 9 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 10 |

user 37, loss nan, acc 0.28
user 82, loss nan, acc 0.18
user 97, loss nan, acc 0.08
user 15, loss nan, acc 0.08
user 90, loss nan, acc 0.08
user 42, loss nan, acc 0.04
user 73, loss nan, acc 0.06
user 43, loss nan, acc 0.18
user 86, loss nan, acc 0.06
user 12, loss nan, acc 0.12
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 10 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 11 |

user 74, loss nan, acc 0.08
user 65, loss nan, acc 0.14
user 69, loss nan, acc 0.12
user 16, loss nan, acc 0.12
user 64, loss nan, acc 0.16
user 43, loss nan, acc 0.18
user 44, loss nan, acc 0.06
user 78, loss nan, acc 0.12
user 63, loss nan, acc 0.12
user 47, loss nan, acc 0.04
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 11 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 12 |

user 38, loss nan, acc 0.18
user 36, loss nan, acc 0.12
user 15, loss nan, acc 0.08
user 19, loss nan, acc 0.04
user 64, loss nan, acc 0.16
Malcious user 60 is selected!
user 60, loss 2.299279105166594, acc 0.06, mal loss 110.21792268753052, mal acc 0.11875
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 12%|█▏        | 12/100 [02:30<18:37, 12.70s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 13%|█▎        | 13/100 [02:42<17:55, 12.37s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 14%|█▍        | 14/100 [02:54<17:41, 12.35s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 15%|█▌        | 15/100 [03:05<17:03, 12.04s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 16%|█▌        | 16/100 [03:17<16:51, 12.04s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 17%|█▋        | 17/100 [03:30<16:56, 12.25s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 18%|█▊        | 18/100 [03:42<16:47, 12.28s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 19%|█▉        | 19/100 [03:55<16:40, 12.36s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 20%|██        | 20/100 [04:07<16:20, 12.26s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 21%|██        | 21/100 [04:20<16:28, 12.51s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 22%|██▏       | 22/100 [04:33<16:26, 12.64s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 23%|██▎       | 23/100 [04:45<15:57, 12.44s/it]user 20, loss nan, acc 0.04
user 72, loss nan, acc 0.1
user 35, loss nan, acc 0.12
user 70, loss nan, acc 0.14
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 12 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 13 |

user 2, loss nan, acc 0.12
user 46, loss nan, acc 0.08
user 4, loss nan, acc 0.12
user 35, loss nan, acc 0.12
Malcious user 88 is selected!
user 88, loss 2.299235697587331, acc 0.16, mal loss 110.21666932106018, mal acc 0.11875
user 3, loss nan, acc 0.08
Malcious user 39 is selected!
user 39, loss 2.2992687876025832, acc 0.2, mal loss 110.21616077423096, mal acc 0.11875
user 52, loss nan, acc 0.12
user 84, loss nan, acc 0.1
user 72, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 13 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 14 |

user 9, loss nan, acc 0.1
user 54, loss nan, acc 0.08
user 22, loss nan, acc 0.06
user 0, loss nan, acc 0.08
user 69, loss nan, acc 0.12
user 66, loss nan, acc 0.14
user 31, loss nan, acc 0.1
user 70, loss nan, acc 0.14
Malcious user 23 is selected!
user 23, loss 2.299331682423751, acc 0.06, mal loss 110.21820902824402, mal acc 0.11875
user 37, loss nan, acc 0.28
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 14 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 15 |

user 75, loss nan, acc 0.12
Malcious user 56 is selected!
user 56, loss 2.2992750744024915, acc 0.06, mal loss 110.21872305870056, mal acc 0.11875
user 98, loss nan, acc 0.1
user 84, loss nan, acc 0.1
Malcious user 89 is selected!
user 89, loss 2.2992831821242965, acc 0.12, mal loss 110.21732568740845, mal acc 0.11875
user 22, loss nan, acc 0.06
user 66, loss nan, acc 0.14
user 20, loss nan, acc 0.04
Malcious user 23 is selected!
user 23, loss 2.299261056383451, acc 0.06, mal loss 110.21725368499756, mal acc 0.11875
user 94, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 15 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 16 |

user 91, loss nan, acc 0.06
user 31, loss nan, acc 0.1
user 40, loss nan, acc 0.08
user 26, loss nan, acc 0.1
user 93, loss nan, acc 0.16
Malcious user 56 is selected!
user 56, loss 2.299272555609544, acc 0.06, mal loss 110.21756529808044, mal acc 0.11875
user 53, loss nan, acc 0.08
user 82, loss nan, acc 0.18
user 25, loss nan, acc 0.12
Malcious user 89 is selected!
user 89, loss 2.2992966403563817, acc 0.12, mal loss 110.21652007102966, mal acc 0.11875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 16 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 17 |

user 54, loss nan, acc 0.08
user 93, loss nan, acc 0.16
user 4, loss nan, acc 0.12
user 43, loss nan, acc 0.18
user 87, loss nan, acc 0.08
user 81, loss nan, acc 0.04
user 30, loss nan, acc 0.1
user 72, loss nan, acc 0.1
user 18, loss nan, acc 0.1
user 25, loss nan, acc 0.12
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 17 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 18 |

user 46, loss nan, acc 0.08
user 65, loss nan, acc 0.14
user 63, loss nan, acc 0.12
user 97, loss nan, acc 0.08
user 77, loss nan, acc 0.1
user 14, loss nan, acc 0.16
user 99, loss nan, acc 0.12
user 1, loss nan, acc 0.08
user 13, loss nan, acc 0.04
user 78, loss nan, acc 0.12
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 18 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 19 |

user 6, loss nan, acc 0.14
Malcious user 24 is selected!
user 24, loss 2.29929352949063, acc 0.06, mal loss 110.21975040435791, mal acc 0.11875
user 58, loss nan, acc 0.16
user 47, loss nan, acc 0.04
user 66, loss nan, acc 0.14
user 55, loss nan, acc 0.1
user 96, loss nan, acc 0.1
user 63, loss nan, acc 0.12
user 62, loss nan, acc 0.18
Malcious user 60 is selected!
user 60, loss 2.299290151397387, acc 0.06, mal loss 110.21815371513367, mal acc 0.11875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 19 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 20 |

user 64, loss nan, acc 0.16
user 44, loss nan, acc 0.06
user 49, loss nan, acc 0.04
user 51, loss nan, acc 0.1
user 91, loss nan, acc 0.06
user 96, loss nan, acc 0.1
user 35, loss nan, acc 0.12
user 95, loss nan, acc 0.06
user 4, loss nan, acc 0.12
user 76, loss nan, acc 0.16
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 20 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 21 |

user 49, loss nan, acc 0.04
user 38, loss nan, acc 0.18
user 43, loss nan, acc 0.18
user 28, loss nan, acc 0.08
user 45, loss nan, acc 0.14
user 79, loss nan, acc 0.04
user 50, loss nan, acc 0.18
user 86, loss nan, acc 0.06
user 1, loss nan, acc 0.08
user 4, loss nan, acc 0.12
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 21 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 22 |

user 15, loss nan, acc 0.08
user 87, loss nan, acc 0.08
user 62, loss nan, acc 0.18
user 12, loss nan, acc 0.12
user 74, loss nan, acc 0.08
user 82, loss nan, acc 0.18
Malcious user 88 is selected!
user 88, loss 2.299278280635675, acc 0.16, mal loss 110.21931982040405, mal acc 0.11875
user 55, loss nan, acc 0.1
user 94, loss nan, acc 0.1
user 99, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 22 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 23 |

user 95, loss nan, acc 0.06
Malcious user 39 is selected!
user 39, loss 2.299296592672666, acc 0.2, mal loss 110.21760559082031, mal acc 0.11875
user 40, loss nan, acc 0.08
user 71, loss nan, acc 0.16
user 55, loss nan, acc 0.1
user 2, loss nan, acc 0.12
user 75, loss nan, acc 0.12
user 20, loss nan, acc 0.04
user 28, loss nan, acc 0.08
user 25, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 23 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 24 |

Malcious user 88 is selected!
user 88, loss 2.299262327949206, acc 0.16, mal loss 110.21795868873596, mal acc 0.11875
user 10, loss nan, acc 0.08
Malcious user 24 is selected!
user 24, loss 2.2992476637164754, acc 0.06, mal loss 110.21814274787903, mal acc 0.11875
user 97, loss nan, acc 0.08/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 24%|██▍       | 24/100 [04:57<15:41, 12.39s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 25%|██▌       | 25/100 [05:10<15:32, 12.44s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 26%|██▌       | 26/100 [05:22<15:26, 12.52s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 27%|██▋       | 27/100 [05:35<15:24, 12.67s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 28%|██▊       | 28/100 [05:47<14:46, 12.31s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 29%|██▉       | 29/100 [05:59<14:25, 12.19s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 30%|███       | 30/100 [06:11<14:16, 12.24s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 31%|███       | 31/100 [06:22<13:46, 11.97s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 32%|███▏      | 32/100 [06:35<13:43, 12.11s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 33%|███▎      | 33/100 [06:47<13:26, 12.04s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 34%|███▍      | 34/100 [07:00<13:30, 12.29s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 35%|███▌      | 35/100 [07:13<13:34, 12.53s/it]
user 70, loss nan, acc 0.14
Malcious user 23 is selected!
user 23, loss 2.299262695511182, acc 0.06, mal loss 110.2166395187378, mal acc 0.11875
user 9, loss nan, acc 0.1
user 3, loss nan, acc 0.08
user 8, loss nan, acc 0.12
user 43, loss nan, acc 0.18
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 24 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 25 |

user 0, loss nan, acc 0.08
user 4, loss nan, acc 0.12
user 17, loss nan, acc 0.14
user 84, loss nan, acc 0.1
user 22, loss nan, acc 0.06
user 42, loss nan, acc 0.04
user 12, loss nan, acc 0.12
user 13, loss nan, acc 0.04
user 19, loss nan, acc 0.04
user 16, loss nan, acc 0.12
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 25 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 26 |

user 87, loss nan, acc 0.08
user 93, loss nan, acc 0.16
user 52, loss nan, acc 0.12
user 66, loss nan, acc 0.14
Malcious user 60 is selected!
user 60, loss 2.2993075370788576, acc 0.06, mal loss 110.22013759613037, mal acc 0.11875
user 91, loss nan, acc 0.06
user 43, loss nan, acc 0.18
Malcious user 56 is selected!
user 56, loss 2.2992853929599124, acc 0.06, mal loss 110.2168562412262, mal acc 0.11875
user 94, loss nan, acc 0.1
user 12, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 26 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 27 |

user 62, loss nan, acc 0.18
user 14, loss nan, acc 0.16
user 8, loss nan, acc 0.12
user 47, loss nan, acc 0.04
user 36, loss nan, acc 0.12
user 33, loss nan, acc 0.06
user 77, loss nan, acc 0.1
user 66, loss nan, acc 0.14
user 17, loss nan, acc 0.14
user 34, loss nan, acc 0.06
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 27 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 28 |

user 49, loss nan, acc 0.04
Malcious user 23 is selected!
user 23, loss 2.299275102714698, acc 0.06, mal loss 110.21863985061646, mal acc 0.11875
user 33, loss nan, acc 0.06
user 84, loss nan, acc 0.1
user 52, loss nan, acc 0.12
user 66, loss nan, acc 0.14
Malcious user 89 is selected!
user 89, loss 2.2992860143383345, acc 0.12, mal loss 110.21820616722107, mal acc 0.11875
user 87, loss nan, acc 0.08
user 9, loss nan, acc 0.1
user 83, loss nan, acc 0.16
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 28 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 29 |

user 74, loss nan, acc 0.08
user 3, loss nan, acc 0.08
Malcious user 24 is selected!
user 24, loss 2.2993074481685953, acc 0.06, mal loss 110.21904587745667, mal acc 0.11875
user 10, loss nan, acc 0.08
user 93, loss nan, acc 0.16
user 28, loss nan, acc 0.08
user 43, loss nan, acc 0.18
Malcious user 56 is selected!
user 56, loss 2.2992953737576802, acc 0.06, mal loss 110.2188572883606, mal acc 0.11875
user 73, loss nan, acc 0.06
user 21, loss nan, acc 0.02
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 29 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 30 |

user 8, loss nan, acc 0.12
user 70, loss nan, acc 0.14
user 81, loss nan, acc 0.04
user 93, loss nan, acc 0.16
user 16, loss nan, acc 0.12
Malcious user 88 is selected!
user 88, loss 2.299277884761492, acc 0.16, mal loss 110.2182137966156, mal acc 0.11875
user 62, loss nan, acc 0.18
user 6, loss nan, acc 0.14
user 36, loss nan, acc 0.12
user 74, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 30 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 31 |

user 55, loss nan, acc 0.1
user 58, loss nan, acc 0.16
user 80, loss nan, acc 0.2
user 69, loss nan, acc 0.12
user 30, loss nan, acc 0.1
Malcious user 32 is selected!
user 32, loss 2.299271582563718, acc 0.18, mal loss 110.21915221214294, mal acc 0.11875
user 35, loss nan, acc 0.12
user 73, loss nan, acc 0.06
user 52, loss nan, acc 0.12
Malcious user 60 is selected!
user 60, loss 2.2993032366037367, acc 0.06, mal loss 110.21941709518433, mal acc 0.11875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 31 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 32 |

Malcious user 24 is selected!
user 24, loss 2.299277576804161, acc 0.06, mal loss 110.21871709823608, mal acc 0.11875
user 36, loss nan, acc 0.12
user 70, loss nan, acc 0.14
user 63, loss nan, acc 0.12
user 93, loss nan, acc 0.16
user 14, loss nan, acc 0.16
Malcious user 56 is selected!
user 56, loss 2.299235114951929, acc 0.06, mal loss 110.21935772895813, mal acc 0.11875
user 95, loss nan, acc 0.06
user 92, loss nan, acc 0.12
user 61, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 32 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 33 |

user 9, loss nan, acc 0.1
user 15, loss nan, acc 0.08
user 5, loss nan, acc 0.08
user 55, loss nan, acc 0.1
user 82, loss nan, acc 0.18
user 69, loss nan, acc 0.12
user 74, loss nan, acc 0.08
user 84, loss nan, acc 0.1
user 80, loss nan, acc 0.2
user 44, loss nan, acc 0.06
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 33 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 34 |

user 35, loss nan, acc 0.12
user 48, loss nan, acc 0.1
user 94, loss nan, acc 0.1
user 52, loss nan, acc 0.12
user 79, loss nan, acc 0.04
user 38, loss nan, acc 0.18
user 70, loss nan, acc 0.14
user 26, loss nan, acc 0.1
Malcious user 88 is selected!
user 88, loss 2.2993376731872557, acc 0.16, mal loss 110.21845507621765, mal acc 0.11875
user 12, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 34 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 35 |

user 27, loss nan, acc 0.06
user 41, loss nan, acc 0.12
user 45, loss nan, acc 0.14
user 69, loss nan, acc 0.12
user 26, loss nan, acc 0.1
user 21, loss nan, acc 0.02
user 33, loss nan, acc 0.06
user 53, loss nan, acc 0.08
user 83, loss nan, acc 0.16
user 50, loss nan, acc 0.18
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 35 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 36 |

Malcious user 23 is selected!
user 23, loss 2.2992597197492914, acc 0.06, mal loss 110.2183747291565, mal acc 0.11875
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 36%|███▌      | 36/100 [07:24<13:05, 12.27s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 37%|███▋      | 37/100 [07:37<13:03, 12.44s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 38%|███▊      | 38/100 [07:48<12:20, 11.94s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 39%|███▉      | 39/100 [08:01<12:24, 12.20s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 40%|████      | 40/100 [08:13<12:19, 12.32s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 41%|████      | 41/100 [08:25<11:59, 12.19s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 42%|████▏     | 42/100 [08:38<11:53, 12.31s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 43%|████▎     | 43/100 [08:50<11:35, 12.21s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 44%|████▍     | 44/100 [09:02<11:14, 12.04s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 45%|████▌     | 45/100 [09:14<11:05, 12.09s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 46%|████▌     | 46/100 [09:26<10:48, 12.01s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
user 36, loss nan, acc 0.12
user 19, loss nan, acc 0.04
user 50, loss nan, acc 0.18
user 75, loss nan, acc 0.12
user 30, loss nan, acc 0.1
user 2, loss nan, acc 0.12
user 9, loss nan, acc 0.1
user 6, loss nan, acc 0.14
user 13, loss nan, acc 0.04
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 36 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 37 |

user 47, loss nan, acc 0.04
user 45, loss nan, acc 0.14
user 84, loss nan, acc 0.1
user 36, loss nan, acc 0.12
user 80, loss nan, acc 0.2
user 55, loss nan, acc 0.1
Malcious user 88 is selected!
user 88, loss 2.299258134762446, acc 0.16, mal loss 110.21840524673462, mal acc 0.11875
user 77, loss nan, acc 0.1
user 62, loss nan, acc 0.18
user 90, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 37 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 38 |

user 46, loss nan, acc 0.08
user 62, loss nan, acc 0.18
user 70, loss nan, acc 0.14
user 87, loss nan, acc 0.08
Malcious user 23 is selected!
user 23, loss 2.2993037899335222, acc 0.06, mal loss 110.21946215629578, mal acc 0.11875
user 65, loss nan, acc 0.14
Malcious user 60 is selected!
user 60, loss 2.2992706934611005, acc 0.06, mal loss 110.21741080284119, mal acc 0.11875
user 22, loss nan, acc 0.06
Malcious user 88 is selected!
user 88, loss 2.299255392452081, acc 0.16, mal loss 110.21679854393005, mal acc 0.11875
user 82, loss nan, acc 0.18
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 38 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 39 |

user 55, loss nan, acc 0.1
user 48, loss nan, acc 0.1
user 65, loss nan, acc 0.14
user 93, loss nan, acc 0.16
user 53, loss nan, acc 0.08
user 26, loss nan, acc 0.1
user 71, loss nan, acc 0.16
user 87, loss nan, acc 0.08
user 81, loss nan, acc 0.04
user 4, loss nan, acc 0.12
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 39 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 40 |

user 47, loss nan, acc 0.04
user 54, loss nan, acc 0.08
Malcious user 59 is selected!
user 59, loss 2.299297525982062, acc 0.06, mal loss 110.2192485332489, mal acc 0.11875
user 38, loss nan, acc 0.18
user 0, loss nan, acc 0.08
user 41, loss nan, acc 0.12
user 78, loss nan, acc 0.12
user 69, loss nan, acc 0.12
user 92, loss nan, acc 0.12
user 66, loss nan, acc 0.14
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 40 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 41 |

user 17, loss nan, acc 0.14
user 82, loss nan, acc 0.18
user 74, loss nan, acc 0.08
user 79, loss nan, acc 0.04
user 40, loss nan, acc 0.08
user 41, loss nan, acc 0.12
user 70, loss nan, acc 0.14
user 36, loss nan, acc 0.12
user 83, loss nan, acc 0.16
user 15, loss nan, acc 0.08
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 41 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 42 |

user 12, loss nan, acc 0.12
user 3, loss nan, acc 0.08
user 40, loss nan, acc 0.08
user 85, loss nan, acc 0.1
Malcious user 56 is selected!
user 56, loss 2.2992895806829137, acc 0.06, mal loss 110.2190809249878, mal acc 0.11875
user 90, loss nan, acc 0.08
user 42, loss nan, acc 0.04
Malcious user 60 is selected!
user 60, loss 2.299259876211484, acc 0.06, mal loss 110.21832752227783, mal acc 0.11875
user 29, loss nan, acc 0.18
user 93, loss nan, acc 0.16
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 42 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 43 |

user 79, loss nan, acc 0.04
user 47, loss nan, acc 0.04
Malcious user 88 is selected!
user 88, loss 2.2992383976777395, acc 0.16, mal loss 110.21843838691711, mal acc 0.11875
user 20, loss nan, acc 0.04
user 37, loss nan, acc 0.28
user 81, loss nan, acc 0.04
Malcious user 32 is selected!
user 32, loss 2.2992653474211693, acc 0.18, mal loss 110.21739411354065, mal acc 0.11875
user 5, loss nan, acc 0.08
user 25, loss nan, acc 0.12
user 65, loss nan, acc 0.14
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 43 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 44 |

user 41, loss nan, acc 0.12
user 90, loss nan, acc 0.08
user 71, loss nan, acc 0.16
user 79, loss nan, acc 0.04
user 40, loss nan, acc 0.08
Malcious user 32 is selected!
user 32, loss 2.2992777074376742, acc 0.18, mal loss 110.21680235862732, mal acc 0.11875
user 75, loss nan, acc 0.12
user 76, loss nan, acc 0.16
user 51, loss nan, acc 0.1
user 52, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 44 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 45 |

user 69, loss nan, acc 0.12
user 44, loss nan, acc 0.06
Malcious user 60 is selected!
user 60, loss 2.2992859636743863, acc 0.06, mal loss 110.21817326545715, mal acc 0.11875
user 61, loss nan, acc 0.08
user 37, loss nan, acc 0.28
Malcious user 56 is selected!
user 56, loss 2.2992721021175386, acc 0.06, mal loss 110.2177414894104, mal acc 0.11875
user 81, loss nan, acc 0.04
Malcious user 57 is selected!
user 57, loss 2.2992876142263414, acc 0.12, mal loss 110.21829199790955, mal acc 0.11875
user 63, loss nan, acc 0.12
user 1, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 45 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 46 |

user 63, loss nan, acc 0.12
user 69, loss nan, acc 0.12
user 5, loss nan, acc 0.08
user 54, loss nan, acc 0.08
user 20, loss nan, acc 0.04
user 10, loss nan, acc 0.08
Malcious user 56 is selected!
user 56, loss 2.2992786397536595, acc 0.06, mal loss 110.21759915351868, mal acc 0.11875
user 17, loss nan, acc 0.14
user 15, loss nan, acc 0.08
user 84, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 46 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 47 |

user 44, loss nan, acc 0.06
user 63, loss nan, acc 0.12
user 91, loss nan, acc 0.06
user 53, loss nan, acc 0.08
Malcious user 59 is selected!
user 59, loss 2.299272685746352, acc 0.06, mal loss 110.21949648857117, mal acc 0.11875
user 2, loss nan, acc 0.12
user 61, loss nan, acc 0.08
user 98, loss nan, acc 0.1
user 21, loss nan, acc 0.02
user 18, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 47 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

 47%|████▋     | 47/100 [09:38<10:46, 12.20s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 48%|████▊     | 48/100 [09:51<10:35, 12.23s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 49%|████▉     | 49/100 [10:02<10:19, 12.14s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 50%|█████     | 50/100 [10:15<10:09, 12.19s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 51%|█████     | 51/100 [10:27<09:51, 12.07s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 52%|█████▏    | 52/100 [10:38<09:35, 11.98s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 53%|█████▎    | 53/100 [10:50<09:25, 12.02s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 54%|█████▍    | 54/100 [11:02<09:09, 11.94s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 55%|█████▌    | 55/100 [11:15<09:03, 12.09s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 56%|█████▌    | 56/100 [11:27<08:52, 12.09s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 57%|█████▋    | 57/100 [11:39<08:41, 12.13s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 58%|█████▊    | 58/100 [11:52<08:38, 12.35s/it]Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 48 |

user 76, loss nan, acc 0.16
user 29, loss nan, acc 0.18
user 68, loss nan, acc 0.08
Malcious user 57 is selected!
user 57, loss 2.2992572292685507, acc 0.12, mal loss 110.21796917915344, mal acc 0.11875
user 41, loss nan, acc 0.12
user 67, loss nan, acc 0.12
user 73, loss nan, acc 0.06
user 16, loss nan, acc 0.12
user 51, loss nan, acc 0.1
user 15, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 48 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 49 |

user 96, loss nan, acc 0.1
user 61, loss nan, acc 0.08
user 95, loss nan, acc 0.06
user 8, loss nan, acc 0.12
user 67, loss nan, acc 0.12
user 99, loss nan, acc 0.12
Malcious user 32 is selected!
user 32, loss 2.299267953137557, acc 0.18, mal loss 110.21905779838562, mal acc 0.11875
user 94, loss nan, acc 0.1
user 65, loss nan, acc 0.14
user 6, loss nan, acc 0.14
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 49 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 50 |

user 26, loss nan, acc 0.1
user 27, loss nan, acc 0.06
Malcious user 57 is selected!
user 57, loss 2.2993148202697435, acc 0.12, mal loss 110.21942663192749, mal acc 0.11875
user 31, loss nan, acc 0.1
user 80, loss nan, acc 0.2
user 61, loss nan, acc 0.08
user 34, loss nan, acc 0.06
user 10, loss nan, acc 0.08
user 1, loss nan, acc 0.08
user 36, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 50 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 51 |

user 72, loss nan, acc 0.1
user 46, loss nan, acc 0.08
user 70, loss nan, acc 0.14
user 20, loss nan, acc 0.04
user 30, loss nan, acc 0.1
user 76, loss nan, acc 0.16
user 98, loss nan, acc 0.1
user 78, loss nan, acc 0.12
user 43, loss nan, acc 0.18
user 33, loss nan, acc 0.06
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 51 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 52 |

Malcious user 32 is selected!
user 32, loss 2.2992642934123677, acc 0.18, mal loss 110.21683931350708, mal acc 0.11875
Malcious user 23 is selected!
user 23, loss 2.299292177458604, acc 0.06, mal loss 110.2187135219574, mal acc 0.11875
user 82, loss nan, acc 0.18
user 73, loss nan, acc 0.06
user 90, loss nan, acc 0.08
user 65, loss nan, acc 0.14
user 8, loss nan, acc 0.12
user 50, loss nan, acc 0.18
user 66, loss nan, acc 0.14
user 22, loss nan, acc 0.06
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 52 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 53 |

user 16, loss nan, acc 0.12
user 64, loss nan, acc 0.16
user 67, loss nan, acc 0.12
user 44, loss nan, acc 0.06
user 26, loss nan, acc 0.1
user 19, loss nan, acc 0.04
Malcious user 23 is selected!
user 23, loss 2.299286713202794, acc 0.06, mal loss 110.21716833114624, mal acc 0.11875
user 80, loss nan, acc 0.2
Malcious user 39 is selected!
user 39, loss 2.299299338956674, acc 0.2, mal loss 110.21802878379822, mal acc 0.11875
user 85, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 53 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 54 |

user 93, loss nan, acc 0.16
user 31, loss nan, acc 0.1
user 52, loss nan, acc 0.12
user 35, loss nan, acc 0.12
Malcious user 89 is selected!
user 89, loss 2.2992876480023066, acc 0.12, mal loss 110.21977400779724, mal acc 0.11875
user 16, loss nan, acc 0.12
user 38, loss nan, acc 0.18
user 83, loss nan, acc 0.16
user 29, loss nan, acc 0.18
user 90, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 54 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 55 |

user 61, loss nan, acc 0.08
Malcious user 39 is selected!
user 39, loss 2.299269651869933, acc 0.2, mal loss 110.21792483329773, mal acc 0.11875
user 93, loss nan, acc 0.16
user 49, loss nan, acc 0.04
user 68, loss nan, acc 0.08
user 92, loss nan, acc 0.12
user 7, loss nan, acc 0.04
user 66, loss nan, acc 0.14
user 52, loss nan, acc 0.12
user 33, loss nan, acc 0.06
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 55 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 56 |

user 46, loss nan, acc 0.08
user 63, loss nan, acc 0.12
user 68, loss nan, acc 0.08
user 81, loss nan, acc 0.04
user 95, loss nan, acc 0.06
user 41, loss nan, acc 0.12
Malcious user 56 is selected!
user 56, loss 2.2993103822072345, acc 0.06, mal loss 110.2197835445404, mal acc 0.11875
user 86, loss nan, acc 0.06
Malcious user 59 is selected!
user 59, loss 2.299263232946396, acc 0.06, mal loss 110.21734285354614, mal acc 0.11875
user 96, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 56 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 57 |

user 25, loss nan, acc 0.12
user 34, loss nan, acc 0.06
user 71, loss nan, acc 0.16
user 97, loss nan, acc 0.08
user 81, loss nan, acc 0.04
user 4, loss nan, acc 0.12
user 54, loss nan, acc 0.08
user 67, loss nan, acc 0.12
user 20, loss nan, acc 0.04
Malcious user 24 is selected!
user 24, loss 2.2992385144035024, acc 0.06, mal loss 110.2169337272644, mal acc 0.11875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 57 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 58 |

user 79, loss nan, acc 0.04
user 98, loss nan, acc 0.1
user 97, loss nan, acc 0.08
user 78, loss nan, acc 0.12
user 37, loss nan, acc 0.28
user 51, loss nan, acc 0.1
Malcious user 59 is selected!
user 59, loss 2.2992493043343227, acc 0.06, mal loss 110.21934986114502, mal acc 0.11875
user 85, loss nan, acc 0.1
user 91, loss nan, acc 0.06
user 26, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 58 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 59 |

user 40, loss nan, acc 0.08
user 76, loss nan, acc 0.16
user 77, loss nan, acc 0.1
Malcious user 39 is selected!
user 39, loss 2.299284880856673, acc 0.2, mal loss 110.2184681892395, mal acc 0.11875
user 68, loss nan, acc 0.08
user 28, loss nan, acc 0.08
user 4, loss nan, acc 0.12
user 30, loss nan, acc 0.1
user 71, loss nan, acc 0.16
user 3, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 59 global rounds:
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 59%|█████▉    | 59/100 [12:04<08:26, 12.35s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 60%|██████    | 60/100 [12:17<08:20, 12.51s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 61%|██████    | 61/100 [12:30<08:10, 12.58s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 62%|██████▏   | 62/100 [12:42<07:48, 12.33s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 63%|██████▎   | 63/100 [12:55<07:44, 12.56s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 64%|██████▍   | 64/100 [13:07<07:26, 12.41s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 65%|██████▌   | 65/100 [13:19<07:13, 12.38s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 66%|██████▌   | 66/100 [13:32<07:03, 12.45s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 67%|██████▋   | 67/100 [13:44<06:47, 12.34s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 68%|██████▊   | 68/100 [13:56<06:35, 12.35s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 69%|██████▉   | 69/100 [14:08<06:19, 12.23s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 70%|███████   | 70/100 [14:21<06:12, 12.41s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 71%|███████   | 71/100 [14:34<06:08, 12.71s/it]Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 60 |

user 9, loss nan, acc 0.1
user 67, loss nan, acc 0.12
user 98, loss nan, acc 0.1
Malcious user 23 is selected!
user 23, loss 2.299245434502761, acc 0.06, mal loss 110.21823310852051, mal acc 0.11875
user 45, loss nan, acc 0.14
user 4, loss nan, acc 0.12
user 68, loss nan, acc 0.08
user 8, loss nan, acc 0.12
user 19, loss nan, acc 0.04
user 17, loss nan, acc 0.14
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 60 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 61 |

user 2, loss nan, acc 0.12
user 34, loss nan, acc 0.06
user 36, loss nan, acc 0.12
user 85, loss nan, acc 0.1
user 6, loss nan, acc 0.14
user 18, loss nan, acc 0.1
user 86, loss nan, acc 0.06
user 20, loss nan, acc 0.04
user 7, loss nan, acc 0.04
user 75, loss nan, acc 0.12
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 61 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 62 |

user 92, loss nan, acc 0.12
user 94, loss nan, acc 0.1
user 13, loss nan, acc 0.04
Malcious user 23 is selected!
user 23, loss 2.2993190710743265, acc 0.06, mal loss 110.21966290473938, mal acc 0.11875
user 51, loss nan, acc 0.1
user 99, loss nan, acc 0.12
user 40, loss nan, acc 0.08
user 20, loss nan, acc 0.04
user 54, loss nan, acc 0.08
user 69, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 62 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 63 |

user 84, loss nan, acc 0.1
user 85, loss nan, acc 0.1
user 45, loss nan, acc 0.14
user 25, loss nan, acc 0.12
user 92, loss nan, acc 0.12
user 48, loss nan, acc 0.1
user 34, loss nan, acc 0.06
user 82, loss nan, acc 0.18
user 46, loss nan, acc 0.08
user 28, loss nan, acc 0.08
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 63 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 64 |

user 80, loss nan, acc 0.2
Malcious user 60 is selected!
user 60, loss 2.299276141325633, acc 0.06, mal loss 110.21917772293091, mal acc 0.11875
user 96, loss nan, acc 0.1
user 83, loss nan, acc 0.16
user 45, loss nan, acc 0.14
user 21, loss nan, acc 0.02
user 77, loss nan, acc 0.1
user 42, loss nan, acc 0.04
user 82, loss nan, acc 0.18
user 61, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 64 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 65 |

user 46, loss nan, acc 0.08
user 67, loss nan, acc 0.12
user 65, loss nan, acc 0.14
user 28, loss nan, acc 0.08
Malcious user 57 is selected!
user 57, loss 2.299308791259924, acc 0.12, mal loss 110.22020435333252, mal acc 0.11875
user 90, loss nan, acc 0.08
user 16, loss nan, acc 0.12
user 92, loss nan, acc 0.12
user 44, loss nan, acc 0.06
user 3, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 65 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 66 |

user 42, loss nan, acc 0.04
user 91, loss nan, acc 0.06
Malcious user 56 is selected!
user 56, loss 2.2992775574326516, acc 0.06, mal loss 110.21846079826355, mal acc 0.11875
user 74, loss nan, acc 0.08
user 1, loss nan, acc 0.08
user 0, loss nan, acc 0.08
Malcious user 24 is selected!
user 24, loss 2.299281189839045, acc 0.06, mal loss 110.21690583229065, mal acc 0.11875
user 87, loss nan, acc 0.08
user 95, loss nan, acc 0.06
Malcious user 60 is selected!
user 60, loss 2.299254398544629, acc 0.06, mal loss 110.21856331825256, mal acc 0.11875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 66 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 67 |

user 36, loss nan, acc 0.12
user 20, loss nan, acc 0.04
user 18, loss nan, acc 0.1
user 14, loss nan, acc 0.16
user 45, loss nan, acc 0.14
user 84, loss nan, acc 0.1
user 31, loss nan, acc 0.1
user 85, loss nan, acc 0.1
user 30, loss nan, acc 0.1
user 4, loss nan, acc 0.12
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 67 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 68 |

user 70, loss nan, acc 0.14
user 4, loss nan, acc 0.12
user 94, loss nan, acc 0.1
user 79, loss nan, acc 0.04
user 71, loss nan, acc 0.16
user 54, loss nan, acc 0.08
user 44, loss nan, acc 0.06
Malcious user 56 is selected!
user 56, loss 2.2992572665214537, acc 0.06, mal loss 110.21868348121643, mal acc 0.11875
Malcious user 32 is selected!
user 32, loss 2.2992706964413325, acc 0.18, mal loss 110.21612811088562, mal acc 0.11875
user 69, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 68 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 69 |

user 98, loss nan, acc 0.1
user 96, loss nan, acc 0.1
user 79, loss nan, acc 0.04
user 49, loss nan, acc 0.04
user 78, loss nan, acc 0.12
Malcious user 23 is selected!
user 23, loss 2.299287950495879, acc 0.06, mal loss 110.21990871429443, mal acc 0.11875
user 74, loss nan, acc 0.08
user 86, loss nan, acc 0.06
user 5, loss nan, acc 0.08
user 26, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 69 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 70 |

user 28, loss nan, acc 0.08
user 82, loss nan, acc 0.18
user 6, loss nan, acc 0.14
user 64, loss nan, acc 0.16
user 99, loss nan, acc 0.12
user 80, loss nan, acc 0.2
user 67, loss nan, acc 0.12
user 36, loss nan, acc 0.12
user 78, loss nan, acc 0.12
user 84, loss nan, acc 0.1
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 70 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 71 |

user 80, loss nan, acc 0.2
user 21, loss nan, acc 0.02
user 48, loss nan, acc 0.1
user 35, loss nan, acc 0.12
user 76, loss nan, acc 0.16
user 63, loss nan, acc 0.12
user 85, loss nan, acc 0.1
user 71, loss nan, acc 0.16
user 14, loss nan, acc 0.16
user 86, loss nan, acc 0.06
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 71 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 72 |

user 91, loss nan, acc 0.06
user 4, loss nan, acc 0.12
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 72%|███████▏  | 72/100 [14:46<05:47, 12.41s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 73%|███████▎  | 73/100 [14:58<05:35, 12.43s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 74%|███████▍  | 74/100 [15:10<05:15, 12.12s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 75%|███████▌  | 75/100 [15:23<05:08, 12.34s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 76%|███████▌  | 76/100 [15:35<04:57, 12.39s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 77%|███████▋  | 77/100 [15:48<04:46, 12.44s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 78%|███████▊  | 78/100 [16:00<04:33, 12.41s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 79%|███████▉  | 79/100 [16:12<04:14, 12.11s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 80%|████████  | 80/100 [16:24<04:03, 12.16s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 81%|████████  | 81/100 [16:36<03:53, 12.30s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 82%|████████▏ | 82/100 [16:49<03:43, 12.41s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 83%|████████▎ | 83/100 [17:01<03:26, 12.16s/it]user 25, loss nan, acc 0.12
Malcious user 89 is selected!
user 89, loss 2.2992609416445093, acc 0.12, mal loss 110.22000622749329, mal acc 0.11875
user 97, loss nan, acc 0.08
user 83, loss nan, acc 0.16
user 1, loss nan, acc 0.08
user 15, loss nan, acc 0.08
user 0, loss nan, acc 0.08
user 67, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 72 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 73 |

user 44, loss nan, acc 0.06
user 70, loss nan, acc 0.14
user 82, loss nan, acc 0.18
user 53, loss nan, acc 0.08
user 72, loss nan, acc 0.1
Malcious user 89 is selected!
user 89, loss 2.2992818812529245, acc 0.12, mal loss 110.21813297271729, mal acc 0.11875
user 16, loss nan, acc 0.12
user 5, loss nan, acc 0.08
user 19, loss nan, acc 0.04
user 35, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 73 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 74 |

user 75, loss nan, acc 0.12
user 26, loss nan, acc 0.1
user 15, loss nan, acc 0.08
user 96, loss nan, acc 0.1
user 22, loss nan, acc 0.06
user 48, loss nan, acc 0.1
user 55, loss nan, acc 0.1
user 1, loss nan, acc 0.08
user 67, loss nan, acc 0.12
user 86, loss nan, acc 0.06
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 74 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 75 |

user 77, loss nan, acc 0.1
user 13, loss nan, acc 0.04
user 65, loss nan, acc 0.14
user 8, loss nan, acc 0.12
user 69, loss nan, acc 0.12
user 71, loss nan, acc 0.16
user 48, loss nan, acc 0.1
user 90, loss nan, acc 0.08
user 17, loss nan, acc 0.14
user 26, loss nan, acc 0.1
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 75 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 76 |

user 38, loss nan, acc 0.18
Malcious user 23 is selected!
user 23, loss 2.29926926245292, acc 0.06, mal loss 110.21724462509155, mal acc 0.11875
user 36, loss nan, acc 0.12
user 6, loss nan, acc 0.14
user 37, loss nan, acc 0.28
user 70, loss nan, acc 0.14
user 97, loss nan, acc 0.08
user 15, loss nan, acc 0.08
user 14, loss nan, acc 0.16
user 22, loss nan, acc 0.06
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 76 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 77 |

user 4, loss nan, acc 0.12
user 71, loss nan, acc 0.16
user 95, loss nan, acc 0.06
user 26, loss nan, acc 0.1
user 82, loss nan, acc 0.18
user 42, loss nan, acc 0.04
user 27, loss nan, acc 0.06
user 3, loss nan, acc 0.08
user 77, loss nan, acc 0.1
user 98, loss nan, acc 0.1
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 77 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 78 |

Malcious user 24 is selected!
user 24, loss 2.299269424875577, acc 0.06, mal loss 110.2175920009613, mal acc 0.11875
user 20, loss nan, acc 0.04
user 78, loss nan, acc 0.12
Malcious user 60 is selected!
user 60, loss 2.299291828771432, acc 0.06, mal loss 110.21886014938354, mal acc 0.11875
user 95, loss nan, acc 0.06
user 91, loss nan, acc 0.06
user 22, loss nan, acc 0.06
user 5, loss nan, acc 0.08
Malcious user 32 is selected!
user 32, loss 2.2992677365740137, acc 0.18, mal loss 110.21885418891907, mal acc 0.11875
user 64, loss nan, acc 0.16
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 78 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 79 |

user 74, loss nan, acc 0.08
Malcious user 24 is selected!
user 24, loss 2.2992929413914682, acc 0.06, mal loss 110.21783113479614, mal acc 0.11875
user 63, loss nan, acc 0.12
user 14, loss nan, acc 0.16
user 67, loss nan, acc 0.12
user 7, loss nan, acc 0.04
user 19, loss nan, acc 0.04
user 2, loss nan, acc 0.12
Malcious user 60 is selected!
user 60, loss 2.2992791831493378, acc 0.06, mal loss 110.21677613258362, mal acc 0.11875
user 30, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 79 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 80 |

Malcious user 24 is selected!
user 24, loss 2.2992746457457542, acc 0.06, mal loss 110.21924376487732, mal acc 0.11875
user 90, loss nan, acc 0.08
user 98, loss nan, acc 0.1
user 45, loss nan, acc 0.14
user 49, loss nan, acc 0.04
Malcious user 57 is selected!
user 57, loss 2.29928107013305, acc 0.12, mal loss 110.21818423271179, mal acc 0.11875
user 1, loss nan, acc 0.08
user 99, loss nan, acc 0.12
user 10, loss nan, acc 0.08
user 71, loss nan, acc 0.16
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 80 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 81 |

user 80, loss nan, acc 0.2
user 72, loss nan, acc 0.1
user 45, loss nan, acc 0.14
user 35, loss nan, acc 0.12
Malcious user 56 is selected!
user 56, loss 2.2992783839503925, acc 0.06, mal loss 110.21974492073059, mal acc 0.11875
Malcious user 88 is selected!
user 88, loss 2.2992483312884966, acc 0.16, mal loss 110.21858263015747, mal acc 0.11875
user 4, loss nan, acc 0.12
user 67, loss nan, acc 0.12
user 79, loss nan, acc 0.04
user 12, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 81 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 82 |

user 67, loss nan, acc 0.12
user 38, loss nan, acc 0.18
user 30, loss nan, acc 0.1
Malcious user 88 is selected!
user 88, loss 2.2993248879909514, acc 0.16, mal loss 110.21924829483032, mal acc 0.11875
user 25, loss nan, acc 0.12
user 63, loss nan, acc 0.12
user 82, loss nan, acc 0.18
user 33, loss nan, acc 0.06
user 29, loss nan, acc 0.18
user 98, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 82 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 83 |

user 63, loss nan, acc 0.12
user 82, loss nan, acc 0.18
user 14, loss nan, acc 0.16
Malcious user 24 is selected!
user 24, loss 2.2992714549104374, acc 0.06, mal loss 110.21895694732666, mal acc 0.11875
user 17, loss nan, acc 0.14
user 51, loss nan, acc 0.1
user 73, loss nan, acc 0.06
user 98, loss nan, acc 0.1
user 86, loss nan, acc 0.06
user 53, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 83 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])

/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 84%|████████▍ | 84/100 [17:13<03:14, 12.15s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 85%|████████▌ | 85/100 [17:26<03:05, 12.39s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 86%|████████▌ | 86/100 [17:38<02:50, 12.21s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 87%|████████▋ | 87/100 [17:51<02:42, 12.53s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 88%|████████▊ | 88/100 [18:02<02:26, 12.21s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 89%|████████▉ | 89/100 [18:15<02:15, 12.28s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 90%|█████████ | 90/100 [18:28<02:05, 12.52s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 91%|█████████ | 91/100 [18:40<01:52, 12.49s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 92%|█████████▏| 92/100 [18:53<01:40, 12.58s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 93%|█████████▎| 93/100 [19:05<01:25, 12.27s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 94%|█████████▍| 94/100 [19:17<01:14, 12.39s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 95%|█████████▌| 95/100 [19:30<01:02, 12.45s/it]
 | Global Training Round : 84 |

Malcious user 56 is selected!
user 56, loss 2.299299828708172, acc 0.06, mal loss 110.2184669971466, mal acc 0.11875
user 77, loss nan, acc 0.1
user 83, loss nan, acc 0.16
user 43, loss nan, acc 0.18
user 38, loss nan, acc 0.18
user 98, loss nan, acc 0.1
Malcious user 32 is selected!
user 32, loss 2.299261905749639, acc 0.18, mal loss 110.21892428398132, mal acc 0.11875
user 73, loss nan, acc 0.06
Malcious user 60 is selected!
user 60, loss 2.2993107929825785, acc 0.06, mal loss 110.21853041648865, mal acc 0.11875
user 11, loss nan, acc 0.14
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 84 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 85 |

user 15, loss nan, acc 0.08
user 44, loss nan, acc 0.06
user 90, loss nan, acc 0.08
user 73, loss nan, acc 0.06
user 64, loss nan, acc 0.16
user 6, loss nan, acc 0.14
user 84, loss nan, acc 0.1
user 81, loss nan, acc 0.04
user 16, loss nan, acc 0.12
user 18, loss nan, acc 0.1
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 85 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 86 |

user 84, loss nan, acc 0.1
user 28, loss nan, acc 0.08
user 92, loss nan, acc 0.12
user 99, loss nan, acc 0.12
Malcious user 88 is selected!
user 88, loss 2.2992487092812857, acc 0.16, mal loss 110.2159354686737, mal acc 0.11875
user 62, loss nan, acc 0.18
user 47, loss nan, acc 0.04
user 16, loss nan, acc 0.12
user 46, loss nan, acc 0.08
user 34, loss nan, acc 0.06
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 86 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 87 |

user 92, loss nan, acc 0.12
user 9, loss nan, acc 0.1
user 86, loss nan, acc 0.06
user 18, loss nan, acc 0.1
user 6, loss nan, acc 0.14
user 68, loss nan, acc 0.08
user 96, loss nan, acc 0.1
user 29, loss nan, acc 0.18
user 33, loss nan, acc 0.06
user 50, loss nan, acc 0.18
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 87 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 88 |

user 1, loss nan, acc 0.08
user 8, loss nan, acc 0.12
user 26, loss nan, acc 0.1
user 28, loss nan, acc 0.08
user 94, loss nan, acc 0.1
Malcious user 89 is selected!
user 89, loss 2.2992892528573674, acc 0.12, mal loss 110.21928429603577, mal acc 0.11875
user 75, loss nan, acc 0.12
user 98, loss nan, acc 0.1
user 86, loss nan, acc 0.06
Malcious user 59 is selected!
user 59, loss 2.2993044887979823, acc 0.06, mal loss 110.21827435493469, mal acc 0.11875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 88 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 89 |

user 94, loss nan, acc 0.1
user 97, loss nan, acc 0.08
user 67, loss nan, acc 0.12
user 91, loss nan, acc 0.06
user 51, loss nan, acc 0.1
user 3, loss nan, acc 0.08
Malcious user 56 is selected!
user 56, loss 2.2992903401454288, acc 0.06, mal loss 110.21756744384766, mal acc 0.11875
user 12, loss nan, acc 0.12
user 84, loss nan, acc 0.1
user 61, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 89 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 90 |

user 13, loss nan, acc 0.04
user 2, loss nan, acc 0.12
user 63, loss nan, acc 0.12
user 5, loss nan, acc 0.08
user 91, loss nan, acc 0.06
Malcious user 56 is selected!
user 56, loss 2.299307057261467, acc 0.06, mal loss 110.21924805641174, mal acc 0.11875
user 20, loss nan, acc 0.04
user 26, loss nan, acc 0.1
user 75, loss nan, acc 0.12
user 33, loss nan, acc 0.06
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 90 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 91 |

user 45, loss nan, acc 0.14
user 97, loss nan, acc 0.08
user 96, loss nan, acc 0.1
user 65, loss nan, acc 0.14
user 68, loss nan, acc 0.08
user 42, loss nan, acc 0.04
user 61, loss nan, acc 0.08
user 7, loss nan, acc 0.04
user 29, loss nan, acc 0.18
user 69, loss nan, acc 0.12
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 91 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 92 |

user 34, loss nan, acc 0.06
user 70, loss nan, acc 0.14
user 92, loss nan, acc 0.12
user 97, loss nan, acc 0.08
user 58, loss nan, acc 0.16
Malcious user 23 is selected!
user 23, loss 2.299270374576251, acc 0.06, mal loss 110.21726179122925, mal acc 0.11875
user 33, loss nan, acc 0.06
user 63, loss nan, acc 0.12
user 11, loss nan, acc 0.14
user 13, loss nan, acc 0.04
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 92 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 93 |

user 9, loss nan, acc 0.1
Malcious user 88 is selected!
user 88, loss 2.2992720449964206, acc 0.16, mal loss 110.2206666469574, mal acc 0.11875
user 83, loss nan, acc 0.16
user 64, loss nan, acc 0.16
user 80, loss nan, acc 0.2
user 3, loss nan, acc 0.08
Malcious user 24 is selected!
user 24, loss 2.299304540952047, acc 0.06, mal loss 110.218825340271, mal acc 0.11875
user 19, loss nan, acc 0.04
user 5, loss nan, acc 0.08
user 10, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 93 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 94 |

user 3, loss nan, acc 0.08
Malcious user 24 is selected!
user 24, loss 2.299293509622415, acc 0.06, mal loss 110.21810793876648, mal acc 0.11875
user 86, loss nan, acc 0.06
user 90, loss nan, acc 0.08
user 68, loss nan, acc 0.08
user 35, loss nan, acc 0.12
user 92, loss nan, acc 0.12
user 7, loss nan, acc 0.04
user 22, loss nan, acc 0.06
user 78, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 94 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 95 |

Malcious user 89 is selected!
user 89, loss 2.299262395997842, acc 0.12, mal loss 110.21740627288818, mal acc 0.11875
user 5, loss nan, acc 0.08
user 10, loss nan, acc 0.08
user 48, loss nan, acc 0.1
user 51, loss nan, acc 0.1
user 68, loss nan, acc 0.08
user 64, loss nan, acc 0.16
user 40, loss nan, acc 0.08
user 52, loss nan, acc 0.12
user 31, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 95 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 96 |

/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 96%|█████████▌| 96/100 [19:42<00:49, 12.33s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 97%|█████████▋| 97/100 [19:55<00:37, 12.51s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 98%|█████████▊| 98/100 [20:07<00:24, 12.32s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 99%|█████████▉| 99/100 [20:19<00:12, 12.42s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
100%|██████████| 100/100 [20:33<00:00, 12.67s/it]100%|██████████| 100/100 [20:33<00:00, 12.33s/it]
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
user 69, loss nan, acc 0.12
user 26, loss nan, acc 0.1
user 5, loss nan, acc 0.08
user 43, loss nan, acc 0.18
user 36, loss nan, acc 0.12
user 50, loss nan, acc 0.18
user 1, loss nan, acc 0.08
user 85, loss nan, acc 0.1
user 3, loss nan, acc 0.08
user 76, loss nan, acc 0.16
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 96 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 97 |

user 36, loss nan, acc 0.12
Malcious user 24 is selected!
user 24, loss 2.2992946078379948, acc 0.06, mal loss 110.21900391578674, mal acc 0.11875
user 12, loss nan, acc 0.12
user 28, loss nan, acc 0.08
user 38, loss nan, acc 0.18
user 68, loss nan, acc 0.08
user 44, loss nan, acc 0.06
user 11, loss nan, acc 0.14
user 55, loss nan, acc 0.1
user 42, loss nan, acc 0.04
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 97 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 98 |

user 0, loss nan, acc 0.08
user 25, loss nan, acc 0.12
user 85, loss nan, acc 0.1
Malcious user 60 is selected!
user 60, loss 2.299269543091456, acc 0.06, mal loss 110.21877360343933, mal acc 0.11875
user 26, loss nan, acc 0.1
user 10, loss nan, acc 0.08
user 81, loss nan, acc 0.04
user 98, loss nan, acc 0.1
user 58, loss nan, acc 0.16
user 65, loss nan, acc 0.14
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 98 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 99 |

user 74, loss nan, acc 0.08
user 80, loss nan, acc 0.2
user 76, loss nan, acc 0.16
user 27, loss nan, acc 0.06
user 50, loss nan, acc 0.18
user 45, loss nan, acc 0.14
user 75, loss nan, acc 0.12
user 92, loss nan, acc 0.12
user 37, loss nan, acc 0.28
user 15, loss nan, acc 0.08
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 99 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 100 |

user 49, loss nan, acc 0.04
user 87, loss nan, acc 0.08
user 13, loss nan, acc 0.04
user 78, loss nan, acc 0.12
user 77, loss nan, acc 0.1
user 85, loss nan, acc 0.1
user 30, loss nan, acc 0.1
user 45, loss nan, acc 0.14
user 5, loss nan, acc 0.08
user 14, loss nan, acc 0.16
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 100 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])

 
 Results after 100 global rounds of training:
|---- Test Accuracy: 10.00%

 Total Run Time: 1235.0009
Running fedavg.py with --dataset=cifar --label_tampering=none --weight_tampering=random

Experimental details:
    Model     : cnn
    Optimizer : sgd
    Learning  : 0.01
    Global Rounds   : 100

    Federated parameters:
    IID
    Fraction of users  : 0.1
    Local Batch size   : 10
    Local Epochs       : 10

CNNCifar(
  (conv1): Conv2d(3, 6, kernel_size=(5, 5), stride=(1, 1))
  (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (conv2): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))
  (fc1): Linear(in_features=400, out_features=120, bias=True)
  (fc2): Linear(in_features=120, out_features=84, bias=True)
  (fc3): Linear(in_features=84, out_features=10, bias=True)
)
[7956 7679 5752  627 4354 9636 4916  704 2160  365 4692 7131 1702 7326
 6900 3894 4739 1204 7662 6603 7591 5181 2520 6113 7333 9014 4710 1880
 7655 3590  390 9156 7601  344 4866 3419 1922 5319  601 9427  359 3442
 6710 6138 3382 6686 4105 6093 7886 2131 3574 6175  296 7643 3643  918
  459 9186 8365 3278 8803 1212 9218 8229 7494 3244 7442 8091 1379 2636
  880 8871 7727 8764  313 7053 7862 4812 1262 4731 7987 1659 3651 7873
 5246 8108 4961 4681 5648 9550 8189 6437 3741 8959 4100 3194 6020 1873
 8827 5318 6110 7600 4445 8329 1087 9901 4725 4927 8714 5554 7328 7953
 2283 2803 1612 8845  638 2375 5366 5800 1415 1791 8173   20 3009 6936
 7161 6588 3922 6183  999 7306 3488 8853  512 5089 5925  921 3781 5380
 6078  855 8721   22 9727 3689 5453 6444 6964 1754 2765 6364 6827 4350
 2819 6155 6792 9177 6661 7864 5523 8117 7208 2411 5618   91 5413  508
 1115 8854 6075 6727 3567 2207  630 5840 1777 1576 7224 2175 2750 1146
 6395 8536 1668 2658 8693 3426 4797 7756 4011 2199 4137 9575 1917 9214
 4431 3478 4863 2322 7273 9115 4477 4072 8982 4213 5092 8504 4512 6816
 2965 7064 9251 6889 8842 7015 5411 1804 7622 3505 8100 4259  940 3707
 7285 5262 3911 9337 1973  755 2337 2211 7795 7351 2570 4763 3300 6847
  449 8917 7856 7136  467 7522 6737 6176  761 2514 6101 5608 4801 8425
 6154 5073 4497  862 2964 6425 9218 8667 5700 5659 3322 3383 6100 4293
 8102 6779  503 5220 1686 9028 6467 3684 5512 4125 9387 7864  986 9361
 6315 8163 2345 3052 8785 7611 9585 8922 7354 2442 5014 5456 6082 5135
 2925 8413 3687 4944 8183 4754 7553 6755 9769 2147 1981 5429  145 8005
 5299 1266 7898 1584 1282 5920  821 8667 3081 6625 3076 6613 9951 2815
 4303 9507 1504 8043 6958 8873 1400 2711  648 6316 1293 6752 1021 9280
 2625 9275 8622 1923 1463 3647 5995 2913 1769 2049 2808 8609 8840 2359
 8967 7609 2965 6882 7883 4404 3143 7292 4826 1013  993 9301 1356   63
 8551 8472 7162 1761 7308 7943 2967 9134 8591  596 3460 2072 4523 6459
 2898 8146 7367 1416 1167 5868 8371 9586 3680 9950 7865 6705 1155 8439
 8651  524 9435 9373 4849 7979 9087 4475 2185 3497 9648  991 3051 3038
 9508 2686 2092 3730  335  817 9367 9072 9395 2897 8428 6670 3411 1103
 7478 3525 2596 1354 3608 6134 4917 2244 4746 6384  797 8550 8631 6827
 3349 4969 5923 2826 8535 8895 7368 8345 6631 9118 9266 3493 5590 8638
 3473 3138 8919 1782 3485 6247 2476 5905 1147 9414 8439 3128 4853 5613
   93 1308 3327 3050 9418 3504 6372  779 5899 6509 7448  691   18 4920
 4083 9390  846 8120]
malcious dataset true labels: [4, 6, 3, 4, 7, 6, 6, 7, 0, 4, 8, 6, 9, 4, 3, 7, 6, 6, 5, 9, 6, 1, 1, 2, 6, 7, 3, 1, 8, 7, 1, 6, 8, 8, 9, 4, 5, 7, 5, 1, 0, 6, 3, 3, 2, 9, 7, 2, 7, 7, 5, 3, 6, 8, 8, 8, 6, 7, 6, 0, 3, 1, 3, 8, 2, 7, 7, 7, 7, 1, 8, 9, 6, 1, 0, 1, 1, 8, 8, 4, 0, 8, 0, 1, 7, 5, 8, 9, 8, 6, 8, 0, 2, 1, 7, 3, 6, 6, 2, 1, 9, 8, 9, 8, 6, 3, 9, 1, 4, 9, 4, 1, 4, 5, 3, 2, 0, 0, 1, 2, 7, 4, 5, 7, 7, 9, 5, 0, 2, 5, 8, 4, 1, 2, 6, 6, 3, 9, 2, 1, 2, 7, 6, 4, 6, 7, 2, 3, 5, 7, 9, 3, 3, 4, 1, 8, 3, 9, 4, 1, 6, 8, 1, 0, 0, 3, 3, 9, 1, 4, 3, 6, 6, 3, 2, 2, 4, 7, 3, 3, 5, 2, 8, 1, 9, 7, 9, 0, 5, 5, 7, 2, 4, 5, 8, 9, 1, 4, 1, 0, 4, 8, 6, 5, 2, 4, 9, 1, 8, 1, 7, 5, 6, 5, 4, 3, 2, 5, 9, 4, 6, 5, 9, 6, 1, 4, 9, 5, 0, 2, 7, 7, 5, 2, 0, 0, 4, 8, 2, 0, 6, 1, 3, 9, 8, 9, 6, 9, 9, 9, 2, 6, 4, 8, 8, 3, 0, 2, 3, 4, 3, 2, 2, 8, 1, 9, 3, 8, 4, 0, 0, 8, 3, 9, 9, 8, 1, 1, 3, 8, 6, 0, 1, 3, 8, 7, 4, 9, 0, 4, 7, 1, 0, 1, 4, 9, 9, 8, 3, 3, 9, 9, 8, 7, 3, 6, 7, 1, 7, 0, 1, 7, 9, 8, 2, 4, 9, 4, 2, 8, 0, 3, 5, 0, 1, 0, 7, 5, 5, 5, 4, 7, 4, 9, 1, 9, 2, 8, 4, 1, 0, 1, 0, 0, 1, 3, 2, 6, 2, 2, 2, 0, 7, 9, 9, 3, 3, 5, 3, 1, 4, 7, 2, 3, 8, 2, 5, 1, 4, 1, 7, 5, 6, 7, 1, 6, 4, 6, 8, 8, 3, 3, 4, 9, 2, 5, 0, 3, 3, 3, 9, 8, 4, 0, 2, 1, 5, 3, 3, 1, 0, 0, 3, 5, 8, 3, 8, 7, 1, 1, 9, 5, 9, 9, 7, 3, 5, 3, 5, 0, 7, 2, 9, 1, 0, 3, 5, 9, 6, 7, 4, 1, 2, 3, 6, 1, 0, 4, 7, 0, 5, 9, 7, 4, 8, 0, 4, 0, 2, 8, 7, 3, 1, 0, 8, 1, 6, 5, 8, 9, 7, 5, 6, 5, 7, 0, 8, 9, 1, 5, 1, 9, 9, 2, 8, 7, 8, 7, 2, 8], malicious labels: [4, 6, 3, 4, 7, 6, 6, 7, 0, 4, 8, 6, 9, 4, 3, 7, 6, 6, 5, 9, 6, 1, 1, 2, 6, 7, 3, 1, 8, 7, 1, 6, 8, 8, 9, 4, 5, 7, 5, 1, 0, 6, 3, 3, 2, 9, 7, 2, 7, 7, 5, 3, 6, 8, 8, 8, 6, 7, 6, 0, 3, 1, 3, 8, 2, 7, 7, 7, 7, 1, 8, 9, 6, 1, 0, 1, 1, 8, 8, 4, 0, 8, 0, 1, 7, 5, 8, 9, 8, 6, 8, 0, 2, 1, 7, 3, 6, 6, 2, 1, 9, 8, 9, 8, 6, 3, 9, 1, 4, 9, 4, 1, 4, 5, 3, 2, 0, 0, 1, 2, 7, 4, 5, 7, 7, 9, 5, 0, 2, 5, 8, 4, 1, 2, 6, 6, 3, 9, 2, 1, 2, 7, 6, 4, 6, 7, 2, 3, 5, 7, 9, 3, 3, 4, 1, 8, 3, 9, 4, 1, 6, 8, 1, 0, 0, 3, 3, 9, 1, 4, 3, 6, 6, 3, 2, 2, 4, 7, 3, 3, 5, 2, 8, 1, 9, 7, 9, 0, 5, 5, 7, 2, 4, 5, 8, 9, 1, 4, 1, 0, 4, 8, 6, 5, 2, 4, 9, 1, 8, 1, 7, 5, 6, 5, 4, 3, 2, 5, 9, 4, 6, 5, 9, 6, 1, 4, 9, 5, 0, 2, 7, 7, 5, 2, 0, 0, 4, 8, 2, 0, 6, 1, 3, 9, 8, 9, 6, 9, 9, 9, 2, 6, 4, 8, 8, 3, 0, 2, 3, 4, 3, 2, 2, 8, 1, 9, 3, 8, 4, 0, 0, 8, 3, 9, 9, 8, 1, 1, 3, 8, 6, 0, 1, 3, 8, 7, 4, 9, 0, 4, 7, 1, 0, 1, 4, 9, 9, 8, 3, 3, 9, 9, 8, 7, 3, 6, 7, 1, 7, 0, 1, 7, 9, 8, 2, 4, 9, 4, 2, 8, 0, 3, 5, 0, 1, 0, 7, 5, 5, 5, 4, 7, 4, 9, 1, 9, 2, 8, 4, 1, 0, 1, 0, 0, 1, 3, 2, 6, 2, 2, 2, 0, 7, 9, 9, 3, 3, 5, 3, 1, 4, 7, 2, 3, 8, 2, 5, 1, 4, 1, 7, 5, 6, 7, 1, 6, 4, 6, 8, 8, 3, 3, 4, 9, 2, 5, 0, 3, 3, 3, 9, 8, 4, 0, 2, 1, 5, 3, 3, 1, 0, 0, 3, 5, 8, 3, 8, 7, 1, 1, 9, 5, 9, 9, 7, 3, 5, 3, 5, 0, 7, 2, 9, 1, 0, 3, 5, 9, 6, 7, 4, 1, 2, 3, 6, 1, 0, 4, 7, 0, 5, 9, 7, 4, 8, 0, 4, 0, 2, 8, 7, 3, 1, 0, 8, 1, 6, 5, 8, 9, 7, 5, 6, 5, 7, 0, 8, 9, 1, 5, 1, 9, 9, 2, 8, 7, 8, 7, 2, 8]
  0%|          | 0/100 [00:00<?, ?it/s]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  1%|          | 1/100 [00:12<20:53, 12.66s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  2%|▏         | 2/100 [00:25<20:49, 12.75s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  3%|▎         | 3/100 [00:37<20:25, 12.63s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  4%|▍         | 4/100 [00:51<20:28, 12.79s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  5%|▌         | 5/100 [01:03<19:54, 12.57s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  6%|▌         | 6/100 [01:15<19:25, 12.40s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  7%|▋         | 7/100 [01:28<19:32, 12.61s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  8%|▊         | 8/100 [01:40<19:06, 12.46s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
  9%|▉         | 9/100 [01:52<18:54, 12.46s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 10%|█         | 10/100 [02:06<19:00, 12.67s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 11%|█         | 11/100 [02:18<18:36, 12.55s/it]
 | Global Training Round : 1 |

Malcious user 31 is selected!
user 31, loss 10570038.330124367, acc 0.06, mal loss 110.413321018219, mal acc 0.10625
user 53, loss 2.2794224417209628, acc 0.14
user 80, loss 2.2903083300590517, acc 0.18
user 86, loss 2.2909129762649534, acc 0.16
Malcious user 9 is selected!
user 9, loss 38944333.64349679, acc 0.04, mal loss 110.46904134750366, mal acc 0.11875
Malcious user 7 is selected!
user 7, loss 16118400.767679086, acc 0.26, mal loss 110.64758563041687, mal acc 0.11041666666666666
user 77, loss 2.2905472040176393, acc 0.22
user 49, loss 2.293231455683708, acc 0.18
user 90, loss 2.2895544242858885, acc 0.14
user 79, loss 2.2883331418037414, acc 0.22
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 1 global rounds:
Training Loss : 6563278.876361022
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 2 |

user 84, loss nan, acc 0.1
user 40, loss nan, acc 0.08
user 85, loss nan, acc 0.1
user 48, loss nan, acc 0.1
user 24, loss nan, acc 0.12
user 39, loss nan, acc 0.2
user 89, loss nan, acc 0.12
user 53, loss nan, acc 0.08
user 94, loss nan, acc 0.1
user 45, loss nan, acc 0.14
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 2 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 3 |

user 32, loss nan, acc 0.04
user 79, loss nan, acc 0.04
user 83, loss nan, acc 0.16
user 16, loss nan, acc 0.12
user 90, loss nan, acc 0.08
user 82, loss nan, acc 0.18
user 15, loss nan, acc 0.08
user 64, loss nan, acc 0.16
user 62, loss nan, acc 0.18
user 43, loss nan, acc 0.18
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 3 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 4 |

user 51, loss nan, acc 0.1
user 79, loss nan, acc 0.04
Malcious user 42 is selected!
user 42, loss 8121235.095223008, acc 0.14, mal loss 110.47968339920044, mal acc 0.09166666666666666
user 65, loss nan, acc 0.14
user 4, loss nan, acc 0.12
user 29, loss nan, acc 0.18
user 50, loss nan, acc 0.18
Malcious user 11 is selected!
user 11, loss 5927308.700153363, acc 0.04, mal loss 110.38665819168091, mal acc 0.1125
user 90, loss nan, acc 0.08
user 17, loss nan, acc 0.14
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 4 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 5 |

user 94, loss nan, acc 0.1
user 69, loss nan, acc 0.12
user 45, loss nan, acc 0.14
user 16, loss nan, acc 0.12
user 82, loss nan, acc 0.18
Malcious user 8 is selected!
user 8, loss 4382307.890618441, acc 0.06, mal loss 110.30368733406067, mal acc 0.11875
user 14, loss nan, acc 0.16
user 1, loss nan, acc 0.08
user 89, loss nan, acc 0.12
user 10, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 5 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 6 |

user 74, loss nan, acc 0.08
user 26, loss nan, acc 0.1
user 49, loss nan, acc 0.04
Malcious user 38 is selected!
user 38, loss 31447461.337669425, acc 0.14, mal loss 110.44837355613708, mal acc 0.11875
user 28, loss nan, acc 0.08
user 15, loss nan, acc 0.08
Malcious user 7 is selected!
user 7, loss 7946379.288796711, acc 0.14, mal loss 110.4662299156189, mal acc 0.11041666666666666
user 51, loss nan, acc 0.1
Malcious user 31 is selected!
user 31, loss 5623809.882932823, acc 0.08, mal loss 110.82202935218811, mal acc 0.11875
user 6, loss nan, acc 0.14
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 6 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 7 |

user 21, loss nan, acc 0.02
user 54, loss nan, acc 0.08
user 28, loss nan, acc 0.08
user 58, loss nan, acc 0.16
user 47, loss nan, acc 0.04
user 84, loss nan, acc 0.1
user 13, loss nan, acc 0.04
Malcious user 38 is selected!
user 38, loss 23852582.61132817, acc 0.14, mal loss 110.61164236068726, mal acc 0.11875
user 83, loss nan, acc 0.16
user 92, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 7 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 8 |

user 36, loss nan, acc 0.12
Malcious user 9 is selected!
user 9, loss 17577681.489142932, acc 0.14, mal loss 110.51956939697266, mal acc 0.10625
user 16, loss nan, acc 0.12
user 62, loss nan, acc 0.18
user 82, loss nan, acc 0.18
user 52, loss nan, acc 0.12
user 68, loss nan, acc 0.08
user 30, loss nan, acc 0.1
user 64, loss nan, acc 0.16
user 45, loss nan, acc 0.14
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 8 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 9 |

Malcious user 7 is selected!
user 7, loss 22983751.40766543, acc 0.12, mal loss 110.5669195652008, mal acc 0.10625
user 34, loss nan, acc 0.06
Malcious user 5 is selected!
user 5, loss 9464594.63607334, acc 0.08, mal loss 110.39882445335388, mal acc 0.11875
user 32, loss nan, acc 0.04
user 64, loss nan, acc 0.16
user 79, loss nan, acc 0.04
user 44, loss nan, acc 0.06
user 0, loss nan, acc 0.08
user 14, loss nan, acc 0.16
user 17, loss nan, acc 0.14
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 9 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 10 |

user 69, loss nan, acc 0.12
user 37, loss nan, acc 0.28
user 95, loss nan, acc 0.06
user 15, loss nan, acc 0.08
user 27, loss nan, acc 0.06
user 46, loss nan, acc 0.08
user 72, loss nan, acc 0.1
user 29, loss nan, acc 0.18
user 84, loss nan, acc 0.1
user 12, loss nan, acc 0.12
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 10 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 11 |

user 74, loss nan, acc 0.08
user 65, loss nan, acc 0.14
user 69, loss nan, acc 0.12
user 16, loss nan, acc 0.12
user 64, loss nan, acc 0.16
user 43, loss nan, acc 0.18
user 44, loss nan, acc 0.06
user 78, loss nan, acc 0.12
user 63, loss nan, acc 0.12
user 47, loss nan, acc 0.04
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 11 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 12 |

Malcious user 38 is selected!
user 38, loss 26859035.822947364, acc 0.14, mal loss 110.39175581932068, mal acc 0.11875
user 36, loss nan, acc 0.12
user 15, loss nan, acc 0.08
user 19, loss nan, acc 0.04
user 64, loss nan, acc 0.16
user 60, loss nan, acc 0.08
user 20, loss nan, acc 0.04
user 72, loss nan, acc 0.1
user 35, loss nan, acc 0.12
user 70, loss nan, acc 0.14
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 12 global rounds:
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 12%|█▏        | 12/100 [02:31<18:32, 12.64s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 13%|█▎        | 13/100 [02:43<18:14, 12.58s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 14%|█▍        | 14/100 [02:56<18:06, 12.63s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 15%|█▌        | 15/100 [03:07<17:28, 12.33s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 16%|█▌        | 16/100 [03:20<17:08, 12.25s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 17%|█▋        | 17/100 [03:32<17:01, 12.30s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 18%|█▊        | 18/100 [03:44<16:45, 12.26s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 19%|█▉        | 19/100 [03:57<16:57, 12.56s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 20%|██        | 20/100 [04:10<16:39, 12.50s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 21%|██        | 21/100 [04:22<16:15, 12.35s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 22%|██▏       | 22/100 [04:34<16:06, 12.39s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 23%|██▎       | 23/100 [04:47<16:03, 12.52s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 24%|██▍       | 24/100 [04:59<15:40, 12.38s/it]Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 13 |

user 2, loss nan, acc 0.12
user 46, loss nan, acc 0.08
user 4, loss nan, acc 0.12
user 35, loss nan, acc 0.12
user 88, loss nan, acc 0.08
user 3, loss nan, acc 0.08
user 39, loss nan, acc 0.2
user 52, loss nan, acc 0.12
user 84, loss nan, acc 0.1
user 72, loss nan, acc 0.1
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 13 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 14 |

user 50, loss nan, acc 0.18
user 10, loss nan, acc 0.08
user 2, loss nan, acc 0.12
user 0, loss nan, acc 0.08
user 3, loss nan, acc 0.08
user 80, loss nan, acc 0.2
user 29, loss nan, acc 0.18
user 69, loss nan, acc 0.12
user 56, loss nan, acc 0.1
user 6, loss nan, acc 0.14
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 14 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 15 |

user 63, loss nan, acc 0.12
Malcious user 67 is selected!
user 67, loss 17084462.924254145, acc 0.24, mal loss 110.4139473438263, mal acc 0.11875
user 16, loss nan, acc 0.12
user 96, loss nan, acc 0.1
user 29, loss nan, acc 0.18
user 30, loss nan, acc 0.1
Malcious user 31 is selected!
user 31, loss 46283134.540136576, acc 0.14, mal loss 110.49094748497009, mal acc 0.1125
user 2, loss nan, acc 0.12
Malcious user 7 is selected!
user 7, loss 34615027.1416584, acc 0.08, mal loss 110.47298622131348, mal acc 0.11875
user 36, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 15 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 16 |

user 58, loss nan, acc 0.16
user 72, loss nan, acc 0.1
Malcious user 5 is selected!
user 5, loss 36670631.96678102, acc 0.08, mal loss 110.50290656089783, mal acc 0.11875
Malcious user 42 is selected!
user 42, loss 11402984.97263722, acc 0.06, mal loss 110.47974562644958, mal acc 0.11875
user 86, loss nan, acc 0.06
user 28, loss nan, acc 0.08
user 3, loss nan, acc 0.08
user 84, loss nan, acc 0.1
user 80, loss nan, acc 0.2
Malcious user 38 is selected!
user 38, loss 5230449.541559236, acc 0.06, mal loss 110.44730067253113, mal acc 0.11041666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 16 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 17 |

user 20, loss nan, acc 0.04
user 46, loss nan, acc 0.08
user 1, loss nan, acc 0.08
user 65, loss nan, acc 0.14
user 74, loss nan, acc 0.08
user 50, loss nan, acc 0.18
user 40, loss nan, acc 0.08
Malcious user 7 is selected!
user 7, loss 29844238.118949734, acc 0.26, mal loss 110.40446925163269, mal acc 0.11041666666666666
user 52, loss nan, acc 0.12
Malcious user 8 is selected!
user 8, loss 36395651.96830578, acc 0.06, mal loss 110.55822277069092, mal acc 0.11875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 17 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 18 |

user 83, loss nan, acc 0.16
user 26, loss nan, acc 0.1
user 85, loss nan, acc 0.1
user 34, loss nan, acc 0.06
user 94, loss nan, acc 0.1
user 93, loss nan, acc 0.16
user 2, loss nan, acc 0.12
user 88, loss nan, acc 0.08
user 48, loss nan, acc 0.1
user 86, loss nan, acc 0.06
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 18 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 19 |

user 92, loss nan, acc 0.12
user 58, loss nan, acc 0.16
user 36, loss nan, acc 0.12
user 6, loss nan, acc 0.14
user 82, loss nan, acc 0.18
user 37, loss nan, acc 0.28
user 77, loss nan, acc 0.1
user 14, loss nan, acc 0.16
user 93, loss nan, acc 0.16
user 19, loss nan, acc 0.04
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 19 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 20 |

Malcious user 38 is selected!
user 38, loss 11190102.104068924, acc 0.06, mal loss 110.67415237426758, mal acc 0.1125
user 49, loss nan, acc 0.04
user 86, loss nan, acc 0.06
user 22, loss nan, acc 0.06
user 53, loss nan, acc 0.08
user 56, loss nan, acc 0.1
user 34, loss nan, acc 0.06
user 58, loss nan, acc 0.16
user 57, loss nan, acc 0.1
Malcious user 11 is selected!
user 11, loss 8146505.995876002, acc 0.08, mal loss 110.37406063079834, mal acc 0.11875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 20 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 21 |

user 49, loss nan, acc 0.04
user 87, loss nan, acc 0.08
user 52, loss nan, acc 0.12
user 4, loss nan, acc 0.12
user 65, loss nan, acc 0.14
user 48, loss nan, acc 0.1
user 96, loss nan, acc 0.1
user 92, loss nan, acc 0.12
user 97, loss nan, acc 0.08
user 34, loss nan, acc 0.06
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 21 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 22 |

user 86, loss nan, acc 0.06
user 32, loss nan, acc 0.04
user 55, loss nan, acc 0.1
Malcious user 31 is selected!
user 31, loss 33330912.332476914, acc 0.14, mal loss 110.50477170944214, mal acc 0.1125
user 12, loss nan, acc 0.12
user 90, loss nan, acc 0.08
user 53, loss nan, acc 0.08
user 57, loss nan, acc 0.1
user 15, loss nan, acc 0.08
user 73, loss nan, acc 0.06
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 22 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 23 |

user 1, loss nan, acc 0.08
user 76, loss nan, acc 0.16
user 25, loss nan, acc 0.12
user 77, loss nan, acc 0.1
user 88, loss nan, acc 0.08
user 85, loss nan, acc 0.1
user 30, loss nan, acc 0.1
user 20, loss nan, acc 0.04
user 40, loss nan, acc 0.08
user 96, loss nan, acc 0.1
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 23 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 24 |

user 88, loss nan, acc 0.08
user 26, loss nan, acc 0.1
user 16, loss nan, acc 0.12
user 19, loss nan, acc 0.04
user 55, loss nan, acc 0.1
user 76, loss nan, acc 0.16
user 44, loss nan, acc 0.06
user 78, loss nan, acc 0.12
user 86, loss nan, acc 0.06
user 39, loss nan, acc 0.2
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 24 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])

/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 25%|██▌       | 25/100 [05:12<15:30, 12.41s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 26%|██▌       | 26/100 [05:25<15:39, 12.69s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 27%|██▋       | 27/100 [05:37<15:03, 12.37s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 28%|██▊       | 28/100 [05:50<15:08, 12.62s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 29%|██▉       | 29/100 [06:01<14:37, 12.36s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 30%|███       | 30/100 [06:14<14:36, 12.53s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 31%|███       | 31/100 [06:27<14:17, 12.42s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 32%|███▏      | 32/100 [06:38<13:49, 12.20s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 33%|███▎      | 33/100 [06:50<13:30, 12.10s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 34%|███▍      | 34/100 [07:03<13:27, 12.24s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 35%|███▌      | 35/100 [07:15<13:19, 12.31s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 36%|███▌      | 36/100 [07:28<13:24, 12.57s/it]
 | Global Training Round : 25 |

user 52, loss nan, acc 0.12
user 20, loss nan, acc 0.04
user 72, loss nan, acc 0.1
Malcious user 31 is selected!
user 31, loss 21389862.94818429, acc 0.08, mal loss 110.56251049041748, mal acc 0.11875
Malcious user 71 is selected!
user 71, loss 10341967.756010192, acc 0.06, mal loss 110.47998523712158, mal acc 0.11875
user 58, loss nan, acc 0.16
user 88, loss nan, acc 0.08
user 23, loss nan, acc 0.1
user 98, loss nan, acc 0.1
user 69, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 25 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 26 |

user 56, loss nan, acc 0.1
user 60, loss nan, acc 0.08
user 47, loss nan, acc 0.04
user 55, loss nan, acc 0.1
user 63, loss nan, acc 0.12
user 82, loss nan, acc 0.18
user 30, loss nan, acc 0.1
user 23, loss nan, acc 0.1
user 76, loss nan, acc 0.16
user 26, loss nan, acc 0.1
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 26 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 27 |

user 0, loss nan, acc 0.08
user 81, loss nan, acc 0.04
Malcious user 42 is selected!
user 42, loss 7028153.946663138, acc 0.14, mal loss 110.73571157455444, mal acc 0.11041666666666666
user 1, loss nan, acc 0.08
user 83, loss nan, acc 0.16
Malcious user 8 is selected!
user 8, loss 36505187.621345736, acc 0.18, mal loss 110.48286151885986, mal acc 0.1125
user 51, loss nan, acc 0.1
user 19, loss nan, acc 0.04
user 97, loss nan, acc 0.08
user 20, loss nan, acc 0.04
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 27 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 28 |

user 52, loss nan, acc 0.12
user 83, loss nan, acc 0.16
user 51, loss nan, acc 0.1
user 19, loss nan, acc 0.04
user 35, loss nan, acc 0.12
user 21, loss nan, acc 0.02
user 97, loss nan, acc 0.08
user 47, loss nan, acc 0.04
user 4, loss nan, acc 0.12
user 74, loss nan, acc 0.08
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 28 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 29 |

user 92, loss nan, acc 0.12
user 57, loss nan, acc 0.1
user 77, loss nan, acc 0.1
user 23, loss nan, acc 0.1
user 69, loss nan, acc 0.12
user 90, loss nan, acc 0.08
user 43, loss nan, acc 0.18
user 87, loss nan, acc 0.08
Malcious user 71 is selected!
user 71, loss 21742139.097375575, acc 0.06, mal loss 110.47477149963379, mal acc 0.11875
user 51, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 29 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 30 |

user 69, loss nan, acc 0.12
user 1, loss nan, acc 0.08
user 91, loss nan, acc 0.06
user 75, loss nan, acc 0.12
user 39, loss nan, acc 0.2
user 53, loss nan, acc 0.08
user 54, loss nan, acc 0.08
user 74, loss nan, acc 0.08
user 19, loss nan, acc 0.04
user 22, loss nan, acc 0.06
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 30 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 31 |

user 97, loss nan, acc 0.08
user 69, loss nan, acc 0.12
user 23, loss nan, acc 0.1
user 94, loss nan, acc 0.1
user 60, loss nan, acc 0.08
Malcious user 11 is selected!
user 11, loss 38043556.821109094, acc 0.1, mal loss 110.56333541870117, mal acc 0.11041666666666666
Malcious user 67 is selected!
user 67, loss 12148376.502668338, acc 0.24, mal loss 110.40869569778442, mal acc 0.11875
user 21, loss nan, acc 0.02
Malcious user 38 is selected!
user 38, loss 42754726.78300805, acc 0.06, mal loss 110.48038125038147, mal acc 0.11041666666666666
Malcious user 7 is selected!
user 7, loss 33348992.97418019, acc 0.14, mal loss 110.61413526535034, mal acc 0.11041666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 31 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 32 |

user 77, loss nan, acc 0.1
user 65, loss nan, acc 0.14
user 72, loss nan, acc 0.1
user 22, loss nan, acc 0.06
user 41, loss nan, acc 0.12
user 56, loss nan, acc 0.1
Malcious user 5 is selected!
user 5, loss 5159528.061410794, acc 0.1, mal loss 110.46525454521179, mal acc 0.10625
user 84, loss nan, acc 0.1
user 6, loss nan, acc 0.14
user 17, loss nan, acc 0.14
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 32 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 33 |

user 98, loss nan, acc 0.1
Malcious user 38 is selected!
user 38, loss 6502899.075625356, acc 0.06, mal loss 110.55732083320618, mal acc 0.1125
user 44, loss nan, acc 0.06
user 33, loss nan, acc 0.06
user 26, loss nan, acc 0.1
user 17, loss nan, acc 0.14
user 68, loss nan, acc 0.08
user 91, loss nan, acc 0.06
user 36, loss nan, acc 0.12
user 3, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 33 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 34 |

user 45, loss nan, acc 0.14
user 49, loss nan, acc 0.04
user 36, loss nan, acc 0.12
user 44, loss nan, acc 0.06
user 50, loss nan, acc 0.18
user 94, loss nan, acc 0.1
user 48, loss nan, acc 0.1
user 15, loss nan, acc 0.08
user 59, loss nan, acc 0.04
user 28, loss nan, acc 0.08
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 34 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 35 |

user 48, loss nan, acc 0.1
user 22, loss nan, acc 0.06
user 53, loss nan, acc 0.08
user 24, loss nan, acc 0.12
user 74, loss nan, acc 0.08
user 10, loss nan, acc 0.08
user 21, loss nan, acc 0.02
user 93, loss nan, acc 0.16
user 84, loss nan, acc 0.1
user 6, loss nan, acc 0.14
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 35 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 36 |

user 91, loss nan, acc 0.06
user 6, loss nan, acc 0.14
user 99, loss nan, acc 0.12
user 74, loss nan, acc 0.08
user 10, loss nan, acc 0.08
user 33, loss nan, acc 0.06
user 87, loss nan, acc 0.08
user 94, loss nan, acc 0.1
user 81, loss nan, acc 0.04
user 39, loss nan, acc 0.2
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 36 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 37 |

Malcious user 7 is selected!
user 7, loss 17882679.971188914, acc 0.26, mal loss 110.44540047645569, mal acc 0.11041666666666666
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 37%|███▋      | 37/100 [07:39<12:35, 12.00s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 38%|███▊      | 38/100 [07:51<12:29, 12.10s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 39%|███▉      | 39/100 [08:04<12:31, 12.32s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 40%|████      | 40/100 [08:16<12:13, 12.23s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 41%|████      | 41/100 [08:29<12:14, 12.44s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 42%|████▏     | 42/100 [08:41<11:55, 12.33s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 43%|████▎     | 43/100 [08:54<11:53, 12.51s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 44%|████▍     | 44/100 [09:07<11:45, 12.61s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 45%|████▌     | 45/100 [09:19<11:24, 12.44s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 46%|████▌     | 46/100 [09:32<11:19, 12.57s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 47%|████▋     | 47/100 [09:44<10:53, 12.34s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 48%|████▊     | 48/100 [09:57<10:50, 12.51s/it]user 32, loss nan, acc 0.04
Malcious user 67 is selected!
user 67, loss 5431254.083532798, acc 0.1, mal loss 110.74677038192749, mal acc 0.1125
user 30, loss nan, acc 0.1
user 52, loss nan, acc 0.12
user 0, loss nan, acc 0.08
user 37, loss nan, acc 0.28
Malcious user 8 is selected!
user 8, loss 25437061.37832554, acc 0.18, mal loss 110.45537686347961, mal acc 0.1125
user 59, loss nan, acc 0.04
user 34, loss nan, acc 0.06
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 37 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 38 |

Malcious user 9 is selected!
user 9, loss 10397183.9883007, acc 0.1, mal loss 110.41049098968506, mal acc 0.11041666666666666
user 89, loss nan, acc 0.12
user 30, loss nan, acc 0.1
user 66, loss nan, acc 0.14
user 58, loss nan, acc 0.16
user 53, loss nan, acc 0.08
Malcious user 67 is selected!
user 67, loss 2204558.6631243476, acc 0.24, mal loss 110.33863735198975, mal acc 0.11875
Malcious user 42 is selected!
user 42, loss 23891884.95025982, acc 0.06, mal loss 110.67536640167236, mal acc 0.11875
user 45, loss nan, acc 0.14
user 97, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 38 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 39 |

user 27, loss nan, acc 0.06
user 2, loss nan, acc 0.12
user 74, loss nan, acc 0.08
user 12, loss nan, acc 0.12
user 52, loss nan, acc 0.12
user 70, loss nan, acc 0.14
Malcious user 9 is selected!
user 9, loss 16882782.55522207, acc 0.04, mal loss 110.5331814289093, mal acc 0.11875
user 56, loss nan, acc 0.1
user 99, loss nan, acc 0.12
user 95, loss nan, acc 0.06
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 39 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 40 |

user 18, loss nan, acc 0.1
user 91, loss nan, acc 0.06
user 17, loss nan, acc 0.14
user 26, loss nan, acc 0.1
user 21, loss nan, acc 0.02
user 93, loss nan, acc 0.16
user 10, loss nan, acc 0.08
user 87, loss nan, acc 0.08
user 84, loss nan, acc 0.1
user 63, loss nan, acc 0.12
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 40 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 41 |

user 92, loss nan, acc 0.12
user 88, loss nan, acc 0.08
user 32, loss nan, acc 0.04
user 84, loss nan, acc 0.1
user 74, loss nan, acc 0.08
user 35, loss nan, acc 0.12
user 6, loss nan, acc 0.14
Malcious user 7 is selected!
user 7, loss 46925743.06816335, acc 0.08, mal loss 110.34274768829346, mal acc 0.11875
user 36, loss nan, acc 0.12
user 1, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 41 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 42 |

user 92, loss nan, acc 0.12
user 0, loss nan, acc 0.08
user 69, loss nan, acc 0.12
user 35, loss nan, acc 0.12
user 47, loss nan, acc 0.04
user 51, loss nan, acc 0.1
user 57, loss nan, acc 0.1
user 17, loss nan, acc 0.14
user 55, loss nan, acc 0.1
user 89, loss nan, acc 0.12
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 42 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 43 |

user 82, loss nan, acc 0.18
user 65, loss nan, acc 0.14
user 61, loss nan, acc 0.08
user 73, loss nan, acc 0.06
user 50, loss nan, acc 0.18
user 94, loss nan, acc 0.1
user 33, loss nan, acc 0.06
user 64, loss nan, acc 0.16
user 49, loss nan, acc 0.04
user 21, loss nan, acc 0.02
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 43 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 44 |

Malcious user 71 is selected!
user 71, loss 5479693.597364142, acc 0.06, mal loss 110.3962152004242, mal acc 0.11875
user 62, loss nan, acc 0.18
user 90, loss nan, acc 0.08
user 86, loss nan, acc 0.06
user 99, loss nan, acc 0.12
user 19, loss nan, acc 0.04
user 79, loss nan, acc 0.04
user 49, loss nan, acc 0.04
user 43, loss nan, acc 0.18
user 66, loss nan, acc 0.14
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 44 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 45 |

user 34, loss nan, acc 0.06
user 26, loss nan, acc 0.1
user 48, loss nan, acc 0.1
user 88, loss nan, acc 0.08
user 6, loss nan, acc 0.14
user 76, loss nan, acc 0.16
user 74, loss nan, acc 0.08
user 99, loss nan, acc 0.12
user 63, loss nan, acc 0.12
Malcious user 67 is selected!
user 67, loss 58982408.923679546, acc 0.24, mal loss 110.34620523452759, mal acc 0.11875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 45 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 46 |

user 72, loss nan, acc 0.1
user 21, loss nan, acc 0.02
user 63, loss nan, acc 0.12
user 48, loss nan, acc 0.1
user 60, loss nan, acc 0.08
user 12, loss nan, acc 0.12
user 51, loss nan, acc 0.1
user 40, loss nan, acc 0.08
user 68, loss nan, acc 0.08
user 17, loss nan, acc 0.14
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 46 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 47 |

user 72, loss nan, acc 0.1
Malcious user 11 is selected!
user 11, loss 15021021.904943874, acc 0.18, mal loss 110.6164288520813, mal acc 0.11041666666666666
user 19, loss nan, acc 0.04
user 51, loss nan, acc 0.1
user 52, loss nan, acc 0.12
user 24, loss nan, acc 0.12
user 57, loss nan, acc 0.1
user 78, loss nan, acc 0.12
user 97, loss nan, acc 0.08
user 79, loss nan, acc 0.04
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 47 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 48 |

user 17, loss nan, acc 0.14
user 24, loss nan, acc 0.12
user 79, loss nan, acc 0.04
user 39, loss nan, acc 0.2
user 51, loss nan, acc 0.1
user 26, loss nan, acc 0.1
user 75, loss nan, acc 0.12
user 45, loss nan, acc 0.14
user 35, loss nan, acc 0.12
user 2, loss nan, acc 0.12
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 48 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 49 |

user 89, loss nan, acc 0.12
user 98, loss nan, acc 0.1
Malcious user 38 is selected!
user 38, loss 6426285.400811555, acc 0.08, mal loss 110.6128785610199, mal acc 0.11041666666666666
user 80, loss nan, acc 0.2
user 75, loss nan, acc 0.12
user 43, loss nan, acc 0.18
user 2, loss nan, acc 0.12
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 49%|████▉     | 49/100 [10:09<10:33, 12.42s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 50%|█████     | 50/100 [10:21<10:11, 12.23s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 51%|█████     | 51/100 [10:33<10:08, 12.41s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 52%|█████▏    | 52/100 [10:45<09:49, 12.29s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 53%|█████▎    | 53/100 [10:58<09:37, 12.30s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 54%|█████▍    | 54/100 [11:11<09:32, 12.44s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 55%|█████▌    | 55/100 [11:22<09:13, 12.30s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 56%|█████▌    | 56/100 [11:35<09:06, 12.41s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 57%|█████▋    | 57/100 [11:47<08:49, 12.32s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 58%|█████▊    | 58/100 [12:00<08:41, 12.41s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 59%|█████▉    | 59/100 [12:12<08:28, 12.41s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 60%|██████    | 60/100 [12:24<08:06, 12.16s/it]user 99, loss nan, acc 0.12
Malcious user 11 is selected!
user 11, loss 13424320.97028865, acc 0.08, mal loss 110.44455194473267, mal acc 0.11875
user 25, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 49 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 50 |

user 88, loss nan, acc 0.08
Malcious user 67 is selected!
user 67, loss 18986110.060254, acc 0.14, mal loss 110.342129945755, mal acc 0.11041666666666666
user 49, loss nan, acc 0.04
user 74, loss nan, acc 0.08
user 75, loss nan, acc 0.12
user 37, loss nan, acc 0.28
user 46, loss nan, acc 0.08
user 14, loss nan, acc 0.16
Malcious user 42 is selected!
user 42, loss 5761985.419908052, acc 0.12, mal loss 110.48869252204895, mal acc 0.10625
user 18, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 50 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 51 |

user 90, loss nan, acc 0.08
user 26, loss nan, acc 0.1
Malcious user 8 is selected!
user 8, loss 5652889.556354334, acc 0.06, mal loss 110.68720746040344, mal acc 0.11875
user 81, loss nan, acc 0.04
user 52, loss nan, acc 0.12
user 14, loss nan, acc 0.16
user 94, loss nan, acc 0.1
user 80, loss nan, acc 0.2
user 50, loss nan, acc 0.18
user 29, loss nan, acc 0.18
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 51 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 52 |

user 77, loss nan, acc 0.1
user 25, loss nan, acc 0.12
user 36, loss nan, acc 0.12
user 58, loss nan, acc 0.16
user 70, loss nan, acc 0.14
user 19, loss nan, acc 0.04
user 72, loss nan, acc 0.1
user 55, loss nan, acc 0.1
user 89, loss nan, acc 0.12
user 59, loss nan, acc 0.04
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 52 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 53 |

user 46, loss nan, acc 0.08
user 12, loss nan, acc 0.12
user 30, loss nan, acc 0.1
user 95, loss nan, acc 0.06
user 47, loss nan, acc 0.04
user 88, loss nan, acc 0.08
user 23, loss nan, acc 0.1
user 20, loss nan, acc 0.04
Malcious user 71 is selected!
user 71, loss 23954978.374133985, acc 0.18, mal loss 110.57270836830139, mal acc 0.1125
user 41, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 53 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 54 |

Malcious user 31 is selected!
user 31, loss 10659087.849238655, acc 0.04, mal loss 110.76997685432434, mal acc 0.11041666666666666
user 79, loss nan, acc 0.04
user 18, loss nan, acc 0.1
user 92, loss nan, acc 0.12
user 32, loss nan, acc 0.04
user 74, loss nan, acc 0.08
user 98, loss nan, acc 0.1
user 48, loss nan, acc 0.1
Malcious user 71 is selected!
user 71, loss 77199280.45310083, acc 0.06, mal loss 110.25455665588379, mal acc 0.11875
user 64, loss nan, acc 0.16
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 54 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 55 |

user 16, loss nan, acc 0.12
user 17, loss nan, acc 0.14
user 98, loss nan, acc 0.1
user 55, loss nan, acc 0.1
Malcious user 71 is selected!
user 71, loss 30206919.722875208, acc 0.1, mal loss 110.72006940841675, mal acc 0.11041666666666666
user 30, loss nan, acc 0.1
user 96, loss nan, acc 0.1
user 80, loss nan, acc 0.2
user 43, loss nan, acc 0.18
user 57, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 55 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 56 |

user 96, loss nan, acc 0.1
user 99, loss nan, acc 0.12
user 54, loss nan, acc 0.08
user 68, loss nan, acc 0.08
user 47, loss nan, acc 0.04
user 37, loss nan, acc 0.28
user 70, loss nan, acc 0.14
user 1, loss nan, acc 0.08
user 35, loss nan, acc 0.12
user 86, loss nan, acc 0.06
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 56 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 57 |

user 86, loss nan, acc 0.06
user 23, loss nan, acc 0.1
user 3, loss nan, acc 0.08
user 48, loss nan, acc 0.1
user 4, loss nan, acc 0.12
user 79, loss nan, acc 0.04
user 30, loss nan, acc 0.1
user 41, loss nan, acc 0.12
user 39, loss nan, acc 0.2
user 77, loss nan, acc 0.1
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 57 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 58 |

user 99, loss nan, acc 0.12
user 0, loss nan, acc 0.08
user 32, loss nan, acc 0.04
user 13, loss nan, acc 0.04
user 62, loss nan, acc 0.18
user 37, loss nan, acc 0.28
user 3, loss nan, acc 0.08
user 36, loss nan, acc 0.12
user 25, loss nan, acc 0.12
user 97, loss nan, acc 0.08
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 58 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 59 |

user 48, loss nan, acc 0.1
user 65, loss nan, acc 0.14
user 55, loss nan, acc 0.1
user 32, loss nan, acc 0.04
user 20, loss nan, acc 0.04
user 73, loss nan, acc 0.06
user 68, loss nan, acc 0.08
user 43, loss nan, acc 0.18
user 16, loss nan, acc 0.12
user 94, loss nan, acc 0.1
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 59 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 60 |

user 17, loss nan, acc 0.14
user 80, loss nan, acc 0.2
user 59, loss nan, acc 0.04
Malcious user 31 is selected!
user 31, loss 2091594.8775523808, acc 0.08, mal loss 110.44824409484863, mal acc 0.11875
user 63, loss nan, acc 0.12
user 23, loss nan, acc 0.1
user 93, loss nan, acc 0.16
Malcious user 9 is selected!
user 9, loss 26757320.060132004, acc 0.04, mal loss 110.38369703292847, mal acc 0.11875
user 78, loss nan, acc 0.12
user 0, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 60 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 61 |

user 84, loss nan, acc 0.1
user 27, loss nan, acc 0.06
Malcious user 31 is selected!
user 31, loss 44144822.84801985, acc 0.04, mal loss 110.25547480583191, mal acc 0.11041666666666666
user 59, loss nan, acc 0.04
user 87, loss nan, acc 0.08
user 37, loss nan, acc 0.28
user 2, loss nan, acc 0.12
user 80, loss nan, acc 0.2
user 41, loss nan, acc 0.12
user 75, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 61 global rounds:
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 61%|██████    | 61/100 [12:37<08:07, 12.50s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 62%|██████▏   | 62/100 [12:49<07:46, 12.27s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 63%|██████▎   | 63/100 [13:01<07:36, 12.32s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 64%|██████▍   | 64/100 [13:14<07:23, 12.33s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 65%|██████▌   | 65/100 [13:25<07:05, 12.15s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 66%|██████▌   | 66/100 [13:38<07:00, 12.35s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 67%|██████▋   | 67/100 [13:52<06:58, 12.68s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 68%|██████▊   | 68/100 [14:03<06:37, 12.41s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 69%|██████▉   | 69/100 [14:15<06:14, 12.07s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 70%|███████   | 70/100 [14:27<06:00, 12.03s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 71%|███████   | 71/100 [14:40<05:56, 12.28s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 72%|███████▏  | 72/100 [14:52<05:43, 12.28s/it]Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 62 |

user 36, loss nan, acc 0.12
user 17, loss nan, acc 0.14
user 87, loss nan, acc 0.08
user 92, loss nan, acc 0.12
Malcious user 42 is selected!
user 42, loss 43518397.36157744, acc 0.12, mal loss 110.80599427223206, mal acc 0.1125
Malcious user 71 is selected!
user 71, loss 18256669.54509803, acc 0.06, mal loss 110.32416081428528, mal acc 0.11875
user 26, loss nan, acc 0.1
user 50, loss nan, acc 0.18
user 84, loss nan, acc 0.1
user 49, loss nan, acc 0.04
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 62 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 63 |

user 40, loss nan, acc 0.08
user 14, loss nan, acc 0.16
user 68, loss nan, acc 0.08
user 17, loss nan, acc 0.14
user 48, loss nan, acc 0.1
user 86, loss nan, acc 0.06
user 33, loss nan, acc 0.06
user 60, loss nan, acc 0.08
Malcious user 7 is selected!
user 7, loss 14854278.096548077, acc 0.14, mal loss 110.45191025733948, mal acc 0.11041666666666666
user 2, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 63 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 64 |

user 3, loss nan, acc 0.08
user 99, loss nan, acc 0.12
Malcious user 42 is selected!
user 42, loss 10297957.832846476, acc 0.06, mal loss 110.6505618095398, mal acc 0.11875
user 50, loss nan, acc 0.18
user 96, loss nan, acc 0.1
user 72, loss nan, acc 0.1
user 64, loss nan, acc 0.16
user 59, loss nan, acc 0.04
user 74, loss nan, acc 0.08
Malcious user 71 is selected!
user 71, loss 29844362.320321828, acc 0.06, mal loss 110.61498808860779, mal acc 0.11875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 64 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 65 |

user 39, loss nan, acc 0.2
user 29, loss nan, acc 0.18
user 70, loss nan, acc 0.14
user 90, loss nan, acc 0.08
user 16, loss nan, acc 0.12
Malcious user 7 is selected!
user 7, loss 23314537.497201912, acc 0.08, mal loss 110.55034184455872, mal acc 0.11875
user 65, loss nan, acc 0.14
user 4, loss nan, acc 0.12
Malcious user 42 is selected!
user 42, loss 12672420.194680916, acc 0.14, mal loss 110.48409724235535, mal acc 0.11041666666666666
user 80, loss nan, acc 0.2
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 65 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 66 |

user 58, loss nan, acc 0.16
Malcious user 31 is selected!
user 31, loss 56852033.03868482, acc 0.08, mal loss 110.32388663291931, mal acc 0.11875
user 57, loss nan, acc 0.1
user 73, loss nan, acc 0.06
Malcious user 71 is selected!
user 71, loss 28994452.09570101, acc 0.1, mal loss 110.36054635047913, mal acc 0.11041666666666666
user 41, loss nan, acc 0.12
user 2, loss nan, acc 0.12
user 4, loss nan, acc 0.12
user 44, loss nan, acc 0.06
user 87, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 66 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 67 |

user 16, loss nan, acc 0.12
user 93, loss nan, acc 0.16
user 23, loss nan, acc 0.1
user 35, loss nan, acc 0.12
user 45, loss nan, acc 0.14
user 13, loss nan, acc 0.04
user 50, loss nan, acc 0.18
user 78, loss nan, acc 0.12
user 37, loss nan, acc 0.28
user 0, loss nan, acc 0.08
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 67 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 68 |

user 88, loss nan, acc 0.08
user 16, loss nan, acc 0.12
user 23, loss nan, acc 0.1
user 28, loss nan, acc 0.08
user 57, loss nan, acc 0.1
user 30, loss nan, acc 0.1
user 68, loss nan, acc 0.08
user 98, loss nan, acc 0.1
user 63, loss nan, acc 0.12
user 87, loss nan, acc 0.08
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 68 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 69 |

Malcious user 9 is selected!
user 9, loss 52007560.497785725, acc 0.1, mal loss 110.68940305709839, mal acc 0.11041666666666666
user 57, loss nan, acc 0.1
user 81, loss nan, acc 0.04
Malcious user 11 is selected!
user 11, loss 10833445.969843667, acc 0.04, mal loss 110.51104164123535, mal acc 0.1125
user 77, loss nan, acc 0.1
user 47, loss nan, acc 0.04
Malcious user 5 is selected!
user 5, loss 15921427.879658207, acc 0.08, mal loss 110.37648177146912, mal acc 0.11875
user 3, loss nan, acc 0.08
user 80, loss nan, acc 0.2
Malcious user 7 is selected!
user 7, loss 25701757.73139384, acc 0.12, mal loss 110.53299474716187, mal acc 0.10625
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 69 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 70 |

Malcious user 8 is selected!
user 8, loss 11982866.544697672, acc 0.18, mal loss 110.63171815872192, mal acc 0.1125
user 77, loss nan, acc 0.1
user 58, loss nan, acc 0.16
user 16, loss nan, acc 0.12
user 64, loss nan, acc 0.16
user 61, loss nan, acc 0.08
user 28, loss nan, acc 0.08
user 74, loss nan, acc 0.08
user 98, loss nan, acc 0.1
user 69, loss nan, acc 0.12
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 70 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 71 |

user 93, loss nan, acc 0.16
user 95, loss nan, acc 0.06
user 92, loss nan, acc 0.12
user 73, loss nan, acc 0.06
user 88, loss nan, acc 0.08
user 96, loss nan, acc 0.1
user 25, loss nan, acc 0.12
user 21, loss nan, acc 0.02
user 82, loss nan, acc 0.18
user 36, loss nan, acc 0.12
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 71 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 72 |

user 10, loss nan, acc 0.08
user 52, loss nan, acc 0.12
Malcious user 71 is selected!
user 71, loss 129648647.17644009, acc 0.08, mal loss 110.78890824317932, mal acc 0.10625
user 99, loss nan, acc 0.12
user 61, loss nan, acc 0.08
user 96, loss nan, acc 0.1
user 45, loss nan, acc 0.14
user 66, loss nan, acc 0.14
user 77, loss nan, acc 0.1
user 1, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 72 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 73 |

user 54, loss nan, acc 0.08
user 55, loss nan, acc 0.1
user 26, loss nan, acc 0.1
user 72, loss nan, acc 0.1
user 65, loss nan, acc 0.14
user 90, loss nan, acc 0.08
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 73%|███████▎  | 73/100 [15:04<05:29, 12.21s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 74%|███████▍  | 74/100 [15:17<05:26, 12.56s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 75%|███████▌  | 75/100 [15:30<05:12, 12.50s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 76%|███████▌  | 76/100 [15:43<05:02, 12.62s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 77%|███████▋  | 77/100 [15:55<04:48, 12.55s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 78%|███████▊  | 78/100 [16:07<04:32, 12.40s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 79%|███████▉  | 79/100 [16:20<04:24, 12.62s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 80%|████████  | 80/100 [16:33<04:11, 12.59s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 81%|████████  | 81/100 [16:45<03:56, 12.42s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 82%|████████▏ | 82/100 [16:57<03:45, 12.54s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 83%|████████▎ | 83/100 [17:09<03:30, 12.39s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 84%|████████▍ | 84/100 [17:22<03:16, 12.30s/it]user 85, loss nan, acc 0.1
user 73, loss nan, acc 0.06
user 53, loss nan, acc 0.08
user 24, loss nan, acc 0.12
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 73 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 74 |

user 80, loss nan, acc 0.2
user 79, loss nan, acc 0.04
user 50, loss nan, acc 0.18
user 98, loss nan, acc 0.1
user 26, loss nan, acc 0.1
user 83, loss nan, acc 0.16
user 76, loss nan, acc 0.16
user 99, loss nan, acc 0.12
user 29, loss nan, acc 0.18
user 47, loss nan, acc 0.04
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 74 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 75 |

user 14, loss nan, acc 0.16
user 10, loss nan, acc 0.08
user 19, loss nan, acc 0.04
user 28, loss nan, acc 0.08
user 15, loss nan, acc 0.08
user 63, loss nan, acc 0.12
user 91, loss nan, acc 0.06
user 76, loss nan, acc 0.16
user 81, loss nan, acc 0.04
user 58, loss nan, acc 0.16
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 75 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 76 |

user 86, loss nan, acc 0.06
user 3, loss nan, acc 0.08
user 79, loss nan, acc 0.04
user 32, loss nan, acc 0.04
user 36, loss nan, acc 0.12
user 50, loss nan, acc 0.18
user 74, loss nan, acc 0.08
user 1, loss nan, acc 0.08
user 59, loss nan, acc 0.04
user 20, loss nan, acc 0.04
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 76 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 77 |

user 41, loss nan, acc 0.12
user 68, loss nan, acc 0.08
user 54, loss nan, acc 0.08
Malcious user 9 is selected!
user 9, loss 41500004.38413116, acc 0.06, mal loss 110.31144428253174, mal acc 0.1125
user 14, loss nan, acc 0.16
user 74, loss nan, acc 0.08
user 27, loss nan, acc 0.06
user 86, loss nan, acc 0.06
user 91, loss nan, acc 0.06
user 73, loss nan, acc 0.06
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 77 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 78 |

user 39, loss nan, acc 0.2
user 99, loss nan, acc 0.12
user 22, loss nan, acc 0.06
Malcious user 31 is selected!
user 31, loss 65929383.17811008, acc 0.08, mal loss 110.60062289237976, mal acc 0.11875
user 64, loss nan, acc 0.16
user 15, loss nan, acc 0.08
user 3, loss nan, acc 0.08
user 12, loss nan, acc 0.12
user 81, loss nan, acc 0.04
Malcious user 71 is selected!
user 71, loss 24910193.123906597, acc 0.1, mal loss 110.66889023780823, mal acc 0.11041666666666666
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 78 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 79 |

user 19, loss nan, acc 0.04
user 74, loss nan, acc 0.08
user 28, loss nan, acc 0.08
user 79, loss nan, acc 0.04
user 16, loss nan, acc 0.12
user 56, loss nan, acc 0.1
user 70, loss nan, acc 0.14
user 23, loss nan, acc 0.1
user 90, loss nan, acc 0.08
user 37, loss nan, acc 0.28
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 79 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 80 |

user 36, loss nan, acc 0.12
user 65, loss nan, acc 0.14
user 34, loss nan, acc 0.06
user 21, loss nan, acc 0.02
user 3, loss nan, acc 0.08
Malcious user 71 is selected!
user 71, loss 14972829.092119202, acc 0.1, mal loss 110.59400510787964, mal acc 0.11041666666666666
user 88, loss nan, acc 0.08
user 78, loss nan, acc 0.12
user 59, loss nan, acc 0.04
Malcious user 38 is selected!
user 38, loss 16402460.790577704, acc 0.14, mal loss 110.44040846824646, mal acc 0.11875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 80 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 81 |

user 80, loss nan, acc 0.2
user 1, loss nan, acc 0.08
user 62, loss nan, acc 0.18
user 4, loss nan, acc 0.12
user 24, loss nan, acc 0.12
user 97, loss nan, acc 0.08
user 18, loss nan, acc 0.1
user 41, loss nan, acc 0.12
user 19, loss nan, acc 0.04
user 82, loss nan, acc 0.18
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 81 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 82 |

user 82, loss nan, acc 0.18
user 29, loss nan, acc 0.18
user 16, loss nan, acc 0.12
user 56, loss nan, acc 0.1
user 6, loss nan, acc 0.14
user 60, loss nan, acc 0.08
user 24, loss nan, acc 0.12
user 30, loss nan, acc 0.1
user 48, loss nan, acc 0.1
user 55, loss nan, acc 0.1
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 82 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 83 |

user 23, loss nan, acc 0.1
user 30, loss nan, acc 0.1
user 89, loss nan, acc 0.12
user 26, loss nan, acc 0.1
user 75, loss nan, acc 0.12
user 93, loss nan, acc 0.16
Malcious user 71 is selected!
user 71, loss 30051269.734227847, acc 0.08, mal loss 110.5821590423584, mal acc 0.10625
Malcious user 5 is selected!
user 5, loss 24556526.15629638, acc 0.08, mal loss 110.45668840408325, mal acc 0.11875
Malcious user 38 is selected!
user 38, loss 19903228.261414666, acc 0.14, mal loss 110.4416720867157, mal acc 0.11875
user 64, loss nan, acc 0.16
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 83 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 84 |

user 61, loss nan, acc 0.08
user 48, loss nan, acc 0.1
user 91, loss nan, acc 0.06
user 58, loss nan, acc 0.16
user 24, loss nan, acc 0.12
user 81, loss nan, acc 0.04
user 98, loss nan, acc 0.1
user 20, loss nan, acc 0.04
user 94, loss nan, acc 0.1
user 54, loss nan, acc 0.08
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 84 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 85 |

user 35, loss nan, acc 0.12
user 10, loss nan, acc 0.08
user 48, loss nan, acc 0.1
Malcious user 9 is selected!
user 9, loss 44588236.92520466, acc 0.04, mal loss 110.4725911617279, mal acc 0.11875
Malcious user 31 is selected!
user 31, loss 29872940.31115674, acc 0.14, mal loss 110.35604238510132, mal acc 0.1125
Malcious user 71 is selected!
user 71, loss 22393410.04005503, acc 0.06, mal loss 110.32858538627625, mal acc 0.11875
user 41, loss nan, acc 0.12
user 20, loss nan, acc 0.04
Malcious user 38 is selected!
user 38, loss 19063587.5984909, acc 0.08, mal loss 110.32306003570557, mal acc 0.11041666666666666
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 85%|████████▌ | 85/100 [17:34<03:04, 12.31s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 86%|████████▌ | 86/100 [17:47<02:53, 12.39s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 87%|████████▋ | 87/100 [17:58<02:38, 12.21s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 88%|████████▊ | 88/100 [18:11<02:27, 12.33s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 89%|████████▉ | 89/100 [18:23<02:14, 12.18s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 90%|█████████ | 90/100 [18:36<02:04, 12.45s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 91%|█████████ | 91/100 [18:49<01:53, 12.65s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 92%|█████████▏| 92/100 [19:01<01:39, 12.49s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 93%|█████████▎| 93/100 [19:14<01:27, 12.52s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 94%|█████████▍| 94/100 [19:25<01:13, 12.21s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 95%|█████████▌| 95/100 [19:38<01:01, 12.33s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 96%|█████████▌| 96/100 [19:51<00:50, 12.51s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 97%|█████████▋| 97/100 [20:02<00:36, 12.23s/it]user 79, loss nan, acc 0.04
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 85 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 86 |

user 49, loss nan, acc 0.04
user 97, loss nan, acc 0.08
Malcious user 67 is selected!
user 67, loss 12293945.267621502, acc 0.06, mal loss 110.55025029182434, mal acc 0.11041666666666666
user 69, loss nan, acc 0.12
user 20, loss nan, acc 0.04
user 55, loss nan, acc 0.1
user 41, loss nan, acc 0.12
user 10, loss nan, acc 0.08
user 48, loss nan, acc 0.1
user 39, loss nan, acc 0.2
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 86 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 87 |

user 72, loss nan, acc 0.1
user 52, loss nan, acc 0.12
user 32, loss nan, acc 0.04
user 82, loss nan, acc 0.18
Malcious user 67 is selected!
user 67, loss 3073952.878442901, acc 0.24, mal loss 110.36500215530396, mal acc 0.11875
user 34, loss nan, acc 0.06
user 37, loss nan, acc 0.28
user 36, loss nan, acc 0.12
user 24, loss nan, acc 0.12
user 79, loss nan, acc 0.04
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 87 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 88 |

user 13, loss nan, acc 0.04
user 18, loss nan, acc 0.1
user 26, loss nan, acc 0.1
user 98, loss nan, acc 0.1
user 93, loss nan, acc 0.16
user 49, loss nan, acc 0.04
user 14, loss nan, acc 0.16
user 73, loss nan, acc 0.06
user 90, loss nan, acc 0.08
user 85, loss nan, acc 0.1
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 88 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 89 |

user 90, loss nan, acc 0.08
user 57, loss nan, acc 0.1
user 86, loss nan, acc 0.06
user 89, loss nan, acc 0.12
user 59, loss nan, acc 0.04
Malcious user 5 is selected!
user 5, loss 17379639.873308428, acc 0.08, mal loss 110.64752507209778, mal acc 0.11875
user 0, loss nan, acc 0.08
user 62, loss nan, acc 0.18
Malcious user 67 is selected!
user 67, loss 23923612.7537255, acc 0.08, mal loss 110.60120368003845, mal acc 0.10625
user 23, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 89 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 90 |

user 30, loss nan, acc 0.1
user 25, loss nan, acc 0.12
Malcious user 8 is selected!
user 8, loss 8605879.181459105, acc 0.02, mal loss 110.62515997886658, mal acc 0.11041666666666666
user 20, loss nan, acc 0.04
user 56, loss nan, acc 0.1
user 91, loss nan, acc 0.06
user 37, loss nan, acc 0.28
user 54, loss nan, acc 0.08
user 35, loss nan, acc 0.12
user 27, loss nan, acc 0.06
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 90 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 91 |

user 21, loss nan, acc 0.02
user 78, loss nan, acc 0.12
user 64, loss nan, acc 0.16
user 96, loss nan, acc 0.1
user 57, loss nan, acc 0.1
user 74, loss nan, acc 0.08
Malcious user 31 is selected!
user 31, loss 13816719.636615295, acc 0.08, mal loss 110.36669278144836, mal acc 0.11875
user 28, loss nan, acc 0.08
user 76, loss nan, acc 0.16
user 72, loss nan, acc 0.1
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 91 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 92 |

user 2, loss nan, acc 0.12
user 39, loss nan, acc 0.2
user 79, loss nan, acc 0.04
user 92, loss nan, acc 0.12
user 45, loss nan, acc 0.14
user 95, loss nan, acc 0.06
user 23, loss nan, acc 0.1
user 73, loss nan, acc 0.06
user 54, loss nan, acc 0.08
user 40, loss nan, acc 0.08
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 92 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 93 |

user 36, loss nan, acc 0.12
user 20, loss nan, acc 0.04
Malcious user 11 is selected!
user 11, loss 55453184.54069103, acc 0.08, mal loss 110.3509590625763, mal acc 0.11875
user 37, loss nan, acc 0.28
user 22, loss nan, acc 0.06
user 6, loss nan, acc 0.14
user 80, loss nan, acc 0.2
user 27, loss nan, acc 0.06
user 74, loss nan, acc 0.08
user 91, loss nan, acc 0.06
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 93 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 94 |

Malcious user 8 is selected!
user 8, loss 9618592.06562762, acc 0.06, mal loss 110.4120135307312, mal acc 0.11875
user 14, loss nan, acc 0.16
user 83, loss nan, acc 0.16
user 22, loss nan, acc 0.06
user 79, loss nan, acc 0.04
user 40, loss nan, acc 0.08
user 13, loss nan, acc 0.04
user 30, loss nan, acc 0.1
user 81, loss nan, acc 0.04
Malcious user 71 is selected!
user 71, loss 26210769.931379642, acc 0.1, mal loss 110.53789138793945, mal acc 0.0875
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 94 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 95 |

user 20, loss nan, acc 0.04
user 63, loss nan, acc 0.12
user 54, loss nan, acc 0.08
user 35, loss nan, acc 0.12
user 70, loss nan, acc 0.14
user 22, loss nan, acc 0.06
user 29, loss nan, acc 0.18
user 39, loss nan, acc 0.2
user 24, loss nan, acc 0.12
user 90, loss nan, acc 0.08
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 95 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 96 |

user 20, loss nan, acc 0.04
user 61, loss nan, acc 0.08
user 28, loss nan, acc 0.08
user 70, loss nan, acc 0.14
user 1, loss nan, acc 0.08
user 86, loss nan, acc 0.06
user 77, loss nan, acc 0.1
user 43, loss nan, acc 0.18
user 98, loss nan, acc 0.1
user 52, loss nan, acc 0.12
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 96 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 97 |

user 96, loss nan, acc 0.1
user 77, loss nan, acc 0.1
user 19, loss nan, acc 0.04
user 59, loss nan, acc 0.04
user 17, loss nan, acc 0.14
user 18, loss nan, acc 0.1
user 29, loss nan, acc 0.18
user 70, loss nan, acc 0.14
user 28, loss nan, acc 0.08
user 84, loss nan, acc 0.1
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 97 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 98 |

user 92, loss nan, acc 0.12
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 98%|█████████▊| 98/100 [20:15<00:24, 12.45s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
 99%|█████████▉| 99/100 [20:27<00:12, 12.26s/it]/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
100%|██████████| 100/100 [20:40<00:00, 12.39s/it]100%|██████████| 100/100 [20:40<00:00, 12.40s/it]
/home/brinhasavlin/FL-WBC/venv/lib/python3.12/site-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
user 87, loss nan, acc 0.08
user 23, loss nan, acc 0.1
user 21, loss nan, acc 0.02
user 34, loss nan, acc 0.06
user 55, loss nan, acc 0.1
user 58, loss nan, acc 0.16
user 25, loss nan, acc 0.12
user 48, loss nan, acc 0.1
user 60, loss nan, acc 0.08
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 98 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 99 |

user 13, loss nan, acc 0.04
user 86, loss nan, acc 0.06
user 16, loss nan, acc 0.12
user 32, loss nan, acc 0.04
user 58, loss nan, acc 0.16
user 34, loss nan, acc 0.06
user 82, loss nan, acc 0.18
user 4, loss nan, acc 0.12
user 63, loss nan, acc 0.12
user 84, loss nan, acc 0.1
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
 
Avg Training Stats after 99 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])


 | Global Training Round : 100 |

user 49, loss nan, acc 0.04
Malcious user 7 is selected!
user 7, loss 24765885.756650474, acc 0.08, mal loss 110.53978419303894, mal acc 0.11875
user 41, loss nan, acc 0.12
user 21, loss nan, acc 0.02
user 63, loss nan, acc 0.12
user 79, loss nan, acc 0.04
Malcious user 38 is selected!
user 38, loss 56261094.344833866, acc 0.14, mal loss 110.41589975357056, mal acc 0.11875
user 84, loss nan, acc 0.1
user 95, loss nan, acc 0.06
user 54, loss nan, acc 0.08
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
 
Avg Training Stats after 100 global rounds:
Training Loss : nan
Global model Benign Test Accuracy: 10.00% 

Global model Malicious Accuracy: 9.17%, Malicious Loss: nan , Outputs: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])

 
 Results after 100 global rounds of training:
|---- Test Accuracy: 10.00%

 Total Run Time: 1241.1386
